/** @define LogoLoader; use strict */

:root {
  --LogoLoader-color-logo: #4a9ddf;
  --LogoLoader-color-bg: #fff;
  --LogoLoader-color-logo-invert: var(--LogoLoader-color-bg);
  --LogoLoader-color-bg-invert: var(--LogoLoader-color-logo);
  --LogoLoader-rhythm: 1.5rem;
  --LogoLoader-transition-ease: cubic-bezier(.175, .885, .320, 1.275);
}

.LogoLoader {
  position: relative;
  display: inline-block;
  overflow: hidden;
  width: calc(var(--LogoLoader-rhythm) * 1.5);
  height: calc(var(--LogoLoader-rhythm) * 1.5);
  color: var(--LogoLoader-color-logo);
  border-radius: 100px;
  background-color: var(--LogoLoader-color-bg);
}

.LogoLoader--inverted {
  color: var(--LogoLoader-color-logo-invert);
  background-color: var(--LogoLoader-color-bg-invert);
}

.LogoLoader.is-loading {
  animation: rotate .3s infinite linear;
  animation-delay: .05s;
}

.LogoLoader-logo,
.LogoLoader-loader {
  position: absolute;
  top: 0;
  left: 0;
  transition: all .25s var(--LogoLoader-transition-ease);
  transform: scale(1,1);

  fill: currentColor;
}

.LogoLoader-logo {
  transform: scale3d(1,1,1);
  opacity: 1;
}

.LogoLoader:hover .LogoLoader-logo {
  animation: pop .3s var(--LogoLoader-transition-ease);
  animation-iteration-count: 2;
  animation-direction: alternate;
}

.LogoLoader.is-loading .LogoLoader-logo {
  transform: scale(0,0);
  opacity: 0;
}

.LogoLoader-loader {
  transform: scale(2.5,2.5);
  opacity: 0;
}

.LogoLoader.is-loading .LogoLoader-loader {
  transform: scale(1,1);
  opacity: 1;
}

@keyframes rotate {
  to {
    transform: rotate(360deg);
  }
}

@keyframes pop {
  to {
    transform: scale(1.2, 1.2) rotate(15deg);
  }
}
