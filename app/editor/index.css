/** @define Editor; use strict */

:root {
  --Editor-rhythm: 1.5rem;
  --Editor-transition: cubic-bezier(.175, .885, .320, 1.275);
}

.Editor {
  overflow: hidden;
}

.Editor-header,
.Editor-loader,
.Editor-content {
  transition: .2s all var(--Editor-transition);
}

.Editor-header.is-minimised {
  transform: translateY(calc(var(--Editor-rhythm) * -2));
}

.Editor-header.is-minimised .Editor-mainNav {
  visibility: hidden;
}

.Editor-loader {
  position: absolute;
  z-index: 500;
  top: 0;
  left: 50%;
  transform: translate(-50%, calc(var(--Editor-rhythm) * .25));
}

.Editor-loader.is-minimised {
  transform: translateX(-50%) scale(.75, .75);
}

.Editor-mainNav {
  height: calc(var(--Editor-rhythm) * 2);
}

.Editor-content {
  position: fixed;
  top: calc(var(--Editor-rhythm) * 4);
  bottom: 0;
  overflow: auto;
  width: 100%;
  /*TODO: Remove important;*/
  padding: calc(var(--Editor-rhythm) * 1.5) 0 calc(var(--Editor-rhythm) * 1.5) !important;

  -webkit-overlow-scrolling: touch;
}

.Editor-content.is-maximised {
  bottom: calc(var(--Editor-rhythm) * -2);
  transform: translateY(calc(var(--Editor-rhythm) * -2));
}

.Editor-currentDoc {
  max-width: calc(var(--Editor-rhythm) * 3.5);
}

.Editor-currentLang {
  max-width: calc(var(--Editor-rhythm) * 3.5);
}

/**
 * Media Queries
 */

@media (--sm-viewport) {
  .Editor-currentProject {
    max-width: calc(var(--Editor-rhythm) * 3.5);
  }
}

@media (--gtemd-viewport) {
  .Editor-content {
    background-image: url("../images/editor/editor-bg.gif");
    background-repeat: repeat-y;
    background-position: center center;
  }

  .is-horizontal-editor .Editor-content:before {
    left: 50%;
    margin-left: calc(var(--Editor-rhythm) * -.5);
  }

  .is-horizontal-editor .Editor-content:after {
    z-index: -1;
    right: 0;
    width: 50%;
    background-color: #fff;
  }
}
