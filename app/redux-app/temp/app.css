/**
 * Utils
 */

/**
 * Contain floats
 *
 * Make an element expand to contain floated children.
 * Uses pseudo-elements (micro clearfix).
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of the
 *    element.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.u-cf:before,
.u-cf:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */
}

.u-cf:after {
  clear: both;
}

/**
 * New block formatting context
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.

 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */

.u-nbfc {
  overflow: hidden !important;
}

/**
 * New block formatting context (alternative)
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */

.u-nbfcAlt {
  display: table-cell !important;
  /* 1 */
  width: 10000px !important;
  /* 2 */
}

/**
 * Floats
 */

.u-floatLeft {
  float: left !important;
}

.u-floatRight {
  float: right !important;
}

@media (min-width:0) and (max-width:740px) {
  .u-sm-floatNone {
    clear: both;
    float: none !important;
  }
}



.u-bgFaint {
  opacity: .9;
}

.u-bgHigh {
  background-color: rgb(245, 246, 247);
}

.u-bgHigher {
  background-color: rgb(251, 252, 252);
}

.u-bgHighest {
  background-color: #fff;
}

.u-bgLow {
  background-color: rgb(229, 232, 233);
}

.u-bgLower {
  background-color: rgb(222, 225, 226);
}

.u-bgLowest {
  background-color: rgb(215, 217, 218);
}

.u-bgPop {
  border: 1px solid rgba(32, 113, 138, 0.12);
  border-bottom-width: 2px;
}

.u-bgNeutral {
  background-color: #ECEFF0;
}

.u-bgPrimary {
  background-color: #03A6D7;
}

.u-bgSecondary {
  background-color: #20718A;
}

.u-bgDanger {
  background-color: rgb(255, 216, 216);
}

.u-bgWarning {
  background-color: rgb(255, 238, 204);
}

.u-bgUnsure {
  background-color: rgb(253, 252, 232);
}

.u-bgSuccess {
  background-color: rgb(222, 244, 229);
}

.u-bgHighlight {
  background-color: rgb(205, 237, 247);
}

/**
 * Display-type utilities
 */

.u-block {
  display: block !important;
}

.u-hidden {
  display: none !important;
}

/**
 * Completely remove from the flow but leave available to screen readers.
 */

.u-hiddenVisually {
  position: absolute !important;
  overflow: hidden !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
}

.u-inline {
  display: inline !important;
}

/**
 * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
 * inline-block will display at its default size, and not limit its width to
 * 100% of an ancestral container.
 */

.u-inlineBlock {
  display: inline-block !important;
  max-width: 100%;
  /* 1 */
}

.u-table {
  display: table !important;
}

.u-tableCell {
  display: table-cell !important;
}

.u-tableRow {
  display: table-row !important;
}



/**
 * Round box
 *
 * Use of % here will distort box if it is not square
 */

.u-round {
  border-radius: 1000px !important;
  overflow: hidden !important;
}

.u-roundish {
  border-radius: 0.5625rem !important;
  overflow: hidden !important;
}

.u-rounded {
  border-radius: 1.125rem !important;
  overflow: hidden !important;
}

@media (min-width:0) and (max-width:740px) {
  .u-sm-hidden {
    display: none !important;
  }
}

@media (min-width:741px) and (max-width:960px) {
  .u-md-hidden {
    display: none !important;
  }
}

@media (max-width:960px) {
  .u-ltemd-hidden {
    display: none !important;
  }
}

@media (min-width:741px) {
  .u-gtemd-hidden {
    display: none !important;
  }
}

@media (min-width:961px) and (max-width:1270px) {
  .u-lg-hidden {
    display: none !important;
  }
}

@media (min-width:961px) {
  .u-gtelg-hidden {
    display: none !important;
  }
}



/**
 * Definition lists
 *
 * Remove default styling
 */

.u-dlUnstyled > dd {
  margin-left: 0;
}

/**
 * Display definition lists inline
 */

.u-dlInline dt,
.u-dlInline dd {
  display: inline-block;
  margin-right: 0.1875rem;
  margin-left: 0;
}

/**
 * Standard lists
 *
 * Remove default styling
 */

.u-listUnstyled {
  margin-bottom: 0;
  padding-left: 0;
  list-style: none;
}

.u-listUnstyled > li {
  margin-left: 0;
  list-style: none;
}

/**
 * Display list items inline
 */

.u-listInline {
  margin-left: -0.1875rem;
  padding-left: 0;
  list-style: none;
}

.u-listInline > li {
  display: inline-block;
  padding-right: 0.1875rem;
  padding-left: 0.1875rem;
}

/**
 * Display list items inline
 */

.u-listHorizontal {
  /* Remove extra spacing inline-block adds */
  font-size: 0;
  list-style: none;
}

.u-listHorizontal > li {
  /* Return font to normal size */
  font-size: 1rem;
  display: inline-block;
  vertical-align: top;
}

.u-posAbsolute {
  position: absolute !important;
}

/**
 * Pins to all corners by default. But when a width and/or height are
 * provided, the element will be centered in its nearest relatively-positioned
 * ancestor.
 */

.u-posAbsoluteCenter {
  bottom: 0 !important;
  left: 0 !important;
  margin: auto !important;
  position: absolute !important;
  right: 0 !important;
  top: 0 !important;
}

/**
 * 1. Make sure fixed elements are promoted into a new layer, for performance
 *    reasons.
 */

.u-posFixed {
  position: fixed !important;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  /* 1 */
}

.u-posRelative {
  position: relative !important;
}

.u-posStatic {
  position: static !important;
}

.u-posAbsoluteLeft {
  bottom: 0 !important;
  left: 0 !important;
  position: absolute !important;
  top: 0 !important;
}

.u-posAbsoluteRight {
  bottom: 0 !important;
  right: 0 !important;
  position: absolute !important;
  top: 0 !important;
}

.u-posCenterCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

/**
 * Sizing utilities
 */

/* Intrinsic widths
   ========================================================================== */

/**
 * Make an element shrink wrap its content.
 */

.u-sizeFit,
.u-sizeFitAlt {
  display: block !important;
  float: left !important;
  width: auto !important;
}

.u-sizeFitAlt {
  float: right !important;
}

/**
 * Make an element fill the remaining space.
 * N.B. This will hide overflow.
 */

.u-sizeFill {
  display: block !important;
  overflow: hidden !important;
  width: auto !important;
}

/**
 * An alternative method to make an element fill the remaining space.
 * N.B. Do not use if child elements might be wider than the remaining space.
 * In Chrome, Safari, and Firefox it results in undesired layout.
 */

.u-sizeFillAlt {
  display: table-cell !important;
  max-width: 100% !important;
  width: 10000px !important;
}

/**
 * Make an element the width of its parent.
 */

.u-sizeFull {
  box-sizing: border-box !important;
  display: block !important;
  width: 100% !important;
}

/* Proportional widths
   ========================================================================== */

/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 */

.u-size1of12 {
  width: 8.333333333333332% !important;
}

.u-size1of10 {
  width: 10% !important;
}

.u-size1of8 {
  width: 12.5% !important;
}

.u-size1of6,
.u-size2of12 {
  width: 16.666666666666664% !important;
}

.u-size1of5,
.u-size2of10 {
  width: 20% !important;
}

.u-size1of4,
.u-size2of8,
.u-size3of12 {
  width: 25% !important;
}

.u-size3of10 {
  width: 30% !important;
}

.u-size1of3,
.u-size2of6,
.u-size4of12 {
  width: 33.33333333333333% !important;
}

.u-size3of8 {
  width: 37.5% !important;
}

.u-size2of5,
.u-size4of10 {
  width: 40% !important;
}

.u-size5of12 {
  width: 41.66666666666667% !important;
}

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
  width: 50% !important;
}

.u-size7of12 {
  width: 58.333333333333336% !important;
}

.u-size3of5,
.u-size6of10 {
  width: 60% !important;
}

.u-size5of8 {
  width: 62.5% !important;
}

.u-size2of3,
.u-size4of6,
.u-size8of12 {
  width: 66.66666666666666% !important;
}

.u-size7of10 {
  width: 70% !important;
}

.u-size3of4,
.u-size6of8,
.u-size9of12 {
  width: 75% !important;
}

.u-size4of5,
.u-size8of10 {
  width: 80% !important;
}

.u-size5of6,
.u-size10of12 {
  width: 83.33333333333334% !important;
}

.u-size7of8 {
  width: 87.5% !important;
}

.u-size9of10 {
  width: 90% !important;
}

.u-size11of12 {
  width: 91.66666666666666% !important;
}

/**
 * Size: breakpoint 1 (small)
 */

@media (min-width:0) and (max-width:740px) {
  /**
   * Make an element shrink wrap its content.
   */

  .u-sm-sizeFit,
  .u-sm-sizeFitAlt {
    display: block !important;
    float: left !important;
    width: auto !important;
  }

  .u-sm-sizeFitAlt {
    float: right !important;
  }

  /**
   * Make an element fill the remaining space.
   * N.B. This will hide overflow.
   */

  .u-sm-sizeFill {
    display: block !important;
    overflow: hidden !important;
    width: auto !important;
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * N.B. Do not use if child elements might be wider than the remaining space.
   * In Chrome, Safari, and Firefox it results in undesired layout.
   */

  .u-sm-sizeFillAlt {
    display: table-cell !important;
    max-width: 100% !important;
    width: 10000px !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-sm-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

  /* Proportional widths: breakpoint 1 (small)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   */

  .u-sm-size1of12 {
    width: 8.333333333333332% !important;
  }

  .u-sm-size1of10 {
    width: 10% !important;
  }

  .u-sm-size1of8 {
    width: 12.5% !important;
  }

  .u-sm-size1of6,
  .u-sm-size2of12 {
    width: 16.666666666666664% !important;
  }

  .u-sm-size1of5,
  .u-sm-size2of10 {
    width: 20% !important;
  }

  .u-sm-size1of4,
  .u-sm-size2of8,
  .u-sm-size3of12 {
    width: 25% !important;
  }

  .u-sm-size3of10 {
    width: 30% !important;
  }

  .u-sm-size1of3,
  .u-sm-size2of6,
  .u-sm-size4of12 {
    width: 33.33333333333333% !important;
  }

  .u-sm-size3of8 {
    width: 37.5% !important;
  }

  .u-sm-size2of5,
  .u-sm-size4of10 {
    width: 40% !important;
  }

  .u-sm-size5of12 {
    width: 41.66666666666667% !important;
  }

  .u-sm-size1of2,
  .u-sm-size2of4,
  .u-sm-size3of6,
  .u-sm-size4of8,
  .u-sm-size5of10,
  .u-sm-size6of12 {
    width: 50% !important;
  }

  .u-sm-size7of12 {
    width: 58.333333333333336% !important;
  }

  .u-sm-size3of5,
  .u-sm-size6of10 {
    width: 60% !important;
  }

  .u-sm-size5of8 {
    width: 62.5% !important;
  }

  .u-sm-size2of3,
  .u-sm-size4of6,
  .u-sm-size8of12 {
    width: 66.66666666666666% !important;
  }

  .u-sm-size7of10 {
    width: 70% !important;
  }

  .u-sm-size3of4,
  .u-sm-size6of8,
  .u-sm-size9of12 {
    width: 75% !important;
  }

  .u-sm-size4of5,
  .u-sm-size8of10 {
    width: 80% !important;
  }

  .u-sm-size5of6,
  .u-sm-size10of12 {
    width: 83.33333333333334% !important;
  }

  .u-sm-size7of8 {
    width: 87.5% !important;
  }

  .u-sm-size9of10 {
    width: 90% !important;
  }

  .u-sm-size11of12 {
    width: 91.66666666666666% !important;
  }
}

/**
 * Size: breakpoint 2 (medium)
 */

@media (min-width:741px) and (max-width:960px) {
  /**
   * Make an element shrink wrap its content.
   */

  .u-md-sizeFit,
  .u-md-sizeFitAlt {
    display: block !important;
    float: left !important;
    width: auto !important;
  }

  .u-md-sizeFitAlt {
    float: right !important;
  }

  /**
   * Make an element fill the remaining space.
   * N.B. This will hide overflow.
   */

  .u-md-sizeFill {
    display: block !important;
    overflow: hidden !important;
    width: auto !important;
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * N.B. Do not use if child elements might be wider than the remaining space.
   * In Chrome, Safari, and Firefox it results in undesired layout.
   */

  .u-md-sizeFillAlt {
    display: table-cell !important;
    max-width: 100% !important;
    width: 10000px !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-md-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

  /* Proportional widths: breakpoint 2 (medium)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   */

  .u-md-size1of12 {
    width: 8.333333333333332% !important;
  }

  .u-md-size1of10 {
    width: 10% !important;
  }

  .u-md-size1of8 {
    width: 12.5% !important;
  }

  .u-md-size1of6,
  .u-md-size2of12 {
    width: 16.666666666666664% !important;
  }

  .u-md-size1of5,
  .u-md-size2of10 {
    width: 20% !important;
  }

  .u-md-size1of4,
  .u-md-size2of8,
  .u-md-size3of12 {
    width: 25% !important;
  }

  .u-md-size3of10 {
    width: 30% !important;
  }

  .u-md-size1of3,
  .u-md-size2of6,
  .u-md-size4of12 {
    width: 33.33333333333333% !important;
  }

  .u-md-size3of8 {
    width: 37.5% !important;
  }

  .u-md-size2of5,
  .u-md-size4of10 {
    width: 40% !important;
  }

  .u-md-size5of12 {
    width: 41.66666666666667% !important;
  }

  .u-md-size1of2,
  .u-md-size2of4,
  .u-md-size3of6,
  .u-md-size4of8,
  .u-md-size5of10,
  .u-md-size6of12 {
    width: 50% !important;
  }

  .u-md-size7of12 {
    width: 58.333333333333336% !important;
  }

  .u-md-size3of5,
  .u-md-size6of10 {
    width: 60% !important;
  }

  .u-md-size5of8 {
    width: 62.5% !important;
  }

  .u-md-size2of3,
  .u-md-size4of6,
  .u-md-size8of12 {
    width: 66.66666666666666% !important;
  }

  .u-md-size7of10 {
    width: 70% !important;
  }

  .u-md-size3of4,
  .u-md-size6of8,
  .u-md-size9of12 {
    width: 75% !important;
  }

  .u-md-size4of5,
  .u-md-size8of10 {
    width: 80% !important;
  }

  .u-md-size5of6,
  .u-md-size10of12 {
    width: 83.33333333333334% !important;
  }

  .u-md-size7of8 {
    width: 87.5% !important;
  }

  .u-md-size9of10 {
    width: 90% !important;
  }

  .u-md-size11of12 {
    width: 91.66666666666666% !important;
  }
}

/**
 * Size: breakpoint 3 (large)
 */

@media (min-width:961px) and (max-width:1270px) {
  /**
   * Make an element shrink wrap its content.
   */

  .u-lg-sizeFit,
  .u-lg-sizeFitAlt {
    display: block !important;
    float: left !important;
    width: auto !important;
  }

  .u-lg-sizeFitAlt {
    float: right !important;
  }

  /**
   * Make an element fill the remaining space.
   * N.B. This will hide overflow.
   */

  .u-lg-sizeFill {
    display: block !important;
    overflow: hidden !important;
    width: auto !important;
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * N.B. Do not use if child elements might be wider than the remaining space.
   * In Chrome, Safari, and Firefox it results in undesired layout.
   */

  .u-lg-sizeFillAlt {
    display: table-cell !important;
    max-width: 100% !important;
    width: 10000px !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-lg-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

  /* Proportional widths: breakpoint 3 (large)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   */

  .u-lg-size1of12 {
    width: 8.333333333333332% !important;
  }

  .u-lg-size1of10 {
    width: 10% !important;
  }

  .u-lg-size1of8 {
    width: 12.5% !important;
  }

  .u-lg-size1of6,
  .u-lg-size2of12 {
    width: 16.666666666666664% !important;
  }

  .u-lg-size1of5,
  .u-lg-size2of10 {
    width: 20% !important;
  }

  .u-lg-size1of4,
  .u-lg-size2of8,
  .u-lg-size3of12 {
    width: 25% !important;
  }

  .u-lg-size3of10 {
    width: 30% !important;
  }

  .u-lg-size1of3,
  .u-lg-size2of6,
  .u-lg-size4of12 {
    width: 33.33333333333333% !important;
  }

  .u-lg-size3of8 {
    width: 37.5% !important;
  }

  .u-lg-size2of5,
  .u-lg-size4of10 {
    width: 40% !important;
  }

  .u-lg-size5of12 {
    width: 41.66666666666667% !important;
  }

  .u-lg-size1of2,
  .u-lg-size2of4,
  .u-lg-size3of6,
  .u-lg-size4of8,
  .u-lg-size5of10,
  .u-lg-size6of12 {
    width: 50% !important;
  }

  .u-lg-size7of12 {
    width: 58.333333333333336% !important;
  }

  .u-lg-size3of5,
  .u-lg-size6of10 {
    width: 60% !important;
  }

  .u-lg-size5of8 {
    width: 62.5% !important;
  }

  .u-lg-size2of3,
  .u-lg-size4of6,
  .u-lg-size8of12 {
    width: 66.66666666666666% !important;
  }

  .u-lg-size7of10 {
    width: 70% !important;
  }

  .u-lg-size3of4,
  .u-lg-size6of8,
  .u-lg-size9of12 {
    width: 75% !important;
  }

  .u-lg-size4of5,
  .u-lg-size8of10 {
    width: 80% !important;
  }

  .u-lg-size5of6,
  .u-lg-size10of12 {
    width: 83.33333333333334% !important;
  }

  .u-lg-size7of8 {
    width: 87.5% !important;
  }

  .u-lg-size9of10 {
    width: 90% !important;
  }

  .u-lg-size11of12 {
    width: 91.66666666666666% !important;
  }
}



/* Width */

.u-sizeWidth-1-4 {
  width: 0.375rem !important;
}

.u-sizeWidth-1-2 {
  width: 0.75rem !important;
}

.u-sizeWidth-3-4 {
  width: 1.125rem !important;
}

.u-sizeWidth-1 {
  width: 1.5rem !important;
}

.u-sizeWidth-1_1-2 {
  width: 2.25rem !important;
}

.u-sizeWidth-2 {
  width: 3rem !important;
}

.u-sizeWidth-6 {
  width: 9rem !important;
}

/* Height */

.u-sizeHeight-1-4 {
  height: 0.375rem !important;
}

.u-sizeHeight-1-2 {
  height: 0.75rem !important;
}

.u-sizeHeight-3-4 {
  height: 1.125rem !important;
}

.u-sizeHeight-1 {
  height: 1.5rem !important;
}

.u-sizeHeight-1_1-4 {
  height: 1.875rem !important;
}

.u-sizeHeight-1_1-2 {
  height: 2.25rem !important;
}

.u-sizeHeight-2 {
  height: 3rem !important;
}

/* Line Height */

.u-sizeLineHeight-1-4 {
  line-height: 0.375rem !important;
}

.u-sizeLineHeight-1-2 {
  line-height: 0.75rem !important;
}

.u-sizeLineHeight-3-4 {
  line-height: 1.125rem !important;
}

.u-sizeLineHeight-1 {
  line-height: 1.5rem !important;
}

.u-sizeLineHeight-1_1-4 {
  line-height: 1.875rem !important;
}

.u-sizeLineHeight-1_1-2 {
  line-height: 2.25rem !important;
}

.u-sizeLineHeight-2 {
  line-height: 3rem !important;
}



/**
 * Utils - Space
 *
 * Margin and Padding
 * Sizes: 1/4, 1/2, 3/4, 1, 1 1/2, 2
 * Sides: all, top, right, bottom, left, vertical, horizontal;
 */

/**
 * Margin
 *
 * u-sM
 */

/* All */

.u-sM-1-8 {
  margin: 0.1875rem !important;
}

.u-sM-1-4 {
  margin: 0.375rem !important;
}

.u-sM-1-2 {
  margin: 0.75rem !important;
}

.u-sM-3-4 {
  margin: 1.125rem !important;
}

.u-sM-1 {
  margin: 1.5rem !important;
}

.u-sM-1_1-2 {
  margin: 2.25rem !important;
}

.u-sM-2 {
  margin: 3rem !important;
}

/* Top */

.u-sMT-1-8 {
  margin-top: 0.1875rem !important;
}

.u-sMT-1-4 {
  margin-top: 0.375rem !important;
}

.u-sMT-1-2 {
  margin-top: 0.75rem !important;
}

.u-sMT-3-4 {
  margin-top: 1.125rem !important;
}

.u-sMT-1 {
  margin-top: 1.5rem !important;
}

.u-sMT-1_1-2 {
  margin-top: 2.25rem !important;
}

.u-sMT-2 {
  margin-top: 3rem !important;
}

/* Right */

.u-sMR-1-4 {
  margin-right: 0.375rem !important;
}

.u-sMR-1-2 {
  margin-right: 0.75rem !important;
}

.u-sMR-3-4 {
  margin-right: 1.125rem !important;
}

.u-sMR-1 {
  margin-right: 1.5rem !important;
}

.u-sMR-1_1-2 {
  margin-right: 2.25rem !important;
}

.u-sMR-2 {
  margin-right: 3rem !important;
}

/* Bottom */

.u-sMB-1-4 {
  margin-bottom: 0.375rem !important;
}

.u-sMB-1-2 {
  margin-bottom: 0.75rem !important;
}

.u-sMB-3-4 {
  margin-bottom: 1.125rem !important;
}

.u-sMB-1 {
  margin-bottom: 1.5rem !important;
}

.u-sMB-1_1-2 {
  margin-bottom: 2.25rem !important;
}

.u-sMB-2 {
  margin-bottom: 3rem !important;
}

/* Left */

.u-sML-1-8 {
  margin-left: 0.1875rem !important;
}

.u-sML-1-4 {
  margin-left: 0.375rem !important;
}

.u-sML-1-2 {
  margin-left: 0.75rem !important;
}

.u-sML-3-4 {
  margin-left: 1.125rem !important;
}

.u-sML-1 {
  margin-left: 1.5rem !important;
}

.u-sML-1_1-2 {
  margin-left: 2.25rem !important;
}

.u-sML-2 {
  margin-left: 3rem !important;
}

/* Vertical */

.u-sMV-1-4 {
  margin-top: 0.375rem !important;
  margin-bottom: 0.375rem !important;
}

.u-sMV-1-2 {
  margin-top: 0.75rem !important;
  margin-bottom: 0.75rem !important;
}

.u-sMV-3-4 {
  margin-top: 1.125rem !important;
  margin-bottom: 1.125rem !important;
}

.u-sMV-1 {
  margin-top: 1.5rem !important;
  margin-bottom: 1.5rem !important;
}

.u-sMV-1_1-2 {
  margin-top: 2.25rem !important;
  margin-bottom: 2.25rem !important;
}

.u-sMV-2 {
  margin-top: 3rem !important;
  margin-bottom: 3rem !important;
}

/* Horizontal */

.u-sMH-1-4 {
  margin-left: 0.375rem !important;
  margin-right: 0.375rem !important;
}

.u-sMH-1-2 {
  margin-left: 0.75rem !important;
  margin-right: 0.75rem !important;
}

.u-sMH-3-4 {
  margin-left: 1.125rem !important;
  margin-right: 1.125rem !important;
}

.u-sMH-1 {
  margin-left: 1.5rem !important;
  margin-right: 1.5rem !important;
}

.u-sMH-1_1-2 {
  margin-left: 2.25rem !important;
  margin-right: 2.25rem !important;
}

.u-sMH-2 {
  margin-left: 3rem !important;
  margin-right: 3rem !important;
}

/**
 * Padding
 *
 * u-sP
 */

/* All */

.u-sP-1-4 {
  padding: 0.375rem !important;
}

.u-sP-1-2 {
  padding: 0.75rem !important;
}

.u-sP-3-4 {
  padding: 1.125rem !important;
}

.u-sP-1 {
  padding: 1.5rem !important;
}

.u-sP-1_1-2 {
  padding: 2.25rem !important;
}

.u-sP-2 {
  padding: 3rem !important;
}

/* Top */

.u-sPT-1-4 {
  padding-top: 0.375rem !important;
}

.u-sPT-1-2 {
  padding-top: 0.75rem !important;
}

.u-sPT-3-4 {
  padding-top: 1.125rem !important;
}

.u-sPT-1 {
  padding-top: 1.5rem !important;
}

.u-sPT-1_1-2 {
  padding-top: 2.25rem !important;
}

.u-sPT-2 {
  padding-top: 3rem !important;
}

/* Right */

.u-sPR-1-4 {
  padding-right: 0.375rem !important;
}

.u-sPR-1-2 {
  padding-right: 0.75rem !important;
}

.u-sPR-3-4 {
  padding-right: 1.125rem !important;
}

.u-sPR-1 {
  padding-right: 1.5rem !important;
}

.u-sPR-1_1-2 {
  padding-right: 2.25rem !important;
}

.u-sPR-2 {
  padding-right: 3rem !important;
}

/* Bottom */

.u-sPB-1-4 {
  padding-bottom: 0.375rem !important;
}

.u-sPB-1-2 {
  padding-bottom: 0.75rem !important;
}

.u-sPB-3-4 {
  padding-bottom: 1.125rem !important;
}

.u-sPB-1 {
  padding-bottom: 1.5rem !important;
}

.u-sPB-1_1-2 {
  padding-bottom: 2.25rem !important;
}

.u-sPB-2 {
  padding-bottom: 3rem !important;
}

/* Left */

.u-sPL-1-4 {
  padding-left: 0.375rem !important;
}

.u-sPL-1-2 {
  padding-left: 0.75rem !important;
}

.u-sPL-3-4 {
  padding-left: 1.125rem !important;
}

.u-sPL-1 {
  padding-left: 1.5rem !important;
}

.u-sPL-1_1-2 {
  padding-left: 2.25rem !important;
}

.u-sPL-2 {
  padding-left: 3rem !important;
}

/* Vertical */

.u-sPV-1-4 {
  padding-top: 0.375rem !important;
  padding-bottom: 0.375rem !important;
}

.u-sPV-1-2 {
  padding-top: 0.75rem !important;
  padding-bottom: 0.75rem !important;
}

.u-sPV-3-4 {
  padding-top: 1.125rem !important;
  padding-bottom: 1.125rem !important;
}

.u-sPV-1 {
  padding-top: 1.5rem !important;
  padding-bottom: 1.5rem !important;
}

.u-sPV-1_1-2 {
  padding-top: 2.25rem !important;
  padding-bottom: 2.25rem !important;
}

.u-sPV-2 {
  padding-top: 3rem !important;
  padding-bottom: 3rem !important;
}

/* Horizontal */

.u-sPH-1-4 {
  padding-left: 0.375rem !important;
  padding-right: 0.375rem !important;
}

.u-sPH-1-2 {
  padding-left: 0.75rem !important;
  padding-right: 0.75rem !important;
}

.u-sPH-3-4 {
  padding-left: 1.125rem !important;
  padding-right: 1.125rem !important;
}

.u-sPH-1 {
  padding-left: 1.5rem !important;
  padding-right: 1.5rem !important;
}

.u-sPH-1_1-2 {
  padding-left: 2.25rem !important;
  padding-right: 2.25rem !important;
}

.u-sPH-2 {
  padding-left: 3rem !important;
  padding-right: 3rem !important;
}

/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */

.u-textBreak {
  word-wrap: break-word !important;
}

/**
 * Horizontal text alignment
 */

.u-textCenter {
  text-align: center !important;
}

.u-textLeft {
  text-align: left !important;
}

.u-textRight {
  text-align: right !important;
}

/**
 * Inherit the ancestor's text color.
 */

.u-textInheritColor {
  color: inherit !important;
}

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 * 2. Chrome (not Windows), Firefox, IE 10+
 * 3. Safari 7 and future browsers
 */

.u-textKern {
  text-rendering: optimizeLegibility;
  /* 1 */
  -webkit-font-feature-settings: "kern" 1;
          font-feature-settings: "kern" 1;
  /* 2 */
  -webkit-font-kerning: normal;
          font-kerning: normal;
  /* 3 */
}

/**
 * Prevent whitespace wrapping
 */

.u-textNoWrap {
  white-space: nowrap !important;
}

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */

.u-textTruncate {
  max-width: 100%;
  /* 1 */
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important;
  /* 2 */
}



.u-textUpper {
  text-transform: uppercase;
}

.u-textLower {
  text-transform: lowercase;
}

.u-textCapitalize {
  text-transform: capitalize;
}

.u-textInvert {
  color: rgb(242, 242, 242);
}

.u-textMuted {
  opacity: .6;
}

.u-textEmpty {
  color: rgb(144, 184, 197);
  font-weight: 600;
}

.u-textMicro {
  font-size: 0.75rem;
}

.u-textMini {
  font-size: 0.875rem;
}

.u-textMeta {
  font-size: 0.875rem;
  color: rgb(144, 184, 197);
}

.u-textLead {
  font-size: 1.5rem;
  font-weight: 300;
}

.u-textPrimary {
  color: #03A6D7;
}

.u-textSecondary {
  color: #20718A;
}

.u-textHighlight {
  color: #03A6D7;
}

.u-textSuccess {
  color: #5CCA7B;
}

.u-textUnsure {
  color: #E9DF1B;
}

.u-textNeutral {
  color: rgb(188, 212, 220);
}

.u-textWarning {
  color: #FFA800;
}

.u-textDanger {
  color: #FF3B3D;
}

.u-textPilcrow:before {
  content: '\00b6';
  color: rgb(188, 212, 220);
  padding: 0 0.1875rem;
}

.u-textTab {
  position: relative;
  display: inline-block;
  width: 1.2em;
  text-align: center;
}

.u-textTab:before {
  content: '\21E5';
  color: rgb(188, 212, 220);
}

.u-textSpace {
  position: relative;
}

.u-textSpace:before {
  position: absolute;
  content: '.';
  color: rgb(188, 212, 220);
}

.u-textNoSelect {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

/**
 * Components
 */

/** @define Grid; use strict */



/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */

/* Grid container
   ========================================================================== */

/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 * 2. Remove inter-cell whitespace that appears between `inline-block` child
 *    elements.
 * 3. Ensure consistent default alignment.
 */

.Grid {
  display: block;
  /* 1 */
  font-size: 0;
  /* 2 */
  margin: 0;
  /* 1 */
  padding: 0;
  /* 1 */
  text-align: left;
  /* 3 */
}

/**
 * Modifier: center align all grid cells
 */

.Grid--alignCenter {
  text-align: center;
}

/**
 * Modifier: right align all grid cells
 */

.Grid--alignRight {
  text-align: right;
}

/**
 * Modifier: middle-align grid cells
 */

.Grid--alignMiddle > .Grid-cell {
  vertical-align: middle;
}

/**
 * Modifier: bottom-align grid cells
 */

.Grid--alignBottom > .Grid-cell {
  vertical-align: bottom;
}

/**
 * Modifier: gutters
 *
 * NOTE: this can trigger a horizontal scrollbar if the component is as wide as
 * the viewport. Use padding on a container, or `overflow-x:hidden` to protect
 * against it.
 */

.Grid--withGutter {
  margin: 0 -10px;
}

.Grid--withGutter > .Grid-cell {
  padding: 0 10px;
}

/* Grid cell
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'grid'.
 *
 * 1. Fundamentals of the non-float grid layout.
 * 2. Reset font size change made in `Grid`.
 * 3. Keeps content correctly aligned with the grid direction.
 * 4. Controls vertical positioning of units.
 * 5. Make cells full-width by default.
 */

.Grid-cell {
  box-sizing: border-box;
  display: inline-block;
  /* 1 */
  font-size: 1rem;
  /* 2 */
  margin: 0;
  padding: 0;
  text-align: left;
  /* 3 */
  vertical-align: top;
  /* 4 */
  width: 100%;
  /* 5 */
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */

.Grid-cell--center {
  display: block;
  margin: 0 auto;
}

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */

html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */

input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}



::-webkit-input-placeholder {
  /* WebKit browsers */
  color: rgb(169, 191, 198);
}

:-moz-placeholder {
  /* Mozilla Firefox 4 to 18 */
  color: rgb(169, 191, 198);
}

::-moz-placeholder {
  /* Mozilla Firefox 19+ */
  color: rgb(169, 191, 198);
}

:-ms-input-placeholder {
  /* Internet Explorer 10+ */
  color: rgb(169, 191, 198);
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: none;
}

/* Reset buttons so they can be used like links */

button {
  background: transparent;
  border: 0;
  padding: 0;
  text-align: inherit;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

button:hover,
button:active {
  outline: none;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

input[type="text"],
input[type="password"],
input[type="date"],
input[type="datetime"],
input[type="email"],
input[type="number"],
input[type="search"],
input[type="tel"],
input[type="time"],
input[type="url"],
textarea {
  -webkit-appearance: none;
  outline: none;
  box-sizing: border-box;
}



@charset 'UTF-8';

@-ms-viewport {
  width: device-width;
}

@viewport {
  width: device-width;
}

html {
  font-family: 'Source Sans Pro', "Helvetica Neue", HelveticaNeue, Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  box-sizing: border-box;
  color: #444c54;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  min-width: 320px;
  background: #ECEFF0;
}

:active,
:hover {
  outline: none;
}



/**
 * Headings
 *
 * Reset to default font size to allow easy reuse
 * Use extra classes for styling
 */

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 16px;
  margin: 0;
  color: #20718A;
}



a {
  color: #03A6D7;
  text-decoration: none;
  cursor: pointer;
}

a:hover {
  color: rgb(3, 149, 194);
}

a:active {
  color: rgb(2, 133, 172);
}



ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

ul:empty,
ol:empty {
  /* Hide empty lists */
  display: none;
}

dd {
  margin: 0;
}



img {
  max-width: 100%;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 0;
}

figcaption {
  color: rgb(128, 128, 128);
}



hr {
  width: 100%;
  border: 0;
  border-bottom: 1px solid;
  border-color: rgba(32, 113, 138, 0.12);
  margin: rhythm(1) 0;
  background: transparent;
}

iframe {
  border: 0;
}

/**
 * Suppress the focus outline on links that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */

[tabindex="-1"]:focus {
  outline: none !important;
}



code,
kbd,
pre,
samp {
  font-family: Monaco, Courier, monospace;
  font-size: 0.8125rem;
  font-weight: 400;
  margin: 0;
  padding: 0 0.1875rem;
  color: rgb(77, 77, 77);
}

blockquote,
dl,
dd,
p,
pre {
  margin: 0;
}

kbd {
  margin: 0 0.1875rem;
  padding: 0.1875rem 0.5625rem;
  border: 1px solid rgba(65, 105, 136, 0.07);
  border-bottom: 3px solid rgba(65, 105, 136, 0.2);
  border-radius: 0.375rem;
  background-color: #fff;
  background-clip: padding;
  white-space: nowrap;
  display: inline-block;
  text-transform: uppercase;
  font-family: 'Source Sans Pro', "Helvetica Neue", HelveticaNeue, Helvetica, Arial, sans-serif;
}

/** @define ButtonGroup; use strict */

/** @define ButtonGroup */

/*! suit-button-group v2.2.0 | MIT License | github.com/suitcss */



/**
 * Create a visual connection between UI actions that belong together.
 * Must only contain `ButtonGroup-item` objects as children.
 *
 * Example HTML:
 *
 * <div class="ButtonGroup [ButtonGroup--hz]">
 *   <div class="ButtonGroup-item">
 *     <a class="Button" href="#">Dashboard</a>
 *   </div>
 *   <div class="ButtonGroup-item">
 *     <a class="Button" href="#">Account</a>
 *   </div>
 *   <div class="ButtonGroup-item">
 *     <a class="Button" href="#">Logout</a>
 *   </div>
 * </div>
 */

/**
 * Button group
 *
 * 1. Ensure component is full-width if applied to elements that are
 *    `inline-block` by default.
 * 2. Collapse whitespace between child elements. Only necessary for the
 *    `ButtonGroup--hz` modifier which lays items out as `inline-block`, but
 *    included in the base component so that affects on `font-size` are
 *    consistent.
 * 3. Remove any default styles that might be present when `ol` or `ul` are the
 *    root element.
 */

.ButtonGroup {
  display: block;
  /* 1 */
  font-size: 0;
  /* 2 */
  margin: 0;
  /* 3 */
  list-style: none;
  /* 3 */
  padding: 0;
  /* 3 */
}

/**
 * Button group item
 *
 * 1. Make it full-width if applied to elements that are `inline-block` by
 *    default.
 * 2. Reset the font size of the buttons to the root font size.
 */

.ButtonGroup-item {
  display: block;
  /* 1 */
  font-size: 1rem;
  /* 2 */
}

.ButtonGroup-item > .Button {
  display: block;
  width: 100%;
}

/**
 * Ensure that interactions with a button make it sit on top of other buttons
 * in the group.
 */

.ButtonGroup-item > .Button:hover,
.ButtonGroup-item > .Button:focus,
.ButtonGroup-item > .Button:active,
.ButtonGroup-item > .Button.is-pressed {
  z-index: 1;
}

/* Modifier: horizontal buttons
   ========================================================================== */

.ButtonGroup--hz > .ButtonGroup-item {
  display: inline-block;
}

/** @define ButtonGroup */

/*! suit-button-group v2.2.0 | MIT License | github.com/suitcss */

/* Modifier: collapse button borders
   ========================================================================== */

/**
 * Includes appropriate removal of `border-radius`.
 * All browsers that support `border-radius` also support CSS 3 pseudo-classes.
 */

/**
 * Vertical collapse
 */

.ButtonGroup--borderCollapse:not(.ButtonGroup--hz) > .ButtonGroup-item {
  margin-top: 0;
}

.ButtonGroup--borderCollapse:not(.ButtonGroup--hz) > .ButtonGroup-item:first-child {
  margin-top: 0;
}

.ButtonGroup--borderCollapse:not(.ButtonGroup--hz) > .ButtonGroup-item:not(:first-child):not(:last-child) > .Button {
  border-radius: 0;
}

.ButtonGroup--borderCollapse:not(.ButtonGroup--hz) > .ButtonGroup-item:first-child:not(:only-child) > .Button {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

.ButtonGroup--borderCollapse:not(.ButtonGroup--hz) > .ButtonGroup-item:last-child:not(:only-child) > .Button {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

/**
 * Horizontal collapse
 */

.ButtonGroup--borderCollapse.ButtonGroup--hz > .ButtonGroup-item {
  margin-left: 0;
}

.ButtonGroup--borderCollapse.ButtonGroup--hz > .ButtonGroup-item:first-child {
  margin-left: 0;
}

.ButtonGroup--borderCollapse.ButtonGroup--hz > .ButtonGroup-item:not(:first-child):not(:last-child) > .Button {
  border-radius: 0;
}

.ButtonGroup--borderCollapse.ButtonGroup--hz > .ButtonGroup-item:first-child:not(:only-child) > .Button {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}

.ButtonGroup--borderCollapse.ButtonGroup--hz > .ButtonGroup-item:last-child:not(:only-child) > .Button {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

:root {
  /* Set our vars in correct format */
  /* From suitcss-components-button-group */
}

.ButtonGroup--hz > .ButtonGroup-item {
  vertical-align: middle;
}

.ButtonGroup--round .ButtonGroup-item:first-child .Button {
  border-top-left-radius: 100px;
  border-bottom-left-radius: 100px;
}

.ButtonGroup--round .ButtonGroup-item:last-child .Button {
  border-top-right-radius: 100px;
  border-bottom-right-radius: 100px;
}

/** @define Button; use strict */

/** @define Button; use strict */



/**
 * The button classes are best applied to links, buttons, and submit inputs.
 * These components can be used in forms, as calls to action, or as part of the
 * general UI of the site/app.
 */

/**
 * 1. Corrects inability to style clickable `input` types in iOS.
 * 2. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 3. Inherit text color from ancestor.
 * 4. Inherit font styles from ancestor.
 * 5. Normalize `line-height`. For `input`, it can't be changed from `normal` in Firefox 4+.
 * 6. Prevent button text from being selectable.
 * 7. Make sure `input` will wrap text across multiple lines.
 */

.Button {
  -webkit-appearance: none;
  /* 1 */
  background: transparent;
  border-color: currentcolor;
  border-style: solid;
  border-width: 0;
  box-sizing: border-box;
  /* 2 */
  color: transparent;
  /* 3 */
  cursor: pointer;
  display: inline-block;
  font: inherit;
  /* 4 */
  line-height: normal;
  /* 5 */
  margin: 0;
  padding: 0.1875rem 0.75rem;
  position: relative;
  text-align: center;
  text-decoration: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  /* 6 */
  white-space: normal;
  /* 7 */
}

/**
 * Remove excess padding and border in Firefox 4+
 */

.Button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

.Button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

/**
 * UI states
 */

.Button:hover,
.Button:focus,
.Button:active {
  text-decoration: none;
}

.Button:disabled,
.Button.is-disabled {
  cursor: default;
  opacity: 0.6;
}



.Button {
  -webkit-transition: all .25s cubic-bezier(.075, .820, .165, 1.000);
          transition: all .25s cubic-bezier(.075, .820, .165, 1.000);
  min-height: 1.875rem;
  text-shadow: 1px 1px 0 rgba(0,0,0,0.15);
}

.Button:disabled,
.Button.is-disabled {
  pointer-events: none;
}

.Button:hover,
.Button:active,
.Button.is-active {
  outline: inherit;
}

/* Default */

.Button--default {
  background-color: rgb(222, 234, 237);
}

.Button--default:hover {
  background-color: rgb(200, 211, 213);
}

.Button--default:active,
.Button--default.is-active {
  background-color: rgb(189, 199, 201);
}

/**
 * Color Modifiers
 */

/* Primary */

.Button--primary {
  color: #fff;
  background-color: #03A6D7;
}

.Button--primary:hover {
  background-color: rgb(3, 149, 194);
}

.Button--primary:active,
.Button--primary.is-active {
  background-color: rgb(3, 141, 183);
}

/* Secondary */

.Button--secondary {
  color: #fff;
  background-color: #20718A;
}

.Button--secondary:hover {
  background-color: rgb(29, 102, 124);
}

.Button--secondary:active,
.Button--secondary.is-active {
  background-color: rgb(27, 96, 117);
}

/* Hightlight */

.Button--highlight {
  color: #fff;
  background-color: #03A6D7;
}

.Button--highlight:hover {
  background-color: rgb(3, 149, 194);
}

.Button--highlight:active,
.Button--highlight.is-active {
  background-color: rgb(3, 141, 183);
}

/* Success */

.Button--success {
  color: #fff;
  background-color: #5CCA7B;
}

.Button--success:hover {
  background-color: rgb(83, 182, 111);
}

.Button--success:active,
.Button--success.is-active {
  background-color: rgb(78, 172, 105);
}

/* Unsure */

.Button--unsure {
  color: #fff;
  background-color: #E9DF1B;
}

.Button--unsure:hover {
  background-color: rgb(210, 201, 24);
}

.Button--unsure:active,
.Button--unsure.is-active {
  background-color: rgb(198, 190, 23);
}

/* Neutral */

.Button--neutral {
  color: #fff;
  background-color: rgb(144, 184, 197);
}

.Button--neutral:hover {
  background-color: rgb(130, 166, 177);
}

.Button--neutral:active,
.Button--neutral.is-active {
  background-color: rgb(122, 156, 167);
}

/* Warning */

.Button--warning {
  color: #fff;
  background-color: #FFA800;
}

.Button--warning:hover {
  background-color: rgb(230, 151, 0);
}

.Button--warning:active,
.Button--warning.is-active {
  background-color: rgb(217, 143, 0);
}

/* Danger */

.Button--danger {
  color: #fff;
  background-color: #FF3B3D;
}

.Button--danger:hover {
  background-color: rgb(230, 53, 55);
}

.Button--danger:active,
.Button--danger.is-active {
  background-color: rgb(217, 50, 52);
}

/* Invisible */

.Button--invisible {
  background-color: transparent;
  color: rgb(144, 184, 197);
}

.Button--invisible:hover {
  background-color: rgb(237, 244, 246);
  color: rgb(99, 156, 173);
}

.Button--invisible:active,
.Button--invisible.is-active {
  color: #20718A;
  background-color: rgb(228, 238, 241);
}

/**
 * Button Type Modifiers
 */

/* Snug */

.Button--snug {
  padding-left: 0.375rem;
  padding-right: 0.375rem;
}

.Button--small {
  min-height: 1.5rem;
  padding: 0.1875rem 0.75rem;
  font-size: 0.875rem;
}

/** @define InputGroup; use strict */



.InputGroup {
  position: relative;
  display: table;
  border-collapse: separate;
}

.InputGroup-input,
.InputGroup-addon,
.InputGroup-button {
  display: table-cell;
  -webkit-transition: 0.2s cubic-bezier(.26, .47, .36, .94);
          transition: 0.2s cubic-bezier(.26, .47, .36, .94);
}

.InputGroup-input,
.InputGroup-addon {
  background-color: transparent;
  padding: 0 0.375rem;
}

.InputGroup-input {
  border: none;
  width: 100%;
  color: #20718A;
}

.InputGroup-addon {
  color: rgb(99, 156, 173);
  text-align: center;
  width: 1%;
  white-space: nowrap;
  vertical-align: middle;
}

.InputGroup-addon:before {
  content: ' ';
}

.InputGroup.is-focused .InputGroup-input,
.InputGroup.is-focused .InputGroup-addon {
  background-color: #fff;
}

.InputGroup--bordered .InputGroup-input,
.InputGroup--bordered .InputGroup-addon,
.InputGroup--outlined .InputGroup-input,
.InputGroup--outlined .InputGroup-addon {
  border-top: 1px solid rgb(166, 198, 208);
  border-bottom: 1px solid rgb(166, 198, 208);
}

.InputGroup--bordered .InputGroup-input {
  border-left: 1px solid rgb(166, 198, 208);
  border-right: 1px solid rgb(166, 198, 208);
}

.InputGroup--outlined .InputGroup-input:first-child,
.InputGroup--outlined .InputGroup-addon:first-child {
  border-left: 1px solid rgb(166, 198, 208);
}

.InputGroup--outlined .InputGroup-input:last-child,
.InputGroup--outlined .InputGroup-addon:last-child {
  border-right: 1px solid rgb(166, 198, 208);
}

.InputGroup--bordered.is-focused .InputGroup-input,
.InputGroup--bordered.is-focused .InputGroup-addon,
.InputGroup--outlined.is-focused .InputGroup-input,
.InputGroup--outlined.is-focused .InputGroup-addon {
  border-color: rgb(99, 156, 173);
}

.InputGroup--rounded .InputGroup-input:first-child,
.InputGroup--rounded .InputGroup-addon:first-child {
  border-bottom-left-radius: 1.5rem;
  border-top-left-radius: 1.5rem;
  padding-left: 0.5625rem;
}

.InputGroup--rounded .InputGroup-input:last-child,
.InputGroup--rounded .InputGroup-addon:last-child {
  border-bottom-right-radius: 1.5rem;
  border-top-right-radius: 1.5rem;
  padding-right: 0.5625rem;
}

/** @define Dropdown; use strict */



.Dropdown {
  position: relative;
  z-index: 100;
  display: inline-block;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.Dropdown.is-active {
  z-index: 900;
}

.Dropdown-toggleIcon {
  display: inline-block;
  -webkit-transition: all .2s cubic-bezier(.175, .885, .320, 1.275);
          transition: all .2s cubic-bezier(.175, .885, .320, 1.275);
  text-align: center;
}

.Dropdown.is-active .Dropdown-toggleIcon {
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
}

.Dropdown-content {
  position: absolute;
  z-index: 800;
  top: 100%;
  left: 0;
  visibility: hidden;
  float: left;
  overflow: auto;
  overflow-x: hidden;
  overflow-y: auto;
  max-height: 25.5rem;
  min-width: 100%;
  margin: 0;
  padding: 0;
  -webkit-transition: all .2s cubic-bezier(.175, .885, .320, 1.275);
          transition: all .2s cubic-bezier(.175, .885, .320, 1.275);
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  text-align: left;
  opacity: 0;
  background-color: #fff;
  background-clip: padding-box;
  box-shadow: 0 0 1.5rem rgba(0,0,0,0.1);
}

.Dropdown-content--Bordered {
  border: 1px solid rgba(32, 113, 138, 0.12);
  border-bottom-width: 2px;
}

.Dropdown.is-active > .Dropdown-content {
  visibility: visible;
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
  opacity: 1;
}

.Dropdown-title {
  font-size: 0.875rem;
  padding: 0.1875rem 0.375rem;
  background-color: transparent;
  border-bottom: 1px solid rgba(32, 113, 138, 0.12);
  color: rgb(121, 170, 185);
}

.Dropdown-item {
  display: block;
  line-height: 1.3125rem;
  padding: 0.375rem 0.375rem;
  -webkit-transition: all .2s ease-out;
          transition: all .2s ease-out;
  color: #03A6D7;
}

.Dropdown-item:hover {
  color: #fff;
  background-color: #03A6D7;
}

/**
 * Modifiers
 */

.Dropdown--right .Dropdown-content {
  left: auto;
  right: 0;
}

/** @define Header; use strict */



.Header {
  background-color: #03A6D7;
  position: fixed;
  z-index: 100;
  width: 100%;
  top: 0;
  box-shadow: 0 0.375rem 1.5rem rgba(0,0,0,0.1);
}

.Header-item {
  height: 3rem;
  display: inline-block;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.Header-avatar {
  margin-top: 0.5625rem;
  margin-bottom: 0.5625rem;
  width: 1.875rem;
  height: 1.875rem;
  display: inline-block;
}

/** @define Heading; use strict */



.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-family: 'Source Sans Pro', "Helvetica Neue", HelveticaNeue, Helvetica, Arial, sans-serif;
  font-weight: 600;
}

.h1 {
  font-size: 36px;
}

.h2 {
  font-size: 28px;
}

.h3 {
  font-size: 24px;
}

.h4 {
  font-size: 20px;
}

.h5 {
  font-size: 18px;
}

.h6 {
  font-size: 16px;
}

.Heading--panel {
  font-size: 1rem;
  font-weight: 400;
  margin: 0;
  text-transform: uppercase;
}

/** @define Icon; use strict */



.Icon {
  text-align: center;
  display: inline-block;
  -webkit-transition: .25s all cubic-bezier(.175, .885, .320, 1.275);
          transition: .25s all cubic-bezier(.175, .885, .320, 1.275);
}

.Icon.is-rotated {
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
}

.Icon-item {
  vertical-align: -25%;
  display: inline-block;
  width: 1.5rem;
  height: 1.5rem;
  fill: currentColor !important;
}

.Icon--xlg .Icon-item {
  width: 3rem;
  height: 3rem;
}

.Icon--lg .Icon-item {
  width: 2.25rem;
  height: 2.25rem;
}

.Icon--sm .Icon-item {
  vertical-align: -15%;
  width: 1.125rem;
  height: 1.125rem;
}

.Icon--xsm .Icon-item {
  vertical-align: -10%;
  width: 0.9375rem;
  height: 0.9375rem;
}

.Icon--circle {
  position: relative;
  padding: 0.75rem;
}

.Icon--circle:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 2px solid;
  opacity: .2;
  border-radius: 3rem;
}

.Icon--circle.Icon--lg,
.Icon--circle.Icon--xlg {
  border-width: 3px;
  padding: 1.125rem;
}

.Icon--circle.Icon--lg {
  padding: 0.9375rem;
}

.Icon--circle.Icon--sm,
.Icon--circle.Icon--xsm {
  border-width: 1px;
  padding: 0.5625rem;
}

.Icon--circle.Icon--xsm {
  padding: 0.375rem;
}

.Icon--stroked .Icon-item {
  fill: none;
  stroke: currentColor;
  stroke-width: 3;
}

/* Loader Icon */

.Icon--loader .Icon-item {
  position: relative;
}

.Icon--loader-dot {
  position: absolute;
  left: 0;
  top: 36.1%;
  display: inline-block;
  width: 27.8%;
  height: 27.8%;
  -webkit-animation: bouncedelay .9s infinite cubic-bezier(.175, .885, .320, 1.275);
          animation: bouncedelay .9s infinite cubic-bezier(.175, .885, .320, 1.275);
  border-radius: 3rem;
  background-color: currentColor;
  /* Prevent first frame from flickering when animation starts */
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}

.Icon--loader-dot:nth-of-type(2) {
  left: 36.1%;
  -webkit-animation-delay: .15s;
          animation-delay: .15s;
}

.Icon--loader-dot:nth-of-type(3) {
  right: 0;
  left: auto;
  -webkit-animation-delay: .3s;
          animation-delay: .3s;
}

@-webkit-keyframes bouncedelay {
  0%, 90%, 100% {
    -webkit-transform: scale(0, 0);
            transform: scale(0, 0);
    opacity: .2;
  }

  40% {
    -webkit-transform: scale(1, 1);
            transform: scale(1, 1);
    opacity: 1;
  }
}

@keyframes bouncedelay {
  0%, 90%, 100% {
    -webkit-transform: scale(0, 0);
            transform: scale(0, 0);
    opacity: .2;
  }

  40% {
    -webkit-transform: scale(1, 1);
            transform: scale(1, 1);
    opacity: 1;
  }
}

/** @define Links; use strict */



/**
 * Default
 *
 * Make anything look like a link
 */

.Link {
  color: #03A6D7;
  text-decoration: none;
  cursor: pointer;
}

.Link:hover {
  color: rgb(3, 149, 194);
}

.Link:active {
  color: rgb(2, 133, 172);
}

/* Invert */

.Link--invert {
  opacity: 0.8;
}

.Link--invert,
.Link--invert:hover {
  color: #fff !important;
}

.Link--invert:hover {
  opacity: 1;
}

.Link--invert:active,
.Link--invert.is-active {
  opacity: 0.6;
}

/* Success */

.Link--success {
  color: #5CCA7B !important;
}

.Link--success:hover {
  color: rgb(64, 141, 86) !important;
}

.Link--success:active,
.Link--success.is-active {
  color: rgb(37, 81, 49) !important;
}

/* Unsure */

.Link--unsure {
  color: #E9DF1B !important;
}

.Link--unsure:hover {
  color: rgb(163, 156, 19) !important;
}

.Link--unsure:active,
.Link--unsure.is-active {
  color: rgb(93, 89, 11) !important;
}

/* Neutral */

.Link--neutral {
  color: rgb(188, 212, 220) !important;
}

.Link--neutral:hover {
  color: rgb(132, 148, 154) !important;
}

.Link--neutral:active,
.Link--neutral.is-active {
  color: rgb(75, 85, 88) !important;
}

/* Warning */

.Link--warning {
  color: #FFA800 !important;
}

.Link--warning:hover {
  color: rgb(179, 118, 0) !important;
}

.Link--warning:active,
.Link--warning.is-active {
  color: rgb(102, 67, 0) !important;
}

/* Danger */

.Link--danger {
  color: #FF3B3D !important;
}

.Link--danger:hover {
  color: rgb(179, 41, 43) !important;
}

.Link--danger:active,
.Link--danger.is-active {
  color: rgb(102, 24, 24) !important;
}



.Difference ins,
.Difference del {
  padding: 0 1px;
  border-radius: 2px;
}

.Difference ins {
  background-color: rgb(201, 238, 211);
  text-decoration: none;
}

.Difference del {
  background-color: rgb(255, 224, 224);
  text-decoration: none;
}

/** @define LogoLoader; use strict */



.LogoLoader {
  position: relative;
  display: inline-block;
  margin-top: -0.09375rem;
  width: 2.4375rem;
  height: 2.4375rem;
  color: #fff;
  border-radius: 100px;
}

.LogoLoader--inverted {
  color: #03A6D7;
}

.LogoLoader-logo {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  -webkit-transition: all .25s cubic-bezier(.175, .885, .320, 1.275);
          transition: all .25s cubic-bezier(.175, .885, .320, 1.275);
  fill: currentColor;
}

.LogoLoader-svg {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: visible;
}

.LogoLoader path {
  -webkit-transform-origin: 50% 50% 0;
      -ms-transform-origin: 50% 50% 0;
          transform-origin: 50% 50% 0;
}

.LogoLoader:hover .LogoLoader-z {
  -webkit-animation: pop .3s cubic-bezier(.175, .885, .320, 1.275);
          animation: pop .3s cubic-bezier(.175, .885, .320, 1.275);
  -webkit-animation-iteration-count: 2;
          animation-iteration-count: 2;
  -webkit-animation-direction: alternate;
          animation-direction: alternate;
}

.LogoLoader-z {
  -webkit-transform: scale(1,1);
      -ms-transform: scale(1,1);
          transform: scale(1,1);
  -webkit-transition: all .25s cubic-bezier(.175, .885, .320, 1.275);
          transition: all .25s cubic-bezier(.175, .885, .320, 1.275);
}

.LogoLoader .LogoLoader-logo {
  -webkit-transform-origin: 50% 50% 0;
      -ms-transform-origin: 50% 50% 0;
          transform-origin: 50% 50% 0;
  /*transform: scale(.8, .8);*/
}

.LogoLoader .LogoLoader-circle,
.LogoLoader .LogoLoader-circlePulse {
  -webkit-transform: scale(1, 1);
      -ms-transform: scale(1, 1);
          transform: scale(1, 1);
}

.LogoLoader.is-loading .LogoLoader-z {
  -webkit-animation: pulseBegin 1s infinite linear;
          animation: pulseBegin 1s infinite linear;
}

.LogoLoader.is-loading .LogoLoader-circle {
  -webkit-animation: pulseBegin 1s infinite linear;
          animation: pulseBegin 1s infinite linear;
  -webkit-animation-delay: .1s;
          animation-delay: .1s;
}

.LogoLoader.is-loading .LogoLoader-circlePulse {
  -webkit-animation: pulse 1s infinite linear;
          animation: pulse 1s infinite linear;
  -webkit-animation-delay: .1s;
          animation-delay: .1s;
}

@-webkit-keyframes pulseBegin {
  0% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }

  20% {
    -webkit-transform: scale(.6);
            transform: scale(.6);
  }

  40% {
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
  }

  60% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }

  100% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}

@keyframes pulseBegin {
  0% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }

  20% {
    -webkit-transform: scale(.6);
            transform: scale(.6);
  }

  40% {
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
  }

  60% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }

  100% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}

@-webkit-keyframes pulse {
  0% {
    -webkit-transform: scale(.6);
            transform: scale(.6);
    opacity: 0;
  }

  20% {
    -webkit-transform: scale(.6);
            transform: scale(.6);
  }

  40% {
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
    opacity: 0.5;
  }

  60% {
    -webkit-transform: scale(1.6);
            transform: scale(1.6);
    opacity: 0.7;
  }

  100% {
    -webkit-transform: scale(2);
            transform: scale(2);
    opacity: 0.0;
  }
}

@keyframes pulse {
  0% {
    -webkit-transform: scale(.6);
            transform: scale(.6);
    opacity: 0;
  }

  20% {
    -webkit-transform: scale(.6);
            transform: scale(.6);
  }

  40% {
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
    opacity: 0.5;
  }

  60% {
    -webkit-transform: scale(1.6);
            transform: scale(1.6);
    opacity: 0.7;
  }

  100% {
    -webkit-transform: scale(2);
            transform: scale(2);
    opacity: 0.0;
  }
}

@-webkit-keyframes pop {
  to {
    -webkit-transform: rotate(15deg) scale(1.1, 1.1);
            transform: rotate(15deg) scale(1.1, 1.1);
  }
}

@keyframes pop {
  to {
    -webkit-transform: rotate(15deg) scale(1.1, 1.1);
            transform: rotate(15deg) scale(1.1, 1.1);
  }
}

/** @define Progressbar; use strict */



.Progressbar {
  position: relative;
  width: 100%;
  height: 0.75rem;
  margin: 0;
  background-color: rgb(188, 212, 220);
}

.Progressbar--sm {
  height: 0.375rem;
}

.Progressbar--lg {
  height: 1.5rem;
}

.Progressbar-item {
  position: absolute;
  left: 0;
  z-index: 100;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  list-style: none;
}

.Progressbar-approved {
  background-color: #03A6D7;
  z-index: 200;
}

.Progressbar-translated {
  background-color: #5CCA7B;
}

.Progressbar-needsWork {
  background-color: #E9DF1B;
}

.Progressbar-untranslated {
  background-color: rgb(188, 212, 220);
}



.Modal {
  position: fixed;
  z-index: 1000;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: block;
  visibility: hidden;
  overflow: auto;
  overflow-y: scroll;
  width: 100%;
  height: 100%;
  margin: 0 auto;
  padding: 4.5rem 1.5rem 1.5rem;
  -webkit-transition: all .15s linear;
          transition: all .15s linear;
  opacity: 0;
  background-color: rgba(236, 239, 240, 0.95);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-perspective: 75rem;
          perspective: 75rem;
  -webkit-overflow-scrolling: touch;
}

.Modal.is-active {
  visibility: visible;
  opacity: 1;
}

.Modal-dialog {
  position: absolute;
  position: relative;
  width: 90%;
  top: 50%;
  left: 50%;
  max-height: 100%;
  min-width: 300px;
  max-width: 45rem;
  -webkit-transition: all .25s cubic-bezier(.175, .885, .320, 1.1);
          transition: all .25s cubic-bezier(.175, .885, .320, 1.1);
  -webkit-transform: translateX(-50%) translateY(100%);
      -ms-transform: translateX(-50%) translateY(100%);
          transform: translateX(-50%) translateY(100%);
  -webkit-transform-origin: 0;
      -ms-transform-origin: 0;
          transform-origin: 0;
  background-color: rgb(247, 249, 249);
}

.Modal.is-active .Modal-dialog {
  -webkit-transform: translateX(-50%) translateY(-50%);
      -ms-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
}

.Modal-header {
  position: fixed;
  top: -3rem;
  left: 0;
  right: 0;
  border: 1px solid rgba(32, 113, 138, 0.12);
  background-color: #fff;
  z-index: 100;
}

.Modal-title {
  font-size: 1.375rem;
  font-weight: 300;
  line-height: 1.5rem;
  margin: 0;
  padding: 0.75rem 2.25rem 0.75rem 1.5rem;
}

.Modal-close {
  position: absolute;
  top: 0;
  right: 0;
  width: 3rem;
  height: 3rem;
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
  text-align: center;
  border-left: 1px solid rgba(32, 113, 138, 0.12);
}

.Modal-close:hover {
  background-color: rgba(32, 113, 138, 0.05);
}

.Modal-close:active {
  background-color: rgba(32, 113, 138, 0.1);
}

.Modal-content {
  position: relative;
  max-height: 100%;
  overflow: auto;
  background-clip: padding-box;
  border: 1px solid rgba(32, 113, 138, 0.12);
  border-top-color: transparent;
  border-bottom-width: 2px;
}

/* body */

.Modal-container.is-modal {
  overflow: hidden;
  height: 100%;
}

/** @define Toggle; use strict */



.Toggle,
.Toggle-label {
  cursor: pointer;
}

.Toggle {
  position: relative;
  display: inline-block;
  min-width: 2.0625rem;
  margin: 0 0.09375rem;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  vertical-align: top;
}

.Toggle-checkbox {
  position: absolute;
  cursor: none;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
}

.Toggle-label {
  font-weight: 600;
  display: block;
  position: relative;
  padding: 0 0.5625rem;
  -webkit-transition: all .25s cubic-bezier(.075, .820, .165, 1.000);
          transition: all .25s cubic-bezier(.075, .820, .165, 1.000);
  text-align: center;
  color: currentColor;
}

.Toggle-fakeCheckbox {
  opacity: 1;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  content: '';
  background-color: transparent;
}

.Toggle:hover > .Toggle-fakeCheckbox,
.Toggle-checkbox:focus ~ .Toggle-fakeCheckbox {
  background-color: currentColor;
  opacity: .2;
}

.Toggle-checkbox:checked ~ .Toggle-label,
.Toggle.is-active ~ .Toggle-label {
  color: #fff;
}

.Toggle-checkbox:checked ~ .Toggle-fakeCheckbox,
.Toggle.is-active > .Toggle-fakeCheckbox {
  background-color: currentColor;
}

.Toggle:hover > .Toggle-checkbox:checked ~ .Toggle-fakeCheckbox,
.Toggle-checkbox:checked:focus ~ .Toggle-fakeCheckbox,
.Toggle.is-active:hover > .Toggle-fakeCheckbox {
  opacity: .8;
}

/** @define Switch; use strict */

/*

<span class="Switch">
  <input type="checkbox" class="Switch-checkbox" />
  <label class="Switch-label">
    <span class="Switch-labelText">Switch</span>
  </label>
</span>

*/



.Switch {
  padding-left: 2.25rem;
  position: relative;
}

.Switch-checkbox {
  position: absolute;
  margin-left: -9999px;
  visibility: hidden;
}

.Switch-label {
  cursor: pointer;
}

.Switch-label:before,
.Switch-label:after {
  content: '';
  position: absolute;
  left: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  border-radius: 1.125rem;
  -webkit-transition: all .2s ease-out;
          transition: all .2s ease-out;
}

.Switch-label:before {
  width: 1.875rem;
  height: 1.125rem;
  background-color: rgb(210, 227, 232);
}

.Switch-label:after {
  width: 1.125rem;
  height: 1.125rem;
  background-color: rgb(121, 170, 185);
  border: 1px solid transparent;
  -webkit-transform: translateY(-50%) scale(.8, .8);
      -ms-transform: translateY(-50%) scale(.8, .8);
          transform: translateY(-50%) scale(.8, .8);
}

.Switch-labelText {
  color: rgb(121, 170, 185);
  font-size: 0.875rem;
}

.Switch-checkbox:checked ~ .Switch-label:before {
  background-color: #20718A;
}

.Switch-checkbox:checked ~ .Switch-label:after {
  background-color: #fff;
  -webkit-transform: translateY(-50%) translateX(66%) scale(.8, .8);
      -ms-transform: translateY(-50%) translateX(66%) scale(.8, .8);
          transform: translateY(-50%) translateX(66%) scale(.8, .8);
}

.Switch-checkbox:checked ~ .Switch-label .Switch-labelText {
  color: #20718A;
}

/** @define TransUnit; use strict */



.TransUnit {
  position: relative;
  margin: 0;
  padding: 0;
  cursor: text;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  border-bottom: 1px solid rgba(32, 113, 138, 0.12);
}

.TransUnit:focus {
  outline: 0;
  box-shadow: none;
}

.TransUnit.is-focused {
  opacity: 1 !important;
  background-color: #fff;
}

.TransUnit:before,
.TransUnit:after {
  position: absolute;
  left: 0;
  visibility: hidden;
  width: 100%;
  height: 1.5rem;
  content: '';
  /*transition: var(--TransUnit-transition);*/
  -webkit-transform: scaleY(0);
      -ms-transform: scaleY(0);
          transform: scaleY(0);
  opacity: 0;
  background-color: #fff;
  background-clip: padding-box;
}

.TransUnit:before {
  box-shadow: 0 -0.375rem 0.75rem rgba(0,0,0,.04);
  -webkit-transform-origin: bottom;
      -ms-transform-origin: bottom;
          transform-origin: bottom;
  top: -1.125rem;
}

.TransUnit:after {
  box-shadow: 0 0.375rem 0.75rem rgba(0,0,0,.04);
  -webkit-transform-origin: top;
      -ms-transform-origin: top;
          transform-origin: top;
  bottom: -1.125rem;
}

.TransUnit.is-focused:before,
.TransUnit.is-focused:after {
  visibility: visible;
  -webkit-transform: scaleY(1);
      -ms-transform: scaleY(1);
          transform: scaleY(1);
  opacity: 1;
}

.TransUnit.is-first {
  border-top: 1px solid rgba(32, 113, 138, 0.12);
}

/* Pair with .Editor-content */

.TransUnit-container.is-unit-selected .TransUnit {
  opacity: .8;
}

/**
 * Panels
 */

.TransUnit-panel {
  position: relative;
  padding-top: 1.125rem;
  padding-bottom: 1.125rem;
  padding-left: 1.5rem;
  list-style: none;
  vertical-align: top;
}

.TransUnit-item {
  position: relative;
}

.TransUnit-source {
  cursor: pointer;
  -webkit-user-select: text;
     -moz-user-select: text;
      -ms-user-select: text;
          user-select: text;
}

.TransUnit.is-focused .TransUnit-source {
  cursor: text;
}

.TransUnit-translation {
  cursor: text;
  -webkit-user-select: text;
     -moz-user-select: text;
      -ms-user-select: text;
          user-select: text;
}

/**
 * Translation and source Header and Footer
 */

.TransUnit-panelHeader,
.TransUnit-panelFooter,
.TransUnit-itemHeader {
  position: absolute;
  z-index: 200;
  right: 0;
  left: 0;
  width: 100%;
  padding-right: 1.125rem;
  padding-left: 1.125rem;
  cursor: default;
}

.TransUnit-panelHeader,
.TransUnit-panelFooter {
  visibility: hidden;
  /*transition: var(--TransUnit-transition);*/
  opacity: 0;
}

.TransUnit.is-focused .TransUnit-panelHeader,
.TransUnit.is-focused .TransUnit-panelFooter {
  visibility: visible;
  opacity: 1;
}

.TransUnit-panelHeader {
  top: -1.125rem;
}

.TransUnit-itemHeader {
  top: 0;
}

.TransUnit-panelFooter {
  bottom: -1.125rem;
}

.TransUnit-heading {
  font-size: 1rem;
  font-weight: 400;
  line-height: 2.25rem;
  display: inline-block;
  float: left;
  margin: 0;
  vertical-align: top;
  text-transform: uppercase;
}

.TransUnit-text {
  font-family: 'Source Sans Pro', "Helvetica Neue", HelveticaNeue, Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  overflow: hidden;
  width: 100%;
  min-height: 1.5rem;
  margin: 0;
  padding: 1.125rem;
  resize: none;
  -webkit-transition: height .1s cubic-bezier(.075, .820, .165, 1.000);
          transition: height .1s cubic-bezier(.075, .820, .165, 1.000);
  white-space: pre-wrap;
  word-wrap: break-word;
  -moz-tab-size: 8;
       tab-size: 8;
  color: #444c54;
  border: none;
  background-color: transparent;
  box-shadow: none;
  -webkit-appearance: none;
}

.TransUnit-text:focus {
  border: none;
  outline: none;
  background-color: transparent;
}

/**
 * Override text highlighting changing text format
 * otherwise it won't align
 */

.TransUnit-text span {
  font-weight: 400 !important;
  font-style: normal !important;
}

/**
 * Status bar
 */

.TransUnit-status,
.TransUnit-status:before,
.TransUnit-status:after {
  position: absolute;
  z-index: 200;
  left: 0;
  width: 1.5rem;
  background-color: rgb(188, 212, 220);
}

.TransUnit-status {
  top: -1;
  bottom: -1;
}

.TransUnit-status.is-loading,
.TransUnit-status.is-loading:before {
  background-image: -webkit-repeating-linear-gradient(45deg, transparent, transparent 0.375rem, rgba(255,255,255,.5) 0.375rem, rgba(255,255,255,.5) 0.75rem);
  background-image: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 0.375rem,
    rgba(255,255,255,.5) 0.375rem,
    rgba(255,255,255,.5) 0.75rem
  );
  background-size: 100% 1000px;
  -webkit-animation: loading 7s linear;
          animation: loading 7s linear;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
}

.TransUnit-status:before {
  top: -1.125rem;
  height: 100%;
  padding-top: 1.125rem;
  padding-bottom: 1.125rem;
  box-sizing: content-box;
  z-index: 300;
  visibility: hidden;
  content: '';
  -webkit-transform: scaleY(.65);
      -ms-transform: scaleY(.65);
          transform: scaleY(.65);
}

.TransUnit-status:after {
  -webkit-transition: none;
          transition: none;
  z-index: 400;
  top: 0;
  box-sizing: content-box;
  width: 1.3125rem;
  height: 100%;
  content: '';
  background-color: #fff;
  opacity: .6;
}

.TransUnit.is-focused .TransUnit-status:before {
  visibility: visible;
  -webkit-transform: scaleY(1);
      -ms-transform: scaleY(1);
          transform: scaleY(1);
}

.TransUnit.is-focused .TransUnit-status:after {
  top: -1.125rem;
  padding-top: 1.125rem;
  padding-bottom: 1.125rem;
  opacity: .8;
}

/**
 * Meta data
 */

.TransUnit-metaData {
  position: relative;
  right: 0;
  left: 0;
  height: 100%;
  text-align: center;
}

.TransUnit-metaDataItem {
  line-height: 1.125rem;
}

.TransUnit-metaDataButton {
  font-size: 0.75rem;
  line-height: 0.6000000000000001rem;
  opacity: .8;
}

.TransUnit-metaDataButton:hover {
  opacity: 1;
}

.TransUnit-metaDataComments,
.TransUnit-metaDataErrors {
  position: absolute;
  right: 0;
  left: 0;
}

.TransUnit-metaDataComments {
  top: 1.125rem;
}

.TransUnit-metaDataErrors {
  top: 2.625rem;
}

.TransUnit-metaDataErrorsIcon {
  text-shadow: 0 0 2px #fff;
}

/**
 * Small Size Down
 */

@media (min-width:0) and (max-width:740px) {
  .TransUnit-Heading {
    padding-left: 1.5rem;
  }

  .TransUnit-panelFooterLeftNav {
    padding-left: 1.5rem;
  }
}

/**
 * Medium Size Up
 */

@media (min-width:741px) {
  .TransUnit,
  .TransUnit-item {
    display: table;
    width: 100%;
    table-layout: fixed;
  }

  .TransUnit-panel {
    display: table-cell;
    width: 50%;
    padding-left: 0;
  }

  .TransUnit-source {
    padding-right: 0.75rem;
  }

  .TransUnit-translation {
    padding-left: 0.75rem;
  }

  /* Cover the overlapping headers */

  .TransUnit-panelHeader--source,
  .TransUnit-panelFooter--source {
    padding-right: 1.875rem;
    right: auto;
  }

  .TransUnit-panelHeader--translation,
  .TransUnit-panelFooter--translation {
    padding-left: 1.875rem;
    left: auto;
  }

  .TransUnit-status,
  .TransUnit-status:before,
  .TransUnit-status:after {
    left: 50%;
    margin-left: -0.75rem;
  }
}

/**
 * Status bar Modifiers
 */

.TransUnit--highlight .TransUnit-status,
.TransUnit--highlight .TransUnit-status:before {
  background-color: #03A6D7;
}

.TransUnit--success .TransUnit-status,
.TransUnit--success .TransUnit-status:before {
  background-color: #5CCA7B;
}

.TransUnit--unsure .TransUnit-status,
.TransUnit--unsure .TransUnit-status:before {
  background-color: #E9DF1B;
}

.TransUnit--warning .TransUnit-status,
.TransUnit--warning .TransUnit-status:before {
  background-color: #FFA800;
}

.TransUnit--danger .TransUnit-status,
.TransUnit--danger .TransUnit-status:before {
  background-color: #FF3B3D;
}

.TransUnit--secondary .TransUnit-status,
.TransUnit--secondary .TransUnit-status:before {
  background-color: #20718A;
}

/**
 * Type Modifiers
 */

.TransUnit--suggestion:hover {
  background-color: rgb(251, 252, 252);
}

.TransUnit--suggestion .TransUnit-panel {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.TransUnit--suggestion .TransUnit-details {
  padding-left: 1.125rem;
  padding-right: 1.125rem;
}

.TransUnit--suggestion .TransUnit-text--tight {
  padding-top: 0;
  padding-bottom: 0;
}

@-webkit-keyframes loading {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 0 1000px;
  }
}

@keyframes loading {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 0 1000px;
  }
}

.Resizer {
  position: absolute;
  z-index: 1000;
}

.Resizer--vertical {
  cursor: ew-resize;
  width: 12px;
  top: 0;
  bottom: 0;
}

.Resizer--horizontal {
  height: 12px;
  left: 0;
  right: 0;
  cursor: ns-resize;
}

/**
 * Views
 */

/** @define Editor; use strict */



.Editor {
  overflow: hidden;
}

.Editor-header,
.Editor-loader {
  -webkit-transition: .2s all cubic-bezier(.175, .885, .320, 1.275);
          transition: .2s all cubic-bezier(.175, .885, .320, 1.275);
}

.Editor-header.is-minimised {
  -webkit-transform: translateY(-3rem);
      -ms-transform: translateY(-3rem);
          transform: translateY(-3rem);
}

.Editor-header.is-minimised .Editor-mainNav {
  visibility: hidden;
}

.Editor-loader {
  position: absolute;
  z-index: 900;
  top: 0;
  left: 50%;
  -webkit-transform: translate(-50%, 0.375rem);
      -ms-transform: translate(-50%, 0.375rem);
          transform: translate(-50%, 0.375rem);
}

.Editor-loader.is-minimised {
  -webkit-transform: translateX(-50%) scale(.75, .75);
      -ms-transform: translateX(-50%) scale(.75, .75);
          transform: translateX(-50%) scale(.75, .75);
}

.Editor-mainNav {
  height: 3rem;
}

.Editor-content {
  position: absolute;
  left: 0;
  right: 0;
  top: 5.625rem;
  bottom: 0;
  overflow: auto;
  overflow-y: scroll;
  width: 100%;
  -webkit-overlow-scrolling: touch;
}

.Editor-content.is-maximised {
  top: 2.625rem;
}

/*So firefox keeps the background at 100% height when there are only a few translations*/

.Editor-translationsWrapper {
  height: 100%;
}

.Editor-translations {
  min-height: 100%;
  padding: 3rem 0;
  background: -webkit-linear-gradient(left, rgb(215, 229, 234), rgb(215, 229, 234));
  background: linear-gradient(left, rgb(215, 229, 234), rgb(215, 229, 234));
  background-position: left center;
  background-size: 1.5rem 100%;
  background-repeat: no-repeat;
}

.Editor-currentDoc {
  max-width: 5.25rem;
}

.Editor-currentLang {
  max-width: 5.25rem;
}

.Editor-suggestions {
  position: fixed;
  z-index: 200;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: hidden;
  min-height: 30%;
  box-shadow: 0 -0.1875rem 1.5rem rgba(0,0,0,.1);
  /*transform: translateY(100%);*/
}

.Editor-suggestionsHeader {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  box-shadow: 0 1px 1px rgba(0,0,0,0.1);
  z-index: 300;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.Editor-suggestionsBody {
  /* Fallback */
  position: absolute;
  top: 2.25rem;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: scroll;
  overflow-x: hidden;
  overflow-y: scroll;
}

.Editor-suggestions.is-search-active .Editor-suggestionsBody {
  top: 4.5rem;
}

.Editor-suggestionsSearch {
  clear: both;
}

/**
 * Media Queries
 */

@media (min-width:0) and (max-width:740px) {
  .Editor-currentProject {
    max-width: 5.25rem;
  }
}

@media (min-width:741px) {
  .Editor-translations {
    background: -webkit-linear-gradient(left, rgb(215, 229, 234), rgb(215, 229, 234)), -webkit-linear-gradient(left, #ECEFF0, #ECEFF0);
    background: linear-gradient(to right, rgb(215, 229, 234), rgb(215, 229, 234)),
      linear-gradient(to right, #ECEFF0, #ECEFF0);
    background-position: center,
      right;
    background-size: 1.5rem 100%,
      50% 100%;
    background-repeat: no-repeat;
  }
}

/**
 * Theme
 */

/**
* Theme definition
*
* This defines the theme in fundamental terms, but not how it is applied to
* the components. That is done in `theme-map.css`.
*/

/**
* Breakpoints
*/

/**
 * Colors
 */

:root {
  /* Primary greys */
  /* Main colors */
  /* Background colors */
  /* State colors */
  /* Font colors */
}

/**
 * Font
 */



/**
 * Style Defaults
 */



/**
 * Rhythm
 */



/**
 * Transitions
 */



/**
 * Z-Index Scale
 */



/**
 *
 * Utilities
 *
 */

/**
 * Background
 */



/**
 * List
 */



/**
 * Size
 */



/**
 * Space
 */



/**
 * Display
 */



/**
 * Text
 */



/**
 *
 * Components
 *
 */

/**
 * Base
 */

:root {
  /* Forms */
  /* Global */
  /* Headings */
  /* Links */
  /* Lists */
  /* Media */
  /* Misc */
  /* Text */
}

/**
 * Button
 */



/**
 * Button Group
 */



/**
 * Dropdown
 */



/**
 * Header
 */



/**
 * Headings
 */



/**
 * Icon
 */



/**
 * Links
 */



/**
 * Difference
 */



/**
 * LogoLoader
 */



/**
 * Modal
 */



/**
 * Progressbar
 */



/**
 * Toggle
 */



/**
 * TransUnit
 */



/**
 *
 * Views
 *
 */

/**
 * Editor
 */



/* Fix for hotkeys, remove this when reimplemented */

.fade {
  -webkit-transition: opacity .25s easein;
          transition: opacity .25s easein;
  opacity: 0;
}

.fade.in {
  opacity: 1;
}

/* Angular specific classes */

[ng\:cloak],
[ng-cloak],
[data-ng-cloak],
[x-ng-cloak],
.ng-cloak,
.x-ng-cloak {
  display: none !important;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3BhaHVhbmcvd29yay96YW5hdGEtc3BhL2FwcC9hcHAuY3NzIiwiMTQ1NjI3MjYzODQzNjEiLCJub2RlX21vZHVsZXMvc3VpdGNzcy11dGlscy1sYXlvdXQvbGliL2xheW91dC5jc3MiLCJhcHAvY29tcG9uZW50cy91dGlscy1sYXlvdXQvaW5kZXguY3NzIiwiYXBwL2NvbXBvbmVudHMvdXRpbHMtYmFja2dyb3VuZC9pbmRleC5jc3MiLCJub2RlX21vZHVsZXMvc3VpdGNzcy11dGlscy1kaXNwbGF5L2xpYi9kaXNwbGF5LmNzcyIsImFwcC9jb21wb25lbnRzL3V0aWxzLWRpc3BsYXkvaW5kZXguY3NzIiwiYXBwL2NvbXBvbmVudHMvdXRpbHMtbGlzdC9pbmRleC5jc3MiLCJub2RlX21vZHVsZXMvc3VpdGNzcy11dGlscy1wb3NpdGlvbi9saWIvcG9zaXRpb24uY3NzIiwiYXBwL2NvbXBvbmVudHMvdXRpbHMtcG9zaXRpb24vaW5kZXguY3NzIiwibm9kZV9tb2R1bGVzL3N1aXRjc3MtdXRpbHMtc2l6ZS9saWIvc2l6ZS5jc3MiLCJub2RlX21vZHVsZXMvc3VpdGNzcy11dGlscy1zaXplL2xpYi9zaXplLXNtLmNzcyIsIm5vZGVfbW9kdWxlcy9zdWl0Y3NzLXV0aWxzLXNpemUvbGliL3NpemUtbWQuY3NzIiwibm9kZV9tb2R1bGVzL3N1aXRjc3MtdXRpbHMtc2l6ZS9saWIvc2l6ZS1sZy5jc3MiLCJhcHAvY29tcG9uZW50cy91dGlscy1zaXplL2luZGV4LmNzcyIsImFwcC9jb21wb25lbnRzL3V0aWxzLXNwYWNlL2luZGV4LmNzcyIsIm5vZGVfbW9kdWxlcy9zdWl0Y3NzLXV0aWxzLXRleHQvbGliL3RleHQuY3NzIiwiYXBwL2NvbXBvbmVudHMvdXRpbHMtdGV4dC9pbmRleC5jc3MiLCJub2RlX21vZHVsZXMvc3VpdGNzcy1jb21wb25lbnRzLWdyaWQvbGliL2dyaWQuY3NzIiwibm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzcyIsImFwcC9jb21wb25lbnRzL2Jhc2UvbGliL2Zvcm1zLmNzcyIsImFwcC9jb21wb25lbnRzL2Jhc2UvbGliL2dsb2JhbC5jc3MiLCJhcHAvY29tcG9uZW50cy9iYXNlL2xpYi9oZWFkaW5ncy5jc3MiLCJhcHAvY29tcG9uZW50cy9iYXNlL2xpYi9saW5rcy5jc3MiLCJhcHAvY29tcG9uZW50cy9iYXNlL2xpYi9saXN0cy5jc3MiLCJhcHAvY29tcG9uZW50cy9iYXNlL2xpYi9tZWRpYS5jc3MiLCJhcHAvY29tcG9uZW50cy9iYXNlL2xpYi9taXNjLmNzcyIsImFwcC9jb21wb25lbnRzL2Jhc2UvbGliL3RleHQuY3NzIiwiYXBwL2NvbXBvbmVudHMvYnV0dG9uLWdyb3VwL2luZGV4LmNzcyIsIm5vZGVfbW9kdWxlcy9zdWl0Y3NzLWNvbXBvbmVudHMtYnV0dG9uLWdyb3VwL2J1dHRvbi1ncm91cC5jc3MiLCJub2RlX21vZHVsZXMvc3VpdGNzcy1jb21wb25lbnRzLWJ1dHRvbi1ncm91cC9idXR0b24tZ3JvdXAucGx1Z2luLmNzcyIsImFwcC9jb21wb25lbnRzL2J1dHRvbi9pbmRleC5jc3MiLCJub2RlX21vZHVsZXMvc3VpdGNzcy1jb21wb25lbnRzLWJ1dHRvbi9saWIvYnV0dG9uLmNzcyIsImFwcC9jb21wb25lbnRzL2lucHV0LWdyb3VwL2luZGV4LmNzcyIsImFwcC9jb21wb25lbnRzL2Ryb3Bkb3duL2luZGV4LmNzcyIsImFwcC9jb21wb25lbnRzL2hlYWRlci9pbmRleC5jc3MiLCJhcHAvY29tcG9uZW50cy9oZWFkaW5nL2luZGV4LmNzcyIsImFwcC9jb21wb25lbnRzL2ljb24vaW5kZXguY3NzIiwiYXBwL2NvbXBvbmVudHMvbGlua3MvaW5kZXguY3NzIiwiYXBwL2NvbXBvbmVudHMvZGlmZmVyZW5jZS9pbmRleC5jc3MiLCJhcHAvY29tcG9uZW50cy9sb2dvLWxvYWRlci9pbmRleC5jc3MiLCJhcHAvY29tcG9uZW50cy9Qcm9ncmVzc0Jhci9pbmRleC5jc3MiLCJhcHAvY29tcG9uZW50cy9tb2RhbC9pbmRleC5jc3MiLCJhcHAvY29tcG9uZW50cy90b2dnbGUvaW5kZXguY3NzIiwiYXBwL2NvbXBvbmVudHMvc3dpdGNoL2luZGV4LmNzcyIsImFwcC9jb21wb25lbnRzL3RyYW5zVW5pdC9pbmRleC5jc3MiLCJhcHAvY29tcG9uZW50cy9yZXNpemVyL2luZGV4LmNzcyIsImFwcC9lZGl0b3IvaW5kZXguY3NzIiwiYXBwL2NvbXBvbmVudHMvdGhlbWUvbGliL3RoZW1lLmNzcyIsImFwcC9jb21wb25lbnRzL3RoZW1lL2xpYi90aGVtZS1tYXAuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQ0VHOztBQ0ZIOzs7Ozs7Ozs7Ozs7SURnQkc7O0FDRkg7O0VBRUUsY0FBQTtFQUFjLFFBQUE7RUFDZCxnQkFBQTtFQUFnQixRQUFBO0VET2pCOztBQ0pEO0VBQ0UsYUFBQTtFRE9EOztBQ0pEOzs7Ozs7OztJRGNHOztBQ0pIO0VBQ0UsNkJBQUE7RURPRDs7QUNKRDs7Ozs7Ozs7OztJRGdCRzs7QUNKSDtFQUNFLGdDQUFBO0VBQWdDLFFBQUE7RUFDaEMsMkJBQUE7RUFBMkIsUUFBQTtFRFM1Qjs7QUNORDs7SURVRzs7QUNOSDtFQUNFLHdCQUFBO0VEU0Q7O0FDTkQ7RUFDRSx5QkFBQTtFRFNEOztBRXZFRDtFQUVFO0lBQ0UsYUFBQTtJQUNBLHdCQUFBO0lGeUVEO0VBQ0Y7Ozs7QUczREQ7RUFDRSxhQUFBO0VIZ0VEOztBRzdERDtFQUNFLHNDQUFBO0VIZ0VEOztBRzdERDtFQUNFLHNDQUFBO0VIZ0VEOztBRzdERDtFQUNFLHdCQUFBO0VIZ0VEOztBRzdERDtFQUNFLHNDQUFBO0VIZ0VEOztBRzdERDtFQUNFLHNDQUFBO0VIZ0VEOztBRzdERDtFQUNFLHNDQUFBO0VIZ0VEOztBRzdERDtFQUNFLDRDQUFBO0VBQ0EsMEJBQUE7RUhnRUQ7O0FHN0REO0VBQ0UsMkJBQUE7RUhnRUQ7O0FHN0REO0VBQ0UsMkJBQUE7RUhnRUQ7O0FHN0REO0VBQ0UsMkJBQUE7RUhnRUQ7O0FHN0REO0VBQ0Usc0NB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cDRESDtFQUNFLHlCQUFBO0VBQXlCLFFBQUE7RUFDekIsNEJBQUE7RUFBNEIsUUFBQTtFQUM1QixnQ0FBQTtFQUFnQyxRQUFBO0VsQjA0RGpDOztBa0J2NEREOztJbEIyNERHOztBa0J2NERIO0VBQ0UsV0FBQTtFbEIwNEREOztBa0J2NEREO2lGbEIwNERnRjs7QWtCdjREaEY7Ozs7O0lsQjg0REc7O0FrQnY0REg7Ozs7Ozs7Ozs7Ozs7RUFhRSxnQkFBQTtFbEIwNEREOztBa0J2NEREOzs7SWxCNDRERzs7QWtCdjRESDs7OztFQUlFLHVCQUFBO0VBQXVCLFFBQUE7RUFDdkIsMEJBQUE7RUFBMEIsUUFBQTtFbEI0NEQzQjs7QWtCejRERDs7O0lsQjg0REc7O0FrQno0REg7RUFDRSxlQUFBO0VBQ0EsV0FBQTtFbEI0NEREOztBa0J6NEREOzs7SWxCODRERzs7QWtCejRESDs7RUFFRSxlQUFBO0VsQjQ0REQ7O0FrQno0REQ7aUZsQjQ0RGdGOztBa0J6NERoRjs7SWxCNjRERzs7QWtCejRESDtFQUNFLCtCQUFBO0VsQjQ0REQ7O0FrQno0REQ7OztJbEI4NERHOztBa0J6NERIOztFQUVFLFlBQUE7RWxCNDRERDs7QWtCejRERDtpRmxCNDREZ0Y7O0FrQno0RGhGOztJbEI2NERHOztBa0J6NERIO0VBQ0UsMkJBQUE7RWxCNDRERDs7QWtCejRERDs7SWxCNjRERzs7QWtCejRESDs7RUFFRSxtQkFBQTtFbEI0NEREOztBa0J6NEREOztJbEI2NERHOztBa0J6NERIO0VBQ0Usb0JBQUE7RWxCNDRERDs7QWtCejRERDs7O0lsQjg0REc7O0FrQno0REg7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0VsQjQ0REQ7O0FrQno0REQ7O0lsQjY0REc7O0FrQno0REg7RUFDRSxrQkFBQTtFQUNBLGFBQUE7RWxCNDRERDs7QWtCejRERDs7SWxCNjRERzs7QWtCejRESDtFQUNFLGdCQUFBO0VsQjQ0REQ7O0FrQno0REQ7O0lsQjY0REc7O0FrQno0REg7O0VBRUUsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7RWxCNDRERDs7QWtCejRERDtFQUNFLGFBQUE7RWxCNDRERDs7QWtCejRERDtFQUNFLGlCQUFBO0VsQjQ0REQ7O0FrQno0REQ7aUZsQjQ0RGdGOztBa0J6NERoRjs7SWxCNjRERzs7QWtCejRESDtFQUNFLFdBQUE7RWxCNDRERDs7QWtCejRERDs7SWxCNjRERzs7QWtCejRESDtFQUNFLGtCQUFBO0VsQjQ0REQ7O0FrQno0REQ7aUZsQjQ0RGdGOztBa0J6NERoRjs7SWxCNjRERzs7QWtCejRESDtFQUNFLGtCQUFBO0VsQjQ0REQ7O0FrQno0REQ7O0lsQjY0REc7O0FrQno0REg7RUFDRSx5QkFBQTtFQUNBLFdBQUE7RWxCNDRERDs7QWtCejRERDs7SWxCNjRERzs7QWtCejRESDtFQUNFLGdCQUFBO0VsQjQ0REQ7O0FrQno0REQ7O0lsQjY0REc7O0FrQno0REg7Ozs7RUFJRSxtQ0FBQTtFQUNBLGdCQUFBO0VsQjQ0REQ7O0FrQno0REQ7aUZsQjQ0RGdGOztBa0J6NERoRjs7O0lsQjg0REc7O0FrQno0REg7Ozs7O0lsQmc1REc7O0FrQno0REg7Ozs7O0VBS0UsZ0JBQUE7RUFBZ0IsUUFBQTtFQUNoQixlQUFBO0VBQWUsUUFBQTtFQUNmLFdBQUE7RUFBVyxRQUFBO0VsQis0RFo7O0FrQjU0REQ7O0lsQmc1REc7O0FrQjU0REg7RUFDRSxtQkFBQTtFbEIrNEREOztBa0I1NEREOzs7OztJbEJtNURHOztBa0I1NERIOztFQUVFLHNCQUFBO0VsQis0REQ7O0FrQjU0REQ7Ozs7OztJbEJvNURHOztBa0I1NERIOzs7O0VBSUUsNEJBQUE7RUFBNEIsUUFBQTtFQUM1QixpQkFBQTtFQUFpQixRQUFBO0VsQmk1RGxCOztBa0I5NEREOztJbEJrNURHOztBa0I5NERIOztFQUVFLGlCQUFBO0VsQmk1REQ7O0FrQjk0REQ7O0lsQms1REc7O0FrQjk0REg7O0VBRUUsV0FBQTtFQUNBLFlBQUE7RWxCaTVERDs7QWtCOTRERDs7O0lsQm01REc7O0FrQjk0REg7RUFDRSxxQkFBQTtFbEJpNUREOztBa0I5NEREOzs7Ozs7SWxCczVE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RTlDaTNJRDs7QThDOTJJRDtFQUNFLGVBQUE7RUFDQSxvQkFBQTtFQUNBLGNBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtFQUNBLG9CQUFBO0VBQ0Esb0JBQUE7RTlDaTNJRDs7QThDOTJJRDtFQUNFLGFBQUE7RTlDaTNJRDs7QThDOTJJRDtFQUNFLGFBQUE7RTlDaTNJRDs7QThDOTJJRDs7STlDazNJRzs7QThDOTJJSDtFQUNFO0lBQ0Usb0JBQUE7STlDaTNJRDtFQUNGOztBOEM5MklEO0VBQ0U7SUFDRSxvSTlDaTNJOEM7SThDajNJOUM7bUQ5Q2kzSThDO0k4QzkySTlDO2E5Q2czSVE7SThDNzJJUjtnQjlDKzJJVztJOEM1MklYLDhCQUFBO0k5QzgySUQ7RUFDRjs7QURyOUlEOztJQ3k5SUc7O0ErQ3RnSkg7Ozs7O0cvQzZnSkU7O0ErQ3RnSkY7O0cvQzBnSkU7O0ErQzUvSUY7O0kvQ2dnSkc7O0ErQzUvSUg7RUFFRSxvQkFBQTtFQWFBLGtCQUFBO0VBSUEsd0JBQUE7RUFTQSxtQkFBQTtFQVFBLGtCQUFBO0UvQ2crSUQ7O0ErQzE5SUQ7O0kvQzg5SUc7Ozs7QStDaDlJSDs7SS9DczlJRzs7OztBK0NwOElIOztJL0MwOElHOzs7O0ErQ2g4SUg7O0kvQ3M4SUc7Ozs7QStDMzdJSDs7SS9DaThJRzs7OztBZ0R6akpIOzs7O0loRGlrSkc7O0FnRDNqSkg7O0loRCtqSkc7Ozs7QWdEdGlKSDs7SWhENGlKRzs7OztBZ0RwaUpIOztJaEQwaUpHOzs7O0FnRGxpSkg7O0loRHdpSkc7Ozs7QWdEaGlKSDs7SWhEc2lKRzs7OztBZ0Q3aEpIOztJaERtaUpHOzs7O0FnRGhoSkg7Ozs7SWhEd2hKRzs7QWdEbGhKSDs7SWhEc2hKRzs7QWdEbGhKSDtFQUVFLFlBQUE7RUFHQSxhQUFBO0VBT0EsZUFBQTtFQUlBLFlBQUE7RUFLQSxZQUFBO0VBR0EsWUFBQTtFQUdBLFdBQUE7RUFJQSxXQUFBO0VoRDgvSUQ7O0FnRGovSUQ7O0loRHEvSUc7Ozs7QWdEMTlJSDs7SWhEZytJRzs7OztBZ0R0OUlIOztJaEQ0OUlHOzs7O0FnRHQ4SUg7O0loRDQ4SUc7Ozs7QWdEajhJSDs7SWhEdThJRzs7OztBZ0R2N0lIOztJaEQ2N0lHOzs7O0FnRG43SUg7O0loRHk3SUc7Ozs7QWdEeDZJSDs7SWhEODZJRzs7OztBZ0RyNklIOztJaEQyNklHOzs7O0FnRGg2SUg7O0loRHM2SUc7Ozs7QWdEajVJSDs7SWhEdTVJRzs7OztBZ0R0NElIOztJaEQ0NElHOzs7O0FnRC8zSUg7O0loRHE0SUc7Ozs7QWdEeDJJSDs7OztJaERnM0lHOztBZ0QxMklIOztJaEQ4MklHOzs7O0FEOXBKSCxzREFBQTs7QUFFQTtFQUNFLHlDQUFBO1VBQUEsaUNBQUE7RUFDQSxZQUFBO0VDbXFKRDs7QURocUpEO0VBQ0UsWUFBQTtFQ21xSkQ7O0FEaHFKRCwrQkFBQTs7QUFFQTs7Ozs7O0VBTUUsMEJBQUE7RUNtcUpEIiwiZmlsZSI6InRvLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXRpbHNcbiAqL1xuXG5AaW1wb3J0ICcuL2NvbXBvbmVudHMvdXRpbHMtbGF5b3V0L2luZGV4LmNzcyc7XG5AaW1wb3J0ICcuL2NvbXBvbmVudHMvdXRpbHMtYmFja2dyb3VuZC9pbmRleC5jc3MnO1xuQGltcG9ydCAnLi9jb21wb25lbnRzL3V0aWxzLWRpc3BsYXkvaW5kZXguY3NzJztcbkBpbXBvcnQgJy4vY29tcG9uZW50cy91dGlscy1saXN0L2luZGV4LmNzcyc7XG5AaW1wb3J0ICcuL2NvbXBvbmVudHMvdXRpbHMtcG9zaXRpb24vaW5kZXguY3NzJztcbkBpbXBvcnQgJy4vY29tcG9uZW50cy91dGlscy1zaXplL2luZGV4LmNzcyc7XG5AaW1wb3J0ICcuL2NvbXBvbmVudHMvdXRpbHMtc3BhY2UvaW5kZXguY3NzJztcbkBpbXBvcnQgJy4vY29tcG9uZW50cy91dGlscy10ZXh0L2luZGV4LmNzcyc7XG5cblxuLyoqXG4gKiBDb21wb25lbnRzXG4gKi9cblxuQGltcG9ydCAnc3VpdGNzcy1jb21wb25lbnRzLWdyaWQnO1xuQGltcG9ydCAnLi9jb21wb25lbnRzL2Jhc2UvaW5kZXguY3NzJztcbkBpbXBvcnQgJy4vY29tcG9uZW50cy9idXR0b24tZ3JvdXAvaW5kZXguY3NzJztcbkBpbXBvcnQgJy4vY29tcG9uZW50cy9idXR0b24vaW5kZXguY3NzJztcbkBpbXBvcnQgJy4vY29tcG9uZW50cy9pbnB1dC1ncm91cC9pbmRleC5jc3MnO1xuQGltcG9ydCAnLi9jb21wb25lbnRzL2Ryb3Bkb3duL2luZGV4LmNzcyc7XG5AaW1wb3J0ICcuL2NvbXBvbmVudHMvaGVhZGVyL2luZGV4LmNzcyc7XG5AaW1wb3J0ICcuL2NvbXBvbmVudHMvaGVhZGluZy9pbmRleC5jc3MnO1xuQGltcG9ydCAnLi9jb21wb25lbnRzL2ljb24vaW5kZXguY3NzJztcbkBpbXBvcnQgJy4vY29tcG9uZW50cy9saW5rcy9pbmRleC5jc3MnO1xuQGltcG9ydCAnLi9jb21wb25lbnRzL2RpZmZlcmVuY2UvaW5kZXguY3NzJztcbkBpbXBvcnQgJy4vY29tcG9uZW50cy9sb2dvLWxvYWRlci9pbmRleC5jc3MnO1xuQGltcG9ydCAnLi9jb21wb25lbnRzL1Byb2dyZXNzQmFyL2luZGV4LmNzcyc7XG5AaW1wb3J0ICcuL2NvbXBvbmVudHMvbW9kYWwvaW5kZXguY3NzJztcbkBpbXBvcnQgJy4vY29tcG9uZW50cy90b2dnbGUvaW5kZXguY3NzJztcbkBpbXBvcnQgJy4vY29tcG9uZW50cy9zd2l0Y2gvaW5kZXguY3NzJztcbkBpbXBvcnQgJy4vY29tcG9uZW50cy90cmFuc1VuaXQvaW5kZXguY3NzJztcbkBpbXBvcnQgJy4vY29tcG9uZW50cy9yZXNpemVyL2luZGV4LmNzcyc7XG5cblxuLyoqXG4gKiBWaWV3c1xuICovXG5cbkBpbXBvcnQgJy4vZWRpdG9yL2luZGV4LmNzcyc7XG5cblxuLyoqXG4gKiBUaGVtZVxuICovXG5cbkBpbXBvcnQgJy4vY29tcG9uZW50cy90aGVtZS9pbmRleC5jc3MnO1xuXG5cbi8qIEZpeCBmb3IgaG90a2V5cywgcmVtb3ZlIHRoaXMgd2hlbiByZWltcGxlbWVudGVkICovXG5cbi5mYWRlIHtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuMjVzIGVhc2VpbjtcbiAgb3BhY2l0eTogMDtcbn1cblxuLmZhZGUuaW4ge1xuICBvcGFjaXR5OiAxO1xufVxuXG4vKiBBbmd1bGFyIHNwZWNpZmljIGNsYXNzZXMgKi9cblxuW25nXFw6Y2xvYWtdLFxuW25nLWNsb2FrXSxcbltkYXRhLW5nLWNsb2FrXSxcblt4LW5nLWNsb2FrXSxcbi5uZy1jbG9hayxcbi54LW5nLWNsb2FrIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuIiwiLyoqXG4gKiBVdGlsc1xuICovXG5cbi8qKlxuICogQ29udGFpbiBmbG9hdHNcbiAqXG4gKiBNYWtlIGFuIGVsZW1lbnQgZXhwYW5kIHRvIGNvbnRhaW4gZmxvYXRlZCBjaGlsZHJlbi5cbiAqIFVzZXMgcHNldWRvLWVsZW1lbnRzIChtaWNybyBjbGVhcmZpeCkuXG4gKlxuICogMS4gVGhlIHNwYWNlIGNvbnRlbnQgaXMgb25lIHdheSB0byBhdm9pZCBhbiBPcGVyYSBidWcgd2hlbiB0aGVcbiAqICAgIGBjb250ZW50ZWRpdGFibGVgIGF0dHJpYnV0ZSBpcyBpbmNsdWRlZCBhbnl3aGVyZSBlbHNlIGluIHRoZSBkb2N1bWVudC5cbiAqICAgIE90aGVyd2lzZSBpdCBjYXVzZXMgc3BhY2UgdG8gYXBwZWFyIGF0IHRoZSB0b3AgYW5kIGJvdHRvbSBvZiB0aGVcbiAqICAgIGVsZW1lbnQuXG4gKiAyLiBUaGUgdXNlIG9mIGB0YWJsZWAgcmF0aGVyIHRoYW4gYGJsb2NrYCBpcyBvbmx5IG5lY2Vzc2FyeSBpZiB1c2luZ1xuICogICAgYDpiZWZvcmVgIHRvIGNvbnRhaW4gdGhlIHRvcC1tYXJnaW5zIG9mIGNoaWxkIGVsZW1lbnRzLlxuICovXG5cbi51LWNmOmJlZm9yZSxcbi51LWNmOmFmdGVyIHtcbiAgY29udGVudDogXCIgXCI7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDIgKi9cbn1cblxuLnUtY2Y6YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbn1cblxuLyoqXG4gKiBOZXcgYmxvY2sgZm9ybWF0dGluZyBjb250ZXh0XG4gKlxuICogVGhpcyBhZmZvcmRzIHNvbWUgdXNlZnVsIHByb3BlcnRpZXMgdG8gdGhlIGVsZW1lbnQuIEl0IHdvbid0IHdyYXAgdW5kZXJcbiAqIGZsb2F0cy4gV2lsbCBhbHNvIGNvbnRhaW4gYW55IGZsb2F0ZWQgY2hpbGRyZW4uXG5cbiAqIE4uQi4gVGhpcyB3aWxsIGNsaXAgb3ZlcmZsb3cuIFVzZSB0aGUgYWx0ZXJuYXRpdmUgbWV0aG9kIGJlbG93IGlmIHRoaXMgaXNcbiAqIHByb2JsZW1hdGljLlxuICovXG5cbi51LW5iZmMge1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogTmV3IGJsb2NrIGZvcm1hdHRpbmcgY29udGV4dCAoYWx0ZXJuYXRpdmUpXG4gKlxuICogQWx0ZXJuYXRpdmUgbWV0aG9kIHdoZW4gb3ZlcmZsb3cgbXVzdCBub3QgYmUgY2xpcHBlZC5cbiAqXG4gKiAxLiBDcmVhdGUgYSBuZXcgYmxvY2sgZm9ybWF0dGluZyBjb250ZXh0IChOQkZDKS5cbiAqIDIuIEF2b2lkIHNocmluay13cmFwIGJlaGF2aW91ciBvZiB0YWJsZS1jZWxsLlxuICpcbiAqIE4uQi4gVGhpcyBicmVha3MgZG93biBpbiBzb21lIGJyb3dzZXJzIHdoZW4gZWxlbWVudHMgd2l0aGluIHRoaXMgZWxlbWVudFxuICogZXhjZWVkIGl0cyB3aWR0aC5cbiAqL1xuXG4udS1uYmZjQWx0IHtcbiAgZGlzcGxheTogdGFibGUtY2VsbCAhaW1wb3J0YW50O1xuICAvKiAxICovXG4gIHdpZHRoOiAxMDAwMHB4ICFpbXBvcnRhbnQ7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBGbG9hdHNcbiAqL1xuXG4udS1mbG9hdExlZnQge1xuICBmbG9hdDogbGVmdCAhaW1wb3J0YW50O1xufVxuXG4udS1mbG9hdFJpZ2h0IHtcbiAgZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOjApIGFuZCAobWF4LXdpZHRoOjc0MHB4KSB7XG4gIC51LXNtLWZsb2F0Tm9uZSB7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgZmxvYXQ6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxufVxuXG5cblxuLnUtYmdGYWludCB7XG4gIG9wYWNpdHk6IC45O1xufVxuXG4udS1iZ0hpZ2gge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQ1LCAyNDYsIDI0Nyk7XG59XG5cbi51LWJnSGlnaGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MSwgMjUyLCAyNTIpO1xufVxuXG4udS1iZ0hpZ2hlc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuXG4udS1iZ0xvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMjksIDIzMiwgMjMzKTtcbn1cblxuLnUtYmdMb3dlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMjIsIDIyNSwgMjI2KTtcbn1cblxuLnUtYmdMb3dlc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjE1LCAyMTcsIDIxOCk7XG59XG5cbi51LWJnUG9wIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgzMiwgMTEzLCAxMzgsIDAuMTIpO1xuICBib3JkZXItYm90dG9tLXdpZHRoOiAycHg7XG59XG5cbi51LWJnTmV1dHJhbCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFQ0VGRjA7XG59XG5cbi51LWJnUHJpbWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwM0E2RDc7XG59XG5cbi51LWJnU2Vjb25kYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwNzE4QTtcbn1cblxuLnUtYmdEYW5nZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyMTYsIDIxNik7XG59XG5cbi51LWJnV2FybmluZyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDIzOCwgMjA0KTtcbn1cblxuLnUtYmdVbnN1cmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUzLCAyNTIsIDIzMik7XG59XG5cbi51LWJnU3VjY2VzcyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMjIsIDI0NCwgMjI5KTtcbn1cblxuLnUtYmdIaWdobGlnaHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjA1LCAyMzcsIDI0Nyk7XG59XG5cbi8qKlxuICogRGlzcGxheS10eXBlIHV0aWxpdGllc1xuICovXG5cbi51LWJsb2NrIHtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbn1cblxuLnUtaGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIENvbXBsZXRlbHkgcmVtb3ZlIGZyb20gdGhlIGZsb3cgYnV0IGxlYXZlIGF2YWlsYWJsZSB0byBzY3JlZW4gcmVhZGVycy5cbiAqL1xuXG4udS1oaWRkZW5WaXN1YWxseSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxcHggIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxcHggIWltcG9ydGFudDtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICBib3JkZXI6IDAgIWltcG9ydGFudDtcbiAgY2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpICFpbXBvcnRhbnQ7XG59XG5cbi51LWlubGluZSB7XG4gIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIDEuIEZpeCBmb3IgRmlyZWZveCBidWc6IGFuIGltYWdlIHN0eWxlZCBgbWF4LXdpZHRoOjEwMCVgIHdpdGhpbiBhblxuICogaW5saW5lLWJsb2NrIHdpbGwgZGlzcGxheSBhdCBpdHMgZGVmYXVsdCBzaXplLCBhbmQgbm90IGxpbWl0IGl0cyB3aWR0aCB0b1xuICogMTAwJSBvZiBhbiBhbmNlc3RyYWwgY29udGFpbmVyLlxuICovXG5cbi51LWlubGluZUJsb2NrIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xufVxuXG4udS10YWJsZSB7XG4gIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7XG59XG5cbi51LXRhYmxlQ2VsbCB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGwgIWltcG9ydGFudDtcbn1cblxuLnUtdGFibGVSb3cge1xuICBkaXNwbGF5OiB0YWJsZS1yb3cgIWltcG9ydGFudDtcbn1cblxuXG5cbi8qKlxuICogUm91bmQgYm94XG4gKlxuICogVXNlIG9mICUgaGVyZSB3aWxsIGRpc3RvcnQgYm94IGlmIGl0IGlzIG5vdCBzcXVhcmVcbiAqL1xuXG4udS1yb3VuZCB7XG4gIGJvcmRlci1yYWRpdXM6IDEwMDBweCAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG59XG5cbi51LXJvdW5kaXNoIHtcbiAgYm9yZGVyLXJhZGl1czogMC41NjI1cmVtICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbn1cblxuLnUtcm91bmRlZCB7XG4gIGJvcmRlci1yYWRpdXM6IDEuMTI1cmVtICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6MCkgYW5kIChtYXgtd2lkdGg6NzQwcHgpIHtcbiAgLnUtc20taGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6NzQxcHgpIGFuZCAobWF4LXdpZHRoOjk2MHB4KSB7XG4gIC51LW1kLWhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOjk2MHB4KSB7XG4gIC51LWx0ZW1kLWhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOjc0MXB4KSB7XG4gIC51LWd0ZW1kLWhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOjk2MXB4KSBhbmQgKG1heC13aWR0aDoxMjcwcHgpIHtcbiAgLnUtbGctaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6OTYxcHgpIHtcbiAgLnUtZ3RlbGctaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuXG5cbi8qKlxuICogRGVmaW5pdGlvbiBsaXN0c1xuICpcbiAqIFJlbW92ZSBkZWZhdWx0IHN0eWxpbmdcbiAqL1xuXG4udS1kbFVuc3R5bGVkID4gZGQge1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLyoqXG4gKiBEaXNwbGF5IGRlZmluaXRpb24gbGlzdHMgaW5saW5lXG4gKi9cblxuLnUtZGxJbmxpbmUgZHQsXG4udS1kbElubGluZSBkZCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiAwLjE4NzVyZW07XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG4vKipcbiAqIFN0YW5kYXJkIGxpc3RzXG4gKlxuICogUmVtb3ZlIGRlZmF1bHQgc3R5bGluZ1xuICovXG5cbi51LWxpc3RVbnN0eWxlZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLnUtbGlzdFVuc3R5bGVkID4gbGkge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBEaXNwbGF5IGxpc3QgaXRlbXMgaW5saW5lXG4gKi9cblxuLnUtbGlzdElubGluZSB7XG4gIG1hcmdpbi1sZWZ0OiAtMC4xODc1cmVtO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi51LWxpc3RJbmxpbmUgPiBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZy1yaWdodDogMC4xODc1cmVtO1xuICBwYWRkaW5nLWxlZnQ6IDAuMTg3NXJlbTtcbn1cblxuLyoqXG4gKiBEaXNwbGF5IGxpc3QgaXRlbXMgaW5saW5lXG4gKi9cblxuLnUtbGlzdEhvcml6b250YWwge1xuICAvKiBSZW1vdmUgZXh0cmEgc3BhY2luZyBpbmxpbmUtYmxvY2sgYWRkcyAqL1xuICBmb250LXNpemU6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi51LWxpc3RIb3Jpem9udGFsID4gbGkge1xuICAvKiBSZXR1cm4gZm9udCB0byBub3JtYWwgc2l6ZSAqL1xuICBmb250LXNpemU6IDFyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLnUtcG9zQWJzb2x1dGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBQaW5zIHRvIGFsbCBjb3JuZXJzIGJ5IGRlZmF1bHQuIEJ1dCB3aGVuIGEgd2lkdGggYW5kL29yIGhlaWdodCBhcmVcbiAqIHByb3ZpZGVkLCB0aGUgZWxlbWVudCB3aWxsIGJlIGNlbnRlcmVkIGluIGl0cyBuZWFyZXN0IHJlbGF0aXZlbHktcG9zaXRpb25lZFxuICogYW5jZXN0b3IuXG4gKi9cblxuLnUtcG9zQWJzb2x1dGVDZW50ZXIge1xuICBib3R0b206IDAgIWltcG9ydGFudDtcbiAgbGVmdDogMCAhaW1wb3J0YW50O1xuICBtYXJnaW46IGF1dG8gIWltcG9ydGFudDtcbiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gIHJpZ2h0OiAwICFpbXBvcnRhbnQ7XG4gIHRvcDogMCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIDEuIE1ha2Ugc3VyZSBmaXhlZCBlbGVtZW50cyBhcmUgcHJvbW90ZWQgaW50byBhIG5ldyBsYXllciwgZm9yIHBlcmZvcm1hbmNlXG4gKiAgICByZWFzb25zLlxuICovXG5cbi51LXBvc0ZpeGVkIHtcbiAgcG9zaXRpb246IGZpeGVkICFpbXBvcnRhbnQ7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLyogMSAqL1xufVxuXG4udS1wb3NSZWxhdGl2ZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZSAhaW1wb3J0YW50O1xufVxuXG4udS1wb3NTdGF0aWMge1xuICBwb3NpdGlvbjogc3RhdGljICFpbXBvcnRhbnQ7XG59XG5cbi51LXBvc0Fic29sdXRlTGVmdCB7XG4gIGJvdHRvbTogMCAhaW1wb3J0YW50O1xuICBsZWZ0OiAwICFpbXBvcnRhbnQ7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICB0b3A6IDAgIWltcG9ydGFudDtcbn1cblxuLnUtcG9zQWJzb2x1dGVSaWdodCB7XG4gIGJvdHRvbTogMCAhaW1wb3J0YW50O1xuICByaWdodDogMCAhaW1wb3J0YW50O1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgdG9wOiAwICFpbXBvcnRhbnQ7XG59XG5cbi51LXBvc0NlbnRlckNlbnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG5cbi8qKlxuICogU2l6aW5nIHV0aWxpdGllc1xuICovXG5cbi8qIEludHJpbnNpYyB3aWR0aHNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogTWFrZSBhbiBlbGVtZW50IHNocmluayB3cmFwIGl0cyBjb250ZW50LlxuICovXG5cbi51LXNpemVGaXQsXG4udS1zaXplRml0QWx0IHtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgZmxvYXQ6IGxlZnQgIWltcG9ydGFudDtcbiAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZUZpdEFsdCB7XG4gIGZsb2F0OiByaWdodCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIE1ha2UgYW4gZWxlbWVudCBmaWxsIHRoZSByZW1haW5pbmcgc3BhY2UuXG4gKiBOLkIuIFRoaXMgd2lsbCBoaWRlIG92ZXJmbG93LlxuICovXG5cbi51LXNpemVGaWxsIHtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEFuIGFsdGVybmF0aXZlIG1ldGhvZCB0byBtYWtlIGFuIGVsZW1lbnQgZmlsbCB0aGUgcmVtYWluaW5nIHNwYWNlLlxuICogTi5CLiBEbyBub3QgdXNlIGlmIGNoaWxkIGVsZW1lbnRzIG1pZ2h0IGJlIHdpZGVyIHRoYW4gdGhlIHJlbWFpbmluZyBzcGFjZS5cbiAqIEluIENocm9tZSwgU2FmYXJpLCBhbmQgRmlyZWZveCBpdCByZXN1bHRzIGluIHVuZGVzaXJlZCBsYXlvdXQuXG4gKi9cblxuLnUtc2l6ZUZpbGxBbHQge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsICFpbXBvcnRhbnQ7XG4gIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB3aWR0aDogMTAwMDBweCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIE1ha2UgYW4gZWxlbWVudCB0aGUgd2lkdGggb2YgaXRzIHBhcmVudC5cbiAqL1xuXG4udS1zaXplRnVsbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3ggIWltcG9ydGFudDtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbn1cblxuLyogUHJvcG9ydGlvbmFsIHdpZHRoc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBTcGVjaWZ5IHRoZSBwcm9wb3J0aW9uYWwgd2lkdGggb2YgYW4gb2JqZWN0LlxuICogSW50ZW50aW9uYWwgcmVkdW5kYW5jeSBidWlsZCBpbnRvIGVhY2ggc2V0IG9mIHVuaXQgY2xhc3Nlcy5cbiAqIFN1cHBvcnRzOiAyLCAzLCA0LCA1LCA2LCA4LCAxMCwgMTIgcGFydFxuICovXG5cbi51LXNpemUxb2YxMiB7XG4gIHdpZHRoOiA4LjMzMzMzMzMzMzMzMzMzMiUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTFvZjEwIHtcbiAgd2lkdGg6IDEwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMW9mOCB7XG4gIHdpZHRoOiAxMi41JSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMW9mNixcbi51LXNpemUyb2YxMiB7XG4gIHdpZHRoOiAxNi42NjY2NjY2NjY2NjY2NjQlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUxb2Y1LFxuLnUtc2l6ZTJvZjEwIHtcbiAgd2lkdGg6IDIwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMW9mNCxcbi51LXNpemUyb2Y4LFxuLnUtc2l6ZTNvZjEyIHtcbiAgd2lkdGg6IDI1JSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplM29mMTAge1xuICB3aWR0aDogMzAlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUxb2YzLFxuLnUtc2l6ZTJvZjYsXG4udS1zaXplNG9mMTIge1xuICB3aWR0aDogMzMuMzMzMzMzMzMzMzMzMzMlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUzb2Y4IHtcbiAgd2lkdGg6IDM3LjUlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUyb2Y1LFxuLnUtc2l6ZTRvZjEwIHtcbiAgd2lkdGg6IDQwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplNW9mMTIge1xuICB3aWR0aDogNDEuNjY2NjY2NjY2NjY2NjclICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUxb2YyLFxuLnUtc2l6ZTJvZjQsXG4udS1zaXplM29mNixcbi51LXNpemU0b2Y4LFxuLnUtc2l6ZTVvZjEwLFxuLnUtc2l6ZTZvZjEyIHtcbiAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplN29mMTIge1xuICB3aWR0aDogNTguMzMzMzMzMzMzMzMzMzM2JSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplM29mNSxcbi51LXNpemU2b2YxMCB7XG4gIHdpZHRoOiA2MCUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTVvZjgge1xuICB3aWR0aDogNjIuNSUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTJvZjMsXG4udS1zaXplNG9mNixcbi51LXNpemU4b2YxMiB7XG4gIHdpZHRoOiA2Ni42NjY2NjY2NjY2NjY2NiUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTdvZjEwIHtcbiAgd2lkdGg6IDcwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplM29mNCxcbi51LXNpemU2b2Y4LFxuLnUtc2l6ZTlvZjEyIHtcbiAgd2lkdGg6IDc1JSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplNG9mNSxcbi51LXNpemU4b2YxMCB7XG4gIHdpZHRoOiA4MCUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTVvZjYsXG4udS1zaXplMTBvZjEyIHtcbiAgd2lkdGg6IDgzLjMzMzMzMzMzMzMzMzM0JSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplN29mOCB7XG4gIHdpZHRoOiA4Ny41JSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplOW9mMTAge1xuICB3aWR0aDogOTAlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUxMW9mMTIge1xuICB3aWR0aDogOTEuNjY2NjY2NjY2NjY2NjYlICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogU2l6ZTogYnJlYWtwb2ludCAxIChzbWFsbClcbiAqL1xuXG5AbWVkaWEgKG1pbi13aWR0aDowKSBhbmQgKG1heC13aWR0aDo3NDBweCkge1xuICAvKipcbiAgICogTWFrZSBhbiBlbGVtZW50IHNocmluayB3cmFwIGl0cyBjb250ZW50LlxuICAgKi9cblxuICAudS1zbS1zaXplRml0LFxuICAudS1zbS1zaXplRml0QWx0IHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICAgIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemVGaXRBbHQge1xuICAgIGZsb2F0OiByaWdodCAhaW1wb3J0YW50O1xuICB9XG5cbiAgLyoqXG4gICAqIE1ha2UgYW4gZWxlbWVudCBmaWxsIHRoZSByZW1haW5pbmcgc3BhY2UuXG4gICAqIE4uQi4gVGhpcyB3aWxsIGhpZGUgb3ZlcmZsb3cuXG4gICAqL1xuXG4gIC51LXNtLXNpemVGaWxsIHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICAgIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbiAgICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEFuIGFsdGVybmF0aXZlIG1ldGhvZCB0byBtYWtlIGFuIGVsZW1lbnQgZmlsbCB0aGUgcmVtYWluaW5nIHNwYWNlLlxuICAgKiBOLkIuIERvIG5vdCB1c2UgaWYgY2hpbGQgZWxlbWVudHMgbWlnaHQgYmUgd2lkZXIgdGhhbiB0aGUgcmVtYWluaW5nIHNwYWNlLlxuICAgKiBJbiBDaHJvbWUsIFNhZmFyaSwgYW5kIEZpcmVmb3ggaXQgcmVzdWx0cyBpbiB1bmRlc2lyZWQgbGF5b3V0LlxuICAgKi9cblxuICAudS1zbS1zaXplRmlsbEFsdCB7XG4gICAgZGlzcGxheTogdGFibGUtY2VsbCAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIHdpZHRoOiAxMDAwMHB4ICFpbXBvcnRhbnQ7XG4gIH1cblxuICAvKipcbiAgICogTWFrZSBhbiBlbGVtZW50IHRoZSB3aWR0aCBvZiBpdHMgcGFyZW50LlxuICAgKi9cblxuICAudS1zbS1zaXplRnVsbCB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveCAhaW1wb3J0YW50O1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC8qIFByb3BvcnRpb25hbCB3aWR0aHM6IGJyZWFrcG9pbnQgMSAoc21hbGwpXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgLyoqXG4gICAqIFNwZWNpZnkgdGhlIHByb3BvcnRpb25hbCB3aWR0aCBvZiBhbiBvYmplY3QuXG4gICAqIEludGVudGlvbmFsIHJlZHVuZGFuY3kgYnVpbGQgaW50byBlYWNoIHNldCBvZiB1bml0IGNsYXNzZXMuXG4gICAqIFN1cHBvcnRzOiAyLCAzLCA0LCA1LCA2LCA4LCAxMCwgMTIgcGFydFxuICAgKi9cblxuICAudS1zbS1zaXplMW9mMTIge1xuICAgIHdpZHRoOiA4LjMzMzMzMzMzMzMzMzMzMiUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemUxb2YxMCB7XG4gICAgd2lkdGg6IDEwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTFvZjgge1xuICAgIHdpZHRoOiAxMi41JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTFvZjYsXG4gIC51LXNtLXNpemUyb2YxMiB7XG4gICAgd2lkdGg6IDE2LjY2NjY2NjY2NjY2NjY2NCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemUxb2Y1LFxuICAudS1zbS1zaXplMm9mMTAge1xuICAgIHdpZHRoOiAyMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemUxb2Y0LFxuICAudS1zbS1zaXplMm9mOCxcbiAgLnUtc20tc2l6ZTNvZjEyIHtcbiAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1zbS1zaXplM29mMTAge1xuICAgIHdpZHRoOiAzMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemUxb2YzLFxuICAudS1zbS1zaXplMm9mNixcbiAgLnUtc20tc2l6ZTRvZjEyIHtcbiAgICB3aWR0aDogMzMuMzMzMzMzMzMzMzMzMzMlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1zbS1zaXplM29mOCB7XG4gICAgd2lkdGg6IDM3LjUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1zbS1zaXplMm9mNSxcbiAgLnUtc20tc2l6ZTRvZjEwIHtcbiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1zbS1zaXplNW9mMTIge1xuICAgIHdpZHRoOiA0MS42NjY2NjY2NjY2NjY2NyUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemUxb2YyLFxuICAudS1zbS1zaXplMm9mNCxcbiAgLnUtc20tc2l6ZTNvZjYsXG4gIC51LXNtLXNpemU0b2Y4LFxuICAudS1zbS1zaXplNW9mMTAsXG4gIC51LXNtLXNpemU2b2YxMiB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTdvZjEyIHtcbiAgICB3aWR0aDogNTguMzMzMzMzMzMzMzMzMzM2JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTNvZjUsXG4gIC51LXNtLXNpemU2b2YxMCB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTVvZjgge1xuICAgIHdpZHRoOiA2Mi41JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTJvZjMsXG4gIC51LXNtLXNpemU0b2Y2LFxuICAudS1zbS1zaXplOG9mMTIge1xuICAgIHdpZHRoOiA2Ni42NjY2NjY2NjY2NjY2NiUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemU3b2YxMCB7XG4gICAgd2lkdGg6IDcwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTNvZjQsXG4gIC51LXNtLXNpemU2b2Y4LFxuICAudS1zbS1zaXplOW9mMTIge1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemU0b2Y1LFxuICAudS1zbS1zaXplOG9mMTAge1xuICAgIHdpZHRoOiA4MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemU1b2Y2LFxuICAudS1zbS1zaXplMTBvZjEyIHtcbiAgICB3aWR0aDogODMuMzMzMzMzMzMzMzMzMzQlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1zbS1zaXplN29mOCB7XG4gICAgd2lkdGg6IDg3LjUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1zbS1zaXplOW9mMTAge1xuICAgIHdpZHRoOiA5MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemUxMW9mMTIge1xuICAgIHdpZHRoOiA5MS42NjY2NjY2NjY2NjY2NiUgIWltcG9ydGFudDtcbiAgfVxufVxuXG4vKipcbiAqIFNpemU6IGJyZWFrcG9pbnQgMiAobWVkaXVtKVxuICovXG5cbkBtZWRpYSAobWluLXdpZHRoOjc0MXB4KSBhbmQgKG1heC13aWR0aDo5NjBweCkge1xuICAvKipcbiAgICogTWFrZSBhbiBlbGVtZW50IHNocmluayB3cmFwIGl0cyBjb250ZW50LlxuICAgKi9cblxuICAudS1tZC1zaXplRml0LFxuICAudS1tZC1zaXplRml0QWx0IHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICAgIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemVGaXRBbHQge1xuICAgIGZsb2F0OiByaWdodCAhaW1wb3J0YW50O1xuICB9XG5cbiAgLyoqXG4gICAqIE1ha2UgYW4gZWxlbWVudCBmaWxsIHRoZSByZW1haW5pbmcgc3BhY2UuXG4gICAqIE4uQi4gVGhpcyB3aWxsIGhpZGUgb3ZlcmZsb3cuXG4gICAqL1xuXG4gIC51LW1kLXNpemVGaWxsIHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICAgIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbiAgICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEFuIGFsdGVybmF0aXZlIG1ldGhvZCB0byBtYWtlIGFuIGVsZW1lbnQgZmlsbCB0aGUgcmVtYWluaW5nIHNwYWNlLlxuICAgKiBOLkIuIERvIG5vdCB1c2UgaWYgY2hpbGQgZWxlbWVudHMgbWlnaHQgYmUgd2lkZXIgdGhhbiB0aGUgcmVtYWluaW5nIHNwYWNlLlxuICAgKiBJbiBDaHJvbWUsIFNhZmFyaSwgYW5kIEZpcmVmb3ggaXQgcmVzdWx0cyBpbiB1bmRlc2lyZWQgbGF5b3V0LlxuICAgKi9cblxuICAudS1tZC1zaXplRmlsbEFsdCB7XG4gICAgZGlzcGxheTogdGFibGUtY2VsbCAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIHdpZHRoOiAxMDAwMHB4ICFpbXBvcnRhbnQ7XG4gIH1cblxuICAvKipcbiAgICogTWFrZSBhbiBlbGVtZW50IHRoZSB3aWR0aCBvZiBpdHMgcGFyZW50LlxuICAgKi9cblxuICAudS1tZC1zaXplRnVsbCB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveCAhaW1wb3J0YW50O1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC8qIFByb3BvcnRpb25hbCB3aWR0aHM6IGJyZWFrcG9pbnQgMiAobWVkaXVtKVxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIC8qKlxuICAgKiBTcGVjaWZ5IHRoZSBwcm9wb3J0aW9uYWwgd2lkdGggb2YgYW4gb2JqZWN0LlxuICAgKiBJbnRlbnRpb25hbCByZWR1bmRhbmN5IGJ1aWxkIGludG8gZWFjaCBzZXQgb2YgdW5pdCBjbGFzc2VzLlxuICAgKiBTdXBwb3J0czogMiwgMywgNCwgNSwgNiwgOCwgMTAsIDEyIHBhcnRcbiAgICovXG5cbiAgLnUtbWQtc2l6ZTFvZjEyIHtcbiAgICB3aWR0aDogOC4zMzMzMzMzMzMzMzMzMzIlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1tZC1zaXplMW9mMTAge1xuICAgIHdpZHRoOiAxMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemUxb2Y4IHtcbiAgICB3aWR0aDogMTIuNSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemUxb2Y2LFxuICAudS1tZC1zaXplMm9mMTIge1xuICAgIHdpZHRoOiAxNi42NjY2NjY2NjY2NjY2NjQlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1tZC1zaXplMW9mNSxcbiAgLnUtbWQtc2l6ZTJvZjEwIHtcbiAgICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1tZC1zaXplMW9mNCxcbiAgLnUtbWQtc2l6ZTJvZjgsXG4gIC51LW1kLXNpemUzb2YxMiB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTNvZjEwIHtcbiAgICB3aWR0aDogMzAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1tZC1zaXplMW9mMyxcbiAgLnUtbWQtc2l6ZTJvZjYsXG4gIC51LW1kLXNpemU0b2YxMiB7XG4gICAgd2lkdGg6IDMzLjMzMzMzMzMzMzMzMzMzJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTNvZjgge1xuICAgIHdpZHRoOiAzNy41JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTJvZjUsXG4gIC51LW1kLXNpemU0b2YxMCB7XG4gICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTVvZjEyIHtcbiAgICB3aWR0aDogNDEuNjY2NjY2NjY2NjY2NjclICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1tZC1zaXplMW9mMixcbiAgLnUtbWQtc2l6ZTJvZjQsXG4gIC51LW1kLXNpemUzb2Y2LFxuICAudS1tZC1zaXplNG9mOCxcbiAgLnUtbWQtc2l6ZTVvZjEwLFxuICAudS1tZC1zaXplNm9mMTIge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemU3b2YxMiB7XG4gICAgd2lkdGg6IDU4LjMzMzMzMzMzMzMzMzMzNiUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemUzb2Y1LFxuICAudS1tZC1zaXplNm9mMTAge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemU1b2Y4IHtcbiAgICB3aWR0aDogNjIuNSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemUyb2YzLFxuICAudS1tZC1zaXplNG9mNixcbiAgLnUtbWQtc2l6ZThvZjEyIHtcbiAgICB3aWR0aDogNjYuNjY2NjY2NjY2NjY2NjYlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1tZC1zaXplN29mMTAge1xuICAgIHdpZHRoOiA3MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemUzb2Y0LFxuICAudS1tZC1zaXplNm9mOCxcbiAgLnUtbWQtc2l6ZTlvZjEyIHtcbiAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1tZC1zaXplNG9mNSxcbiAgLnUtbWQtc2l6ZThvZjEwIHtcbiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1tZC1zaXplNW9mNixcbiAgLnUtbWQtc2l6ZTEwb2YxMiB7XG4gICAgd2lkdGg6IDgzLjMzMzMzMzMzMzMzMzM0JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTdvZjgge1xuICAgIHdpZHRoOiA4Ny41JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTlvZjEwIHtcbiAgICB3aWR0aDogOTAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1tZC1zaXplMTFvZjEyIHtcbiAgICB3aWR0aDogOTEuNjY2NjY2NjY2NjY2NjYlICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLyoqXG4gKiBTaXplOiBicmVha3BvaW50IDMgKGxhcmdlKVxuICovXG5cbkBtZWRpYSAobWluLXdpZHRoOjk2MXB4KSBhbmQgKG1heC13aWR0aDoxMjcwcHgpIHtcbiAgLyoqXG4gICAqIE1ha2UgYW4gZWxlbWVudCBzaHJpbmsgd3JhcCBpdHMgY29udGVudC5cbiAgICovXG5cbiAgLnUtbGctc2l6ZUZpdCxcbiAgLnUtbGctc2l6ZUZpdEFsdCB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgICBmbG9hdDogbGVmdCAhaW1wb3J0YW50O1xuICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplRml0QWx0IHtcbiAgICBmbG9hdDogcmlnaHQgIWltcG9ydGFudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYWtlIGFuIGVsZW1lbnQgZmlsbCB0aGUgcmVtYWluaW5nIHNwYWNlLlxuICAgKiBOLkIuIFRoaXMgd2lsbCBoaWRlIG92ZXJmbG93LlxuICAgKi9cblxuICAudS1sZy1zaXplRmlsbCB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBbiBhbHRlcm5hdGl2ZSBtZXRob2QgdG8gbWFrZSBhbiBlbGVtZW50IGZpbGwgdGhlIHJlbWFpbmluZyBzcGFjZS5cbiAgICogTi5CLiBEbyBub3QgdXNlIGlmIGNoaWxkIGVsZW1lbnRzIG1pZ2h0IGJlIHdpZGVyIHRoYW4gdGhlIHJlbWFpbmluZyBzcGFjZS5cbiAgICogSW4gQ2hyb21lLCBTYWZhcmksIGFuZCBGaXJlZm94IGl0IHJlc3VsdHMgaW4gdW5kZXNpcmVkIGxheW91dC5cbiAgICovXG5cbiAgLnUtbGctc2l6ZUZpbGxBbHQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGwgIWltcG9ydGFudDtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICB3aWR0aDogMTAwMDBweCAhaW1wb3J0YW50O1xuICB9XG5cbiAgLyoqXG4gICAqIE1ha2UgYW4gZWxlbWVudCB0aGUgd2lkdGggb2YgaXRzIHBhcmVudC5cbiAgICovXG5cbiAgLnUtbGctc2l6ZUZ1bGwge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3ggIWltcG9ydGFudDtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAvKiBQcm9wb3J0aW9uYWwgd2lkdGhzOiBicmVha3BvaW50IDMgKGxhcmdlKVxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIC8qKlxuICAgKiBTcGVjaWZ5IHRoZSBwcm9wb3J0aW9uYWwgd2lkdGggb2YgYW4gb2JqZWN0LlxuICAgKiBJbnRlbnRpb25hbCByZWR1bmRhbmN5IGJ1aWxkIGludG8gZWFjaCBzZXQgb2YgdW5pdCBjbGFzc2VzLlxuICAgKiBTdXBwb3J0czogMiwgMywgNCwgNSwgNiwgOCwgMTAsIDEyIHBhcnRcbiAgICovXG5cbiAgLnUtbGctc2l6ZTFvZjEyIHtcbiAgICB3aWR0aDogOC4zMzMzMzMzMzMzMzMzMzIlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplMW9mMTAge1xuICAgIHdpZHRoOiAxMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUxb2Y4IHtcbiAgICB3aWR0aDogMTIuNSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUxb2Y2LFxuICAudS1sZy1zaXplMm9mMTIge1xuICAgIHdpZHRoOiAxNi42NjY2NjY2NjY2NjY2NjQlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplMW9mNSxcbiAgLnUtbGctc2l6ZTJvZjEwIHtcbiAgICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplMW9mNCxcbiAgLnUtbGctc2l6ZTJvZjgsXG4gIC51LWxnLXNpemUzb2YxMiB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbGctc2l6ZTNvZjEwIHtcbiAgICB3aWR0aDogMzAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplMW9mMyxcbiAgLnUtbGctc2l6ZTJvZjYsXG4gIC51LWxnLXNpemU0b2YxMiB7XG4gICAgd2lkdGg6IDMzLjMzMzMzMzMzMzMzMzMzJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbGctc2l6ZTNvZjgge1xuICAgIHdpZHRoOiAzNy41JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbGctc2l6ZTJvZjUsXG4gIC51LWxnLXNpemU0b2YxMCB7XG4gICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbGctc2l6ZTVvZjEyIHtcbiAgICB3aWR0aDogNDEuNjY2NjY2NjY2NjY2NjclICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplMW9mMixcbiAgLnUtbGctc2l6ZTJvZjQsXG4gIC51LWxnLXNpemUzb2Y2LFxuICAudS1sZy1zaXplNG9mOCxcbiAgLnUtbGctc2l6ZTVvZjEwLFxuICAudS1sZy1zaXplNm9mMTIge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemU3b2YxMiB7XG4gICAgd2lkdGg6IDU4LjMzMzMzMzMzMzMzMzMzNiUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUzb2Y1LFxuICAudS1sZy1zaXplNm9mMTAge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemU1b2Y4IHtcbiAgICB3aWR0aDogNjIuNSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUyb2YzLFxuICAudS1sZy1zaXplNG9mNixcbiAgLnUtbGctc2l6ZThvZjEyIHtcbiAgICB3aWR0aDogNjYuNjY2NjY2NjY2NjY2NjYlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplN29mMTAge1xuICAgIHdpZHRoOiA3MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUzb2Y0LFxuICAudS1sZy1zaXplNm9mOCxcbiAgLnUtbGctc2l6ZTlvZjEyIHtcbiAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplNG9mNSxcbiAgLnUtbGctc2l6ZThvZjEwIHtcbiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplNW9mNixcbiAgLnUtbGctc2l6ZTEwb2YxMiB7XG4gICAgd2lkdGg6IDgzLjMzMzMzMzMzMzMzMzM0JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbGctc2l6ZTdvZjgge1xuICAgIHdpZHRoOiA4Ny41JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbGctc2l6ZTlvZjEwIHtcbiAgICB3aWR0aDogOTAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplMTFvZjEyIHtcbiAgICB3aWR0aDogOTEuNjY2NjY2NjY2NjY2NjYlICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuXG5cbi8qIFdpZHRoICovXG5cbi51LXNpemVXaWR0aC0xLTQge1xuICB3aWR0aDogMC4zNzVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZVdpZHRoLTEtMiB7XG4gIHdpZHRoOiAwLjc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVXaWR0aC0zLTQge1xuICB3aWR0aDogMS4xMjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZVdpZHRoLTEge1xuICB3aWR0aDogMS41cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVXaWR0aC0xXzEtMiB7XG4gIHdpZHRoOiAyLjI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVXaWR0aC0yIHtcbiAgd2lkdGg6IDNyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZVdpZHRoLTYge1xuICB3aWR0aDogOXJlbSAhaW1wb3J0YW50O1xufVxuXG4vKiBIZWlnaHQgKi9cblxuLnUtc2l6ZUhlaWdodC0xLTQge1xuICBoZWlnaHQ6IDAuMzc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVIZWlnaHQtMS0yIHtcbiAgaGVpZ2h0OiAwLjc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVIZWlnaHQtMy00IHtcbiAgaGVpZ2h0OiAxLjEyNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplSGVpZ2h0LTEge1xuICBoZWlnaHQ6IDEuNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplSGVpZ2h0LTFfMS00IHtcbiAgaGVpZ2h0OiAxLjg3NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplSGVpZ2h0LTFfMS0yIHtcbiAgaGVpZ2h0OiAyLjI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVIZWlnaHQtMiB7XG4gIGhlaWdodDogM3JlbSAhaW1wb3J0YW50O1xufVxuXG4vKiBMaW5lIEhlaWdodCAqL1xuXG4udS1zaXplTGluZUhlaWdodC0xLTQge1xuICBsaW5lLWhlaWdodDogMC4zNzVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZUxpbmVIZWlnaHQtMS0yIHtcbiAgbGluZS1oZWlnaHQ6IDAuNzVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZUxpbmVIZWlnaHQtMy00IHtcbiAgbGluZS1oZWlnaHQ6IDEuMTI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVMaW5lSGVpZ2h0LTEge1xuICBsaW5lLWhlaWdodDogMS41cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVMaW5lSGVpZ2h0LTFfMS00IHtcbiAgbGluZS1oZWlnaHQ6IDEuODc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVMaW5lSGVpZ2h0LTFfMS0yIHtcbiAgbGluZS1oZWlnaHQ6IDIuMjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZUxpbmVIZWlnaHQtMiB7XG4gIGxpbmUtaGVpZ2h0OiAzcmVtICFpbXBvcnRhbnQ7XG59XG5cblxuXG4vKipcbiAqIFV0aWxzIC0gU3BhY2VcbiAqXG4gKiBNYXJnaW4gYW5kIFBhZGRpbmdcbiAqIFNpemVzOiAxLzQsIDEvMiwgMy80LCAxLCAxIDEvMiwgMlxuICogU2lkZXM6IGFsbCwgdG9wLCByaWdodCwgYm90dG9tLCBsZWZ0LCB2ZXJ0aWNhbCwgaG9yaXpvbnRhbDtcbiAqL1xuXG4vKipcbiAqIE1hcmdpblxuICpcbiAqIHUtc01cbiAqL1xuXG4vKiBBbGwgKi9cblxuLnUtc00tMS04IHtcbiAgbWFyZ2luOiAwLjE4NzVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc00tMS00IHtcbiAgbWFyZ2luOiAwLjM3NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTS0xLTIge1xuICBtYXJnaW46IDAuNzVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc00tMy00IHtcbiAgbWFyZ2luOiAxLjEyNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTS0xIHtcbiAgbWFyZ2luOiAxLjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc00tMV8xLTIge1xuICBtYXJnaW46IDIuMjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc00tMiB7XG4gIG1hcmdpbjogM3JlbSAhaW1wb3J0YW50O1xufVxuXG4vKiBUb3AgKi9cblxuLnUtc01ULTEtOCB7XG4gIG1hcmdpbi10b3A6IDAuMTg3NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTVQtMS00IHtcbiAgbWFyZ2luLXRvcDogMC4zNzVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc01ULTEtMiB7XG4gIG1hcmdpbi10b3A6IDAuNzVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc01ULTMtNCB7XG4gIG1hcmdpbi10b3A6IDEuMTI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNVC0xIHtcbiAgbWFyZ2luLXRvcDogMS41cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNVC0xXzEtMiB7XG4gIG1hcmdpbi10b3A6IDIuMjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc01ULTIge1xuICBtYXJnaW4tdG9wOiAzcmVtICFpbXBvcnRhbnQ7XG59XG5cbi8qIFJpZ2h0ICovXG5cbi51LXNNUi0xLTQge1xuICBtYXJnaW4tcmlnaHQ6IDAuMzc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNUi0xLTIge1xuICBtYXJnaW4tcmlnaHQ6IDAuNzVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc01SLTMtNCB7XG4gIG1hcmdpbi1yaWdodDogMS4xMjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc01SLTEge1xuICBtYXJnaW4tcmlnaHQ6IDEuNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTVItMV8xLTIge1xuICBtYXJnaW4tcmlnaHQ6IDIuMjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc01SLTIge1xuICBtYXJnaW4tcmlnaHQ6IDNyZW0gIWltcG9ydGFudDtcbn1cblxuLyogQm90dG9tICovXG5cbi51LXNNQi0xLTQge1xuICBtYXJnaW4tYm90dG9tOiAwLjM3NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTUItMS0yIHtcbiAgbWFyZ2luLWJvdHRvbTogMC43NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTUItMy00IHtcbiAgbWFyZ2luLWJvdHRvbTogMS4xMjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc01CLTEge1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc01CLTFfMS0yIHtcbiAgbWFyZ2luLWJvdHRvbTogMi4yNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTUItMiB7XG4gIG1hcmdpbi1ib3R0b206IDNyZW0gIWltcG9ydGFudDtcbn1cblxuLyogTGVmdCAqL1xuXG4udS1zTUwtMS04IHtcbiAgbWFyZ2luLWxlZnQ6IDAuMTg3NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTUwtMS00IHtcbiAgbWFyZ2luLWxlZnQ6IDAuMzc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNTC0xLTIge1xuICBtYXJnaW4tbGVmdDogMC43NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTUwtMy00IHtcbiAgbWFyZ2luLWxlZnQ6IDEuMTI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNTC0xIHtcbiAgbWFyZ2luLWxlZnQ6IDEuNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTUwtMV8xLTIge1xuICBtYXJnaW4tbGVmdDogMi4yNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTUwtMiB7XG4gIG1hcmdpbi1sZWZ0OiAzcmVtICFpbXBvcnRhbnQ7XG59XG5cbi8qIFZlcnRpY2FsICovXG5cbi51LXNNVi0xLTQge1xuICBtYXJnaW4tdG9wOiAwLjM3NXJlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiAwLjM3NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTVYtMS0yIHtcbiAgbWFyZ2luLXRvcDogMC43NXJlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiAwLjc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNVi0zLTQge1xuICBtYXJnaW4tdG9wOiAxLjEyNXJlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiAxLjEyNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTVYtMSB7XG4gIG1hcmdpbi10b3A6IDEuNXJlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc01WLTFfMS0yIHtcbiAgbWFyZ2luLXRvcDogMi4yNXJlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiAyLjI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNVi0yIHtcbiAgbWFyZ2luLXRvcDogM3JlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiAzcmVtICFpbXBvcnRhbnQ7XG59XG5cbi8qIEhvcml6b250YWwgKi9cblxuLnUtc01ILTEtNCB7XG4gIG1hcmdpbi1sZWZ0OiAwLjM3NXJlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IDAuMzc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNSC0xLTIge1xuICBtYXJnaW4tbGVmdDogMC43NXJlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IDAuNzVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc01ILTMtNCB7XG4gIG1hcmdpbi1sZWZ0OiAxLjEyNXJlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IDEuMTI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNSC0xIHtcbiAgbWFyZ2luLWxlZnQ6IDEuNXJlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IDEuNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zTUgtMV8xLTIge1xuICBtYXJnaW4tbGVmdDogMi4yNXJlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IDIuMjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc01ILTIge1xuICBtYXJnaW4tbGVmdDogM3JlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IDNyZW0gIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBQYWRkaW5nXG4gKlxuICogdS1zUFxuICovXG5cbi8qIEFsbCAqL1xuXG4udS1zUC0xLTQge1xuICBwYWRkaW5nOiAwLjM3NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zUC0xLTIge1xuICBwYWRkaW5nOiAwLjc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQLTMtNCB7XG4gIHBhZGRpbmc6IDEuMTI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQLTEge1xuICBwYWRkaW5nOiAxLjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc1AtMV8xLTIge1xuICBwYWRkaW5nOiAyLjI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQLTIge1xuICBwYWRkaW5nOiAzcmVtICFpbXBvcnRhbnQ7XG59XG5cbi8qIFRvcCAqL1xuXG4udS1zUFQtMS00IHtcbiAgcGFkZGluZy10b3A6IDAuMzc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQVC0xLTIge1xuICBwYWRkaW5nLXRvcDogMC43NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFQtMy00IHtcbiAgcGFkZGluZy10b3A6IDEuMTI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQVC0xIHtcbiAgcGFkZGluZy10b3A6IDEuNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFQtMV8xLTIge1xuICBwYWRkaW5nLXRvcDogMi4yNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFQtMiB7XG4gIHBhZGRpbmctdG9wOiAzcmVtICFpbXBvcnRhbnQ7XG59XG5cbi8qIFJpZ2h0ICovXG5cbi51LXNQUi0xLTQge1xuICBwYWRkaW5nLXJpZ2h0OiAwLjM3NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFItMS0yIHtcbiAgcGFkZGluZy1yaWdodDogMC43NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFItMy00IHtcbiAgcGFkZGluZy1yaWdodDogMS4xMjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc1BSLTEge1xuICBwYWRkaW5nLXJpZ2h0OiAxLjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc1BSLTFfMS0yIHtcbiAgcGFkZGluZy1yaWdodDogMi4yNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFItMiB7XG4gIHBhZGRpbmctcmlnaHQ6IDNyZW0gIWltcG9ydGFudDtcbn1cblxuLyogQm90dG9tICovXG5cbi51LXNQQi0xLTQge1xuICBwYWRkaW5nLWJvdHRvbTogMC4zNzVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc1BCLTEtMiB7XG4gIHBhZGRpbmctYm90dG9tOiAwLjc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQQi0zLTQge1xuICBwYWRkaW5nLWJvdHRvbTogMS4xMjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc1BCLTEge1xuICBwYWRkaW5nLWJvdHRvbTogMS41cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQQi0xXzEtMiB7XG4gIHBhZGRpbmctYm90dG9tOiAyLjI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQQi0yIHtcbiAgcGFkZGluZy1ib3R0b206IDNyZW0gIWltcG9ydGFudDtcbn1cblxuLyogTGVmdCAqL1xuXG4udS1zUEwtMS00IHtcbiAgcGFkZGluZy1sZWZ0OiAwLjM3NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zUEwtMS0yIHtcbiAgcGFkZGluZy1sZWZ0OiAwLjc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQTC0zLTQge1xuICBwYWRkaW5nLWxlZnQ6IDEuMTI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQTC0xIHtcbiAgcGFkZGluZy1sZWZ0OiAxLjVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc1BMLTFfMS0yIHtcbiAgcGFkZGluZy1sZWZ0OiAyLjI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQTC0yIHtcbiAgcGFkZGluZy1sZWZ0OiAzcmVtICFpbXBvcnRhbnQ7XG59XG5cbi8qIFZlcnRpY2FsICovXG5cbi51LXNQVi0xLTQge1xuICBwYWRkaW5nLXRvcDogMC4zNzVyZW0gIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDAuMzc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQVi0xLTIge1xuICBwYWRkaW5nLXRvcDogMC43NXJlbSAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogMC43NXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFYtMy00IHtcbiAgcGFkZGluZy10b3A6IDEuMTI1cmVtICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiAxLjEyNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFYtMSB7XG4gIHBhZGRpbmctdG9wOiAxLjVyZW0gIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDEuNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFYtMV8xLTIge1xuICBwYWRkaW5nLXRvcDogMi4yNXJlbSAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogMi4yNXJlbSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFYtMiB7XG4gIHBhZGRpbmctdG9wOiAzcmVtICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiAzcmVtICFpbXBvcnRhbnQ7XG59XG5cbi8qIEhvcml6b250YWwgKi9cblxuLnUtc1BILTEtNCB7XG4gIHBhZGRpbmctbGVmdDogMC4zNzVyZW0gIWltcG9ydGFudDtcbiAgcGFkZGluZy1yaWdodDogMC4zNzVyZW0gIWltcG9ydGFudDtcbn1cblxuLnUtc1BILTEtMiB7XG4gIHBhZGRpbmctbGVmdDogMC43NXJlbSAhaW1wb3J0YW50O1xuICBwYWRkaW5nLXJpZ2h0OiAwLjc1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQSC0zLTQge1xuICBwYWRkaW5nLWxlZnQ6IDEuMTI1cmVtICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDEuMTI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQSC0xIHtcbiAgcGFkZGluZy1sZWZ0OiAxLjVyZW0gIWltcG9ydGFudDtcbiAgcGFkZGluZy1yaWdodDogMS41cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQSC0xXzEtMiB7XG4gIHBhZGRpbmctbGVmdDogMi4yNXJlbSAhaW1wb3J0YW50O1xuICBwYWRkaW5nLXJpZ2h0OiAyLjI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQSC0yIHtcbiAgcGFkZGluZy1sZWZ0OiAzcmVtICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDNyZW0gIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBXb3JkIGJyZWFraW5nXG4gKlxuICogQnJlYWsgc3RyaW5ncyB3aGVuIHRoZWlyIGxlbmd0aCBleGNlZWRzIHRoZSB3aWR0aCBvZiB0aGVpciBjb250YWluZXIuXG4gKi9cblxuLnUtdGV4dEJyZWFrIHtcbiAgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogSG9yaXpvbnRhbCB0ZXh0IGFsaWdubWVudFxuICovXG5cbi51LXRleHRDZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cblxuLnUtdGV4dExlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7XG59XG5cbi51LXRleHRSaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogSW5oZXJpdCB0aGUgYW5jZXN0b3IncyB0ZXh0IGNvbG9yLlxuICovXG5cbi51LXRleHRJbmhlcml0Q29sb3Ige1xuICBjb2xvcjogaW5oZXJpdCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEVuYWJsZXMgZm9udCBrZXJuaW5nIGluIGFsbCBicm93c2Vycy5cbiAqIGh0dHA6Ly9ibG9nLnR5cGVraXQuY29tLzIwMTQvMDIvMDUva2VybmluZy1vbi10aGUtd2ViL1xuICpcbiAqIDEuIENocm9tZSAobm90IFdpbmRvd3MpLCBGaXJlZm94LCBTYWZhcmkgNissIGlPUywgQW5kcm9pZFxuICogMi4gQ2hyb21lIChub3QgV2luZG93cyksIEZpcmVmb3gsIElFIDEwK1xuICogMy4gU2FmYXJpIDcgYW5kIGZ1dHVyZSBicm93c2Vyc1xuICovXG5cbi51LXRleHRLZXJuIHtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbiAgLyogMSAqL1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwia2VyblwiIDE7XG4gIC8qIDIgKi9cbiAgZm9udC1rZXJuaW5nOiBub3JtYWw7XG4gIC8qIDMgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHdoaXRlc3BhY2Ugd3JhcHBpbmdcbiAqL1xuXG4udS10ZXh0Tm9XcmFwIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIFRleHQgdHJ1bmNhdGlvblxuICpcbiAqIFByZXZlbnQgdGV4dCBmcm9tIHdyYXBwaW5nIG9udG8gbXVsdGlwbGUgbGluZXMsIGFuZCB0cnVuY2F0ZSB3aXRoIGFuXG4gKiBlbGxpcHNpcy5cbiAqXG4gKiAxLiBFbnN1cmUgdGhhdCB0aGUgbm9kZSBoYXMgYSBtYXhpbXVtIHdpZHRoIGFmdGVyIHdoaWNoIHRydW5jYXRpb24gY2FuXG4gKiAgICBvY2N1ci5cbiAqIDIuIEZpeCBmb3IgSUUgOC85IGlmIGB3b3JkLXdyYXA6IGJyZWFrLXdvcmRgIGlzIGluIGVmZmVjdCBvbiBhbmNlc3RvclxuICogICAgbm9kZXMuXG4gKi9cblxuLnUtdGV4dFRydW5jYXRlIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXMgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50O1xuICB3b3JkLXdyYXA6IG5vcm1hbCAhaW1wb3J0YW50O1xuICAvKiAyICovXG59XG5cblxuXG4udS10ZXh0VXBwZXIge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4udS10ZXh0TG93ZXIge1xuICB0ZXh0LXRyYW5zZm9ybTogbG93ZXJjYXNlO1xufVxuXG4udS10ZXh0Q2FwaXRhbGl6ZSB7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuXG4udS10ZXh0SW52ZXJ0IHtcbiAgY29sb3I6IHJnYigyNDIsIDI0MiwgMjQyKTtcbn1cblxuLnUtdGV4dE11dGVkIHtcbiAgb3BhY2l0eTogLjY7XG59XG5cbi51LXRleHRFbXB0eSB7XG4gIGNvbG9yOiByZ2IoMTQ0LCAxODQsIDE5Nyk7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbi51LXRleHRNaWNybyB7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbn1cblxuLnUtdGV4dE1pbmkge1xuICBmb250LXNpemU6IDAuODc1cmVtO1xufVxuXG4udS10ZXh0TWV0YSB7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIGNvbG9yOiByZ2IoMTQ0LCAxODQsIDE5Nyk7XG59XG5cbi51LXRleHRMZWFkIHtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG5cbi51LXRleHRQcmltYXJ5IHtcbiAgY29sb3I6ICMwM0E2RDc7XG59XG5cbi51LXRleHRTZWNvbmRhcnkge1xuICBjb2xvcjogIzIwNzE4QTtcbn1cblxuLnUtdGV4dEhpZ2hsaWdodCB7XG4gIGNvbG9yOiAjMDNBNkQ3O1xufVxuXG4udS10ZXh0U3VjY2VzcyB7XG4gIGNvbG9yOiAjNUNDQTdCO1xufVxuXG4udS10ZXh0VW5zdXJlIHtcbiAgY29sb3I6ICNFOURGMUI7XG59XG5cbi51LXRleHROZXV0cmFsIHtcbiAgY29sb3I6IHJnYigxODgsIDIxMiwgMjIwKTtcbn1cblxuLnUtdGV4dFdhcm5pbmcge1xuICBjb2xvcjogI0ZGQTgwMDtcbn1cblxuLnUtdGV4dERhbmdlciB7XG4gIGNvbG9yOiAjRkYzQjNEO1xufVxuXG4udS10ZXh0UGlsY3JvdzpiZWZvcmUge1xuICBjb250ZW50OiAnXFwwMGI2JztcbiAgY29sb3I6IHJnYigxODgsIDIxMiwgMjIwKTtcbiAgcGFkZGluZzogMCAwLjE4NzVyZW07XG59XG5cbi51LXRleHRUYWIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDEuMmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi51LXRleHRUYWI6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcMjFFNSc7XG4gIGNvbG9yOiByZ2IoMTg4LCAyMTIsIDIyMCk7XG59XG5cbi51LXRleHRTcGFjZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnUtdGV4dFNwYWNlOmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogJy4nO1xuICBjb2xvcjogcmdiKDE4OCwgMjEyLCAyMjApO1xufVxuXG4udS10ZXh0Tm9TZWxlY3Qge1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLyoqXG4gKiBDb21wb25lbnRzXG4gKi9cblxuLyoqIEBkZWZpbmUgR3JpZDsgdXNlIHN0cmljdCAqL1xuXG5cblxuLyoqXG4gKiBDb3JlIGdyaWQgY29tcG9uZW50XG4gKlxuICogRE8gTk9UIGFwcGx5IGRpbWVuc2lvbiBvciBvZmZzZXQgdXRpbGl0aWVzIHRvIHRoZSBgR3JpZGAgZWxlbWVudC4gQWxsIGNlbGxcbiAqIHdpZHRocyBhbmQgb2Zmc2V0cyBzaG91bGQgYmUgYXBwbGllZCB0byBjaGlsZCBncmlkIGNlbGxzLlxuICovXG5cbi8qIEdyaWQgY29udGFpbmVyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFsbCBjb250ZW50IG11c3QgYmUgY29udGFpbmVkIHdpdGhpbiBjaGlsZCBgR3JpZC1jZWxsYCBlbGVtZW50cy5cbiAqXG4gKiAxLiBBY2NvdW50IGZvciBicm93c2VyIGRlZmF1bHRzIG9mIGVsZW1lbnRzIHRoYXQgbWlnaHQgYmUgdGhlIHJvb3Qgbm9kZSBvZlxuICogICAgdGhlIGNvbXBvbmVudC5cbiAqIDIuIFJlbW92ZSBpbnRlci1jZWxsIHdoaXRlc3BhY2UgdGhhdCBhcHBlYXJzIGJldHdlZW4gYGlubGluZS1ibG9ja2AgY2hpbGRcbiAqICAgIGVsZW1lbnRzLlxuICogMy4gRW5zdXJlIGNvbnNpc3RlbnQgZGVmYXVsdCBhbGlnbm1lbnQuXG4gKi9cblxuLkdyaWQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDA7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDEgKi9cbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgLyogMyAqL1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiBjZW50ZXIgYWxpZ24gYWxsIGdyaWQgY2VsbHNcbiAqL1xuXG4uR3JpZC0tYWxpZ25DZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi8qKlxuICogTW9kaWZpZXI6IHJpZ2h0IGFsaWduIGFsbCBncmlkIGNlbGxzXG4gKi9cblxuLkdyaWQtLWFsaWduUmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogbWlkZGxlLWFsaWduIGdyaWQgY2VsbHNcbiAqL1xuXG4uR3JpZC0tYWxpZ25NaWRkbGUgPiAuR3JpZC1jZWxsIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogYm90dG9tLWFsaWduIGdyaWQgY2VsbHNcbiAqL1xuXG4uR3JpZC0tYWxpZ25Cb3R0b20gPiAuR3JpZC1jZWxsIHtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogZ3V0dGVyc1xuICpcbiAqIE5PVEU6IHRoaXMgY2FuIHRyaWdnZXIgYSBob3Jpem9udGFsIHNjcm9sbGJhciBpZiB0aGUgY29tcG9uZW50IGlzIGFzIHdpZGUgYXNcbiAqIHRoZSB2aWV3cG9ydC4gVXNlIHBhZGRpbmcgb24gYSBjb250YWluZXIsIG9yIGBvdmVyZmxvdy14OmhpZGRlbmAgdG8gcHJvdGVjdFxuICogYWdhaW5zdCBpdC5cbiAqL1xuXG4uR3JpZC0td2l0aEd1dHRlciB7XG4gIG1hcmdpbjogMCAtMTBweDtcbn1cblxuLkdyaWQtLXdpdGhHdXR0ZXIgPiAuR3JpZC1jZWxsIHtcbiAgcGFkZGluZzogMCAxMHB4O1xufVxuXG4vKiBHcmlkIGNlbGxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogTm8gZXhwbGljaXQgd2lkdGggYnkgZGVmYXVsdC4gUmVseSBvbiBjb21iaW5pbmcgYEdyaWQtY2VsbGAgd2l0aCBhIGRpbWVuc2lvblxuICogdXRpbGl0eSBvciBhIGNvbXBvbmVudCBjbGFzcyB0aGF0IGV4dGVuZHMgJ2dyaWQnLlxuICpcbiAqIDEuIEZ1bmRhbWVudGFscyBvZiB0aGUgbm9uLWZsb2F0IGdyaWQgbGF5b3V0LlxuICogMi4gUmVzZXQgZm9udCBzaXplIGNoYW5nZSBtYWRlIGluIGBHcmlkYC5cbiAqIDMuIEtlZXBzIGNvbnRlbnQgY29ycmVjdGx5IGFsaWduZWQgd2l0aCB0aGUgZ3JpZCBkaXJlY3Rpb24uXG4gKiA0LiBDb250cm9scyB2ZXJ0aWNhbCBwb3NpdGlvbmluZyBvZiB1bml0cy5cbiAqIDUuIE1ha2UgY2VsbHMgZnVsbC13aWR0aCBieSBkZWZhdWx0LlxuICovXG5cbi5HcmlkLWNlbGwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxcmVtO1xuICAvKiAyICovXG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgLyogMyAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAvKiA0ICovXG4gIHdpZHRoOiAxMDAlO1xuICAvKiA1ICovXG59XG5cbi8qKlxuICogTW9kaWZpZXI6IGhvcml6b250YWxseSBjZW50ZXIgb25lIHVuaXRcbiAqIFNldCBhIHNwZWNpZmljIHVuaXQgdG8gYmUgaG9yaXpvbnRhbGx5IGNlbnRlcmVkLiBEb2Vzbid0IGFmZmVjdFxuICogYW55IG90aGVyIHVuaXRzLiBDYW4gc3RpbGwgY29udGFpbiBhIGNoaWxkIGBHcmlkYCBvYmplY3QuXG4gKi9cblxuLkdyaWQtY2VsbC0tY2VudGVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4vKiEgbm9ybWFsaXplLmNzcyB2My4wLjMgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIGFuZCBJRSB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIGRldmljZSBvcmllbnRhdGlvbiBjaGFuZ2UsXG4gKiAgICB3aXRob3V0IGRpc2FibGluZyB1c2VyIHpvb20uXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cblxuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IG9mIGZvY3VzZWQgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBhbHNvIGluIGFuXG4gKiBhY3RpdmUvaG92ZXIgc3RhdGUuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXI6IDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDMgKi9cbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC8qIDMgKi9cbn1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cblxuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xufVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cblxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm9yZGVyOiAwO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn1cblxuXG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIC8qIFdlYktpdCBicm93c2VycyAqL1xuICBjb2xvcjogcmdiKDE2OSwgMTkxLCAxOTgpO1xufVxuXG46LW1vei1wbGFjZWhvbGRlciB7XG4gIC8qIE1vemlsbGEgRmlyZWZveCA0IHRvIDE4ICovXG4gIGNvbG9yOiByZ2IoMTY5LCAxOTEsIDE5OCk7XG59XG5cbjo6LW1vei1wbGFjZWhvbGRlciB7XG4gIC8qIE1vemlsbGEgRmlyZWZveCAxOSsgKi9cbiAgY29sb3I6IHJnYigxNjksIDE5MSwgMTk4KTtcbn1cblxuOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIC8qIEludGVybmV0IEV4cGxvcmVyIDEwKyAqL1xuICBjb2xvcjogcmdiKDE2OSwgMTkxLCAxOTgpO1xufVxuXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKiBSZXNldCBidXR0b25zIHNvIHRoZXkgY2FuIGJlIHVzZWQgbGlrZSBsaW5rcyAqL1xuXG5idXR0b24ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xuICB0ZXh0LWFsaWduOiBpbmhlcml0O1xufVxuXG4vKipcbiAqIFdvcmsgYXJvdW5kIGEgRmlyZWZveC9JRSBidWcgd2hlcmUgdGhlIHRyYW5zcGFyZW50IGBidXR0b25gIGJhY2tncm91bmRcbiAqIHJlc3VsdHMgaW4gYSBsb3NzIG9mIHRoZSBkZWZhdWx0IGBidXR0b25gIGZvY3VzIHN0eWxlcy5cbiAqL1xuXG5idXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkO1xuICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7XG59XG5cbmJ1dHRvbjpob3ZlcixcbmJ1dHRvbjphY3RpdmUge1xuICBvdXRsaW5lOiBub25lO1xufVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5pbnB1dFt0eXBlPVwidGV4dFwiXSxcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcbmlucHV0W3R5cGU9XCJkYXRlXCJdLFxuaW5wdXRbdHlwZT1cImRhdGV0aW1lXCJdLFxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXSxcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0sXG5pbnB1dFt0eXBlPVwidGVsXCJdLFxuaW5wdXRbdHlwZT1cInRpbWVcIl0sXG5pbnB1dFt0eXBlPVwidXJsXCJdLFxudGV4dGFyZWEge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cblxuXG5AY2hhcnNldCAnVVRGLTgnO1xuXG5ALW1zLXZpZXdwb3J0IHtcbiAgd2lkdGg6IGRldmljZS13aWR0aDtcbn1cblxuQHZpZXdwb3J0IHtcbiAgd2lkdGg6IGRldmljZS13aWR0aDtcbn1cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiAnU291cmNlIFNhbnMgUHJvJywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2FOZXVlLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGNvbG9yOiAjNDQ0YzU0O1xufVxuXG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuYm9keSB7XG4gIG1pbi13aWR0aDogMzIwcHg7XG4gIGJhY2tncm91bmQ6ICNFQ0VGRjA7XG59XG5cbjphY3RpdmUsXG46aG92ZXIge1xuICBvdXRsaW5lOiBub25lO1xufVxuXG5cblxuLyoqXG4gKiBIZWFkaW5nc1xuICpcbiAqIFJlc2V0IHRvIGRlZmF1bHQgZm9udCBzaXplIHRvIGFsbG93IGVhc3kgcmV1c2VcbiAqIFVzZSBleHRyYSBjbGFzc2VzIGZvciBzdHlsaW5nXG4gKi9cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBtYXJnaW46IDA7XG4gIGNvbG9yOiAjMjA3MThBO1xufVxuXG5cblxuYSB7XG4gIGNvbG9yOiAjMDNBNkQ3O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuYTpob3ZlciB7XG4gIGNvbG9yOiByZ2IoMywgMTQ5LCAxOTQpO1xufVxuXG5hOmFjdGl2ZSB7XG4gIGNvbG9yOiByZ2IoMiwgMTMzLCAxNzIpO1xufVxuXG5cblxub2wsXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxudWw6ZW1wdHksXG5vbDplbXB0eSB7XG4gIC8qIEhpZGUgZW1wdHkgbGlzdHMgKi9cbiAgZGlzcGxheTogbm9uZTtcbn1cblxuZGQge1xuICBtYXJnaW46IDA7XG59XG5cblxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5maWdjYXB0aW9uIHtcbiAgY29sb3I6IHJnYigxMjgsIDEyOCwgMTI4KTtcbn1cblxuXG5cbmhyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkO1xuICBib3JkZXItY29sb3I6IHJnYmEoMzIsIDExMywgMTM4LCAwLjEyKTtcbiAgbWFyZ2luOiByaHl0aG0oMSkgMDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbmlmcmFtZSB7XG4gIGJvcmRlcjogMDtcbn1cblxuLyoqXG4gKiBTdXBwcmVzcyB0aGUgZm9jdXMgb3V0bGluZSBvbiBsaW5rcyB0aGF0IGNhbm5vdCBiZSBhY2Nlc3NlZCB2aWEga2V5Ym9hcmQuXG4gKiBUaGlzIHByZXZlbnRzIGFuIHVud2FudGVkIGZvY3VzIG91dGxpbmUgZnJvbSBhcHBlYXJpbmcgYXJvdW5kIGVsZW1lbnRzIHRoYXRcbiAqIG1pZ2h0IHN0aWxsIHJlc3BvbmQgdG8gcG9pbnRlciBldmVudHMuXG4gKi9cblxuW3RhYmluZGV4PVwiLTFcIl06Zm9jdXMge1xuICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7XG59XG5cblxuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBNb25hY28sIENvdXJpZXIsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMCAwLjE4NzVyZW07XG4gIGNvbG9yOiByZ2IoNzcsIDc3LCA3Nyk7XG59XG5cbmJsb2NrcXVvdGUsXG5kbCxcbmRkLFxucCxcbnByZSB7XG4gIG1hcmdpbjogMDtcbn1cblxua2JkIHtcbiAgbWFyZ2luOiAwIDAuMTg3NXJlbTtcbiAgcGFkZGluZzogMC4xODc1cmVtIDAuNTYyNXJlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSg2NSwgMTA1LCAxMzYsIDAuMDcpO1xuICBib3JkZXItYm90dG9tOiAzcHggc29saWQgcmdiYSg2NSwgMTA1LCAxMzYsIDAuMik7XG4gIGJvcmRlci1yYWRpdXM6IDAuMzc1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmc7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6ICdTb3VyY2UgU2FucyBQcm8nLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYU5ldWUsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG59XG5cbi8qKiBAZGVmaW5lIEJ1dHRvbkdyb3VwOyB1c2Ugc3RyaWN0ICovXG5cbi8qKiBAZGVmaW5lIEJ1dHRvbkdyb3VwICovXG5cbi8qISBzdWl0LWJ1dHRvbi1ncm91cCB2Mi4yLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vc3VpdGNzcyAqL1xuXG5cblxuLyoqXG4gKiBDcmVhdGUgYSB2aXN1YWwgY29ubmVjdGlvbiBiZXR3ZWVuIFVJIGFjdGlvbnMgdGhhdCBiZWxvbmcgdG9nZXRoZXIuXG4gKiBNdXN0IG9ubHkgY29udGFpbiBgQnV0dG9uR3JvdXAtaXRlbWAgb2JqZWN0cyBhcyBjaGlsZHJlbi5cbiAqXG4gKiBFeGFtcGxlIEhUTUw6XG4gKlxuICogPGRpdiBjbGFzcz1cIkJ1dHRvbkdyb3VwIFtCdXR0b25Hcm91cC0taHpdXCI+XG4gKiAgIDxkaXYgY2xhc3M9XCJCdXR0b25Hcm91cC1pdGVtXCI+XG4gKiAgICAgPGEgY2xhc3M9XCJCdXR0b25cIiBocmVmPVwiI1wiPkRhc2hib2FyZDwvYT5cbiAqICAgPC9kaXY+XG4gKiAgIDxkaXYgY2xhc3M9XCJCdXR0b25Hcm91cC1pdGVtXCI+XG4gKiAgICAgPGEgY2xhc3M9XCJCdXR0b25cIiBocmVmPVwiI1wiPkFjY291bnQ8L2E+XG4gKiAgIDwvZGl2PlxuICogICA8ZGl2IGNsYXNzPVwiQnV0dG9uR3JvdXAtaXRlbVwiPlxuICogICAgIDxhIGNsYXNzPVwiQnV0dG9uXCIgaHJlZj1cIiNcIj5Mb2dvdXQ8L2E+XG4gKiAgIDwvZGl2PlxuICogPC9kaXY+XG4gKi9cblxuLyoqXG4gKiBCdXR0b24gZ3JvdXBcbiAqXG4gKiAxLiBFbnN1cmUgY29tcG9uZW50IGlzIGZ1bGwtd2lkdGggaWYgYXBwbGllZCB0byBlbGVtZW50cyB0aGF0IGFyZVxuICogICAgYGlubGluZS1ibG9ja2AgYnkgZGVmYXVsdC5cbiAqIDIuIENvbGxhcHNlIHdoaXRlc3BhY2UgYmV0d2VlbiBjaGlsZCBlbGVtZW50cy4gT25seSBuZWNlc3NhcnkgZm9yIHRoZVxuICogICAgYEJ1dHRvbkdyb3VwLS1oemAgbW9kaWZpZXIgd2hpY2ggbGF5cyBpdGVtcyBvdXQgYXMgYGlubGluZS1ibG9ja2AsIGJ1dFxuICogICAgaW5jbHVkZWQgaW4gdGhlIGJhc2UgY29tcG9uZW50IHNvIHRoYXQgYWZmZWN0cyBvbiBgZm9udC1zaXplYCBhcmVcbiAqICAgIGNvbnNpc3RlbnQuXG4gKiAzLiBSZW1vdmUgYW55IGRlZmF1bHQgc3R5bGVzIHRoYXQgbWlnaHQgYmUgcHJlc2VudCB3aGVuIGBvbGAgb3IgYHVsYCBhcmUgdGhlXG4gKiAgICByb290IGVsZW1lbnQuXG4gKi9cblxuLkJ1dHRvbkdyb3VwIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAwO1xuICAvKiAyICovXG4gIG1hcmdpbjogMDtcbiAgLyogMyAqL1xuICBsaXN0LXN0eWxlOiBub25lO1xuICAvKiAzICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbn1cblxuLyoqXG4gKiBCdXR0b24gZ3JvdXAgaXRlbVxuICpcbiAqIDEuIE1ha2UgaXQgZnVsbC13aWR0aCBpZiBhcHBsaWVkIHRvIGVsZW1lbnRzIHRoYXQgYXJlIGBpbmxpbmUtYmxvY2tgIGJ5XG4gKiAgICBkZWZhdWx0LlxuICogMi4gUmVzZXQgdGhlIGZvbnQgc2l6ZSBvZiB0aGUgYnV0dG9ucyB0byB0aGUgcm9vdCBmb250IHNpemUuXG4gKi9cblxuLkJ1dHRvbkdyb3VwLWl0ZW0ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFyZW07XG4gIC8qIDIgKi9cbn1cblxuLkJ1dHRvbkdyb3VwLWl0ZW0gPiAuQnV0dG9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKipcbiAqIEVuc3VyZSB0aGF0IGludGVyYWN0aW9ucyB3aXRoIGEgYnV0dG9uIG1ha2UgaXQgc2l0IG9uIHRvcCBvZiBvdGhlciBidXR0b25zXG4gKiBpbiB0aGUgZ3JvdXAuXG4gKi9cblxuLkJ1dHRvbkdyb3VwLWl0ZW0gPiAuQnV0dG9uOmhvdmVyLFxuLkJ1dHRvbkdyb3VwLWl0ZW0gPiAuQnV0dG9uOmZvY3VzLFxuLkJ1dHRvbkdyb3VwLWl0ZW0gPiAuQnV0dG9uOmFjdGl2ZSxcbi5CdXR0b25Hcm91cC1pdGVtID4gLkJ1dHRvbi5pcy1wcmVzc2VkIHtcbiAgei1pbmRleDogMTtcbn1cblxuLyogTW9kaWZpZXI6IGhvcml6b250YWwgYnV0dG9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLkJ1dHRvbkdyb3VwLS1oeiA+IC5CdXR0b25Hcm91cC1pdGVtIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKiogQGRlZmluZSBCdXR0b25Hcm91cCAqL1xuXG4vKiEgc3VpdC1idXR0b24tZ3JvdXAgdjIuMi4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL3N1aXRjc3MgKi9cblxuLyogTW9kaWZpZXI6IGNvbGxhcHNlIGJ1dHRvbiBib3JkZXJzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEluY2x1ZGVzIGFwcHJvcHJpYXRlIHJlbW92YWwgb2YgYGJvcmRlci1yYWRpdXNgLlxuICogQWxsIGJyb3dzZXJzIHRoYXQgc3VwcG9ydCBgYm9yZGVyLXJhZGl1c2AgYWxzbyBzdXBwb3J0IENTUyAzIHBzZXVkby1jbGFzc2VzLlxuICovXG5cbi8qKlxuICogVmVydGljYWwgY29sbGFwc2VcbiAqL1xuXG4uQnV0dG9uR3JvdXAtLWJvcmRlckNvbGxhcHNlOm5vdCguQnV0dG9uR3JvdXAtLWh6KSA+IC5CdXR0b25Hcm91cC1pdGVtIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLkJ1dHRvbkdyb3VwLS1ib3JkZXJDb2xsYXBzZTpub3QoLkJ1dHRvbkdyb3VwLS1oeikgPiAuQnV0dG9uR3JvdXAtaXRlbTpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbi5CdXR0b25Hcm91cC0tYm9yZGVyQ29sbGFwc2U6bm90KC5CdXR0b25Hcm91cC0taHopID4gLkJ1dHRvbkdyb3VwLWl0ZW06bm90KDpmaXJzdC1jaGlsZCk6bm90KDpsYXN0LWNoaWxkKSA+IC5CdXR0b24ge1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuXG4uQnV0dG9uR3JvdXAtLWJvcmRlckNvbGxhcHNlOm5vdCguQnV0dG9uR3JvdXAtLWh6KSA+IC5CdXR0b25Hcm91cC1pdGVtOmZpcnN0LWNoaWxkOm5vdCg6b25seS1jaGlsZCkgPiAuQnV0dG9uIHtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG59XG5cbi5CdXR0b25Hcm91cC0tYm9yZGVyQ29sbGFwc2U6bm90KC5CdXR0b25Hcm91cC0taHopID4gLkJ1dHRvbkdyb3VwLWl0ZW06bGFzdC1jaGlsZDpub3QoOm9ubHktY2hpbGQpID4gLkJ1dHRvbiB7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xufVxuXG4vKipcbiAqIEhvcml6b250YWwgY29sbGFwc2VcbiAqL1xuXG4uQnV0dG9uR3JvdXAtLWJvcmRlckNvbGxhcHNlLkJ1dHRvbkdyb3VwLS1oeiA+IC5CdXR0b25Hcm91cC1pdGVtIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi5CdXR0b25Hcm91cC0tYm9yZGVyQ29sbGFwc2UuQnV0dG9uR3JvdXAtLWh6ID4gLkJ1dHRvbkdyb3VwLWl0ZW06Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLkJ1dHRvbkdyb3VwLS1ib3JkZXJDb2xsYXBzZS5CdXR0b25Hcm91cC0taHogPiAuQnV0dG9uR3JvdXAtaXRlbTpub3QoOmZpcnN0LWNoaWxkKTpub3QoOmxhc3QtY2hpbGQpID4gLkJ1dHRvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG59XG5cbi5CdXR0b25Hcm91cC0tYm9yZGVyQ29sbGFwc2UuQnV0dG9uR3JvdXAtLWh6ID4gLkJ1dHRvbkdyb3VwLWl0ZW06Zmlyc3QtY2hpbGQ6bm90KDpvbmx5LWNoaWxkKSA+IC5CdXR0b24ge1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XG59XG5cbi5CdXR0b25Hcm91cC0tYm9yZGVyQ29sbGFwc2UuQnV0dG9uR3JvdXAtLWh6ID4gLkJ1dHRvbkdyb3VwLWl0ZW06bGFzdC1jaGlsZDpub3QoOm9ubHktY2hpbGQpID4gLkJ1dHRvbiB7XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XG59XG5cbjpyb290IHtcbiAgLyogU2V0IG91ciB2YXJzIGluIGNvcnJlY3QgZm9ybWF0ICovXG4gIC8qIEZyb20gc3VpdGNzcy1jb21wb25lbnRzLWJ1dHRvbi1ncm91cCAqL1xufVxuXG4uQnV0dG9uR3JvdXAtLWh6ID4gLkJ1dHRvbkdyb3VwLWl0ZW0ge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uQnV0dG9uR3JvdXAtLXJvdW5kIC5CdXR0b25Hcm91cC1pdGVtOmZpcnN0LWNoaWxkIC5CdXR0b24ge1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxMDBweDtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMTAwcHg7XG59XG5cbi5CdXR0b25Hcm91cC0tcm91bmQgLkJ1dHRvbkdyb3VwLWl0ZW06bGFzdC1jaGlsZCAuQnV0dG9uIHtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwMHB4O1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTAwcHg7XG59XG5cbi8qKiBAZGVmaW5lIEJ1dHRvbjsgdXNlIHN0cmljdCAqL1xuXG4vKiogQGRlZmluZSBCdXR0b247IHVzZSBzdHJpY3QgKi9cblxuXG5cbi8qKlxuICogVGhlIGJ1dHRvbiBjbGFzc2VzIGFyZSBiZXN0IGFwcGxpZWQgdG8gbGlua3MsIGJ1dHRvbnMsIGFuZCBzdWJtaXQgaW5wdXRzLlxuICogVGhlc2UgY29tcG9uZW50cyBjYW4gYmUgdXNlZCBpbiBmb3JtcywgYXMgY2FsbHMgdG8gYWN0aW9uLCBvciBhcyBwYXJ0IG9mIHRoZVxuICogZ2VuZXJhbCBVSSBvZiB0aGUgc2l0ZS9hcHAuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0cyBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMi4gTm9ybWFsaXplIGBib3gtc2l6aW5nYCBhY3Jvc3MgYWxsIGVsZW1lbnRzIHRoYXQgdGhpcyBjb21wb25lbnQgY291bGQgYmVcbiAqICAgIGFwcGxpZWQgdG8uXG4gKiAzLiBJbmhlcml0IHRleHQgY29sb3IgZnJvbSBhbmNlc3Rvci5cbiAqIDQuIEluaGVyaXQgZm9udCBzdHlsZXMgZnJvbSBhbmNlc3Rvci5cbiAqIDUuIE5vcm1hbGl6ZSBgbGluZS1oZWlnaHRgLiBGb3IgYGlucHV0YCwgaXQgY2FuJ3QgYmUgY2hhbmdlZCBmcm9tIGBub3JtYWxgIGluIEZpcmVmb3ggNCsuXG4gKiA2LiBQcmV2ZW50IGJ1dHRvbiB0ZXh0IGZyb20gYmVpbmcgc2VsZWN0YWJsZS5cbiAqIDcuIE1ha2Ugc3VyZSBgaW5wdXRgIHdpbGwgd3JhcCB0ZXh0IGFjcm9zcyBtdWx0aXBsZSBsaW5lcy5cbiAqL1xuXG4uQnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAvKiAxICovXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXItY29sb3I6IGN1cnJlbnRjb2xvcjtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAyICovXG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogMyAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udDogaW5oZXJpdDtcbiAgLyogNCAqL1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICAvKiA1ICovXG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMC4xODc1cmVtIDAuNzVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICAvKiA2ICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDcgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrXG4gKi9cblxuLkJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBXb3JrIGFyb3VuZCBhIEZpcmVmb3gvSUUgYnVnIHdoZXJlIHRoZSB0cmFuc3BhcmVudCBgYnV0dG9uYCBiYWNrZ3JvdW5kXG4gKiByZXN1bHRzIGluIGEgbG9zcyBvZiB0aGUgZGVmYXVsdCBgYnV0dG9uYCBmb2N1cyBzdHlsZXMuXG4gKi9cblxuLkJ1dHRvbjpmb2N1cyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQ7XG4gIG91dGxpbmU6IDVweCBhdXRvIC13ZWJraXQtZm9jdXMtcmluZy1jb2xvcjtcbn1cblxuLyoqXG4gKiBVSSBzdGF0ZXNcbiAqL1xuXG4uQnV0dG9uOmhvdmVyLFxuLkJ1dHRvbjpmb2N1cyxcbi5CdXR0b246YWN0aXZlIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uQnV0dG9uOmRpc2FibGVkLFxuLkJ1dHRvbi5pcy1kaXNhYmxlZCB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgb3BhY2l0eTogMC42O1xufVxuXG5cblxuLkJ1dHRvbiB7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzIGN1YmljLWJlemllciguMDc1LCAuODIwLCAuMTY1LCAxLjAwMCk7XG4gIG1pbi1oZWlnaHQ6IDEuODc1cmVtO1xuICB0ZXh0LXNoYWRvdzogMXB4IDFweCAwIHJnYmEoMCwwLDAsMC4xNSk7XG59XG5cbi5CdXR0b246ZGlzYWJsZWQsXG4uQnV0dG9uLmlzLWRpc2FibGVkIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi5CdXR0b246aG92ZXIsXG4uQnV0dG9uOmFjdGl2ZSxcbi5CdXR0b24uaXMtYWN0aXZlIHtcbiAgb3V0bGluZTogaW5oZXJpdDtcbn1cblxuLyogRGVmYXVsdCAqL1xuXG4uQnV0dG9uLS1kZWZhdWx0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMiwgMjM0LCAyMzcpO1xufVxuXG4uQnV0dG9uLS1kZWZhdWx0OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIwMCwgMjExLCAyMTMpO1xufVxuXG4uQnV0dG9uLS1kZWZhdWx0OmFjdGl2ZSxcbi5CdXR0b24tLWRlZmF1bHQuaXMtYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE4OSwgMTk5LCAyMDEpO1xufVxuXG4vKipcbiAqIENvbG9yIE1vZGlmaWVyc1xuICovXG5cbi8qIFByaW1hcnkgKi9cblxuLkJ1dHRvbi0tcHJpbWFyeSB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDNBNkQ3O1xufVxuXG4uQnV0dG9uLS1wcmltYXJ5OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDMsIDE0OSwgMTk0KTtcbn1cblxuLkJ1dHRvbi0tcHJpbWFyeTphY3RpdmUsXG4uQnV0dG9uLS1wcmltYXJ5LmlzLWFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigzLCAxNDEsIDE4Myk7XG59XG5cbi8qIFNlY29uZGFyeSAqL1xuXG4uQnV0dG9uLS1zZWNvbmRhcnkge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwNzE4QTtcbn1cblxuLkJ1dHRvbi0tc2Vjb25kYXJ5OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI5LCAxMDIsIDEyNCk7XG59XG5cbi5CdXR0b24tLXNlY29uZGFyeTphY3RpdmUsXG4uQnV0dG9uLS1zZWNvbmRhcnkuaXMtYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI3LCA5NiwgMTE3KTtcbn1cblxuLyogSGlnaHRsaWdodCAqL1xuXG4uQnV0dG9uLS1oaWdobGlnaHQge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAzQTZENztcbn1cblxuLkJ1dHRvbi0taGlnaGxpZ2h0OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDMsIDE0OSwgMTk0KTtcbn1cblxuLkJ1dHRvbi0taGlnaGxpZ2h0OmFjdGl2ZSxcbi5CdXR0b24tLWhpZ2hsaWdodC5pcy1hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMywgMTQxLCAxODMpO1xufVxuXG4vKiBTdWNjZXNzICovXG5cbi5CdXR0b24tLXN1Y2Nlc3Mge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVDQ0E3Qjtcbn1cblxuLkJ1dHRvbi0tc3VjY2Vzczpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig4MywgMTgyLCAxMTEpO1xufVxuXG4uQnV0dG9uLS1zdWNjZXNzOmFjdGl2ZSxcbi5CdXR0b24tLXN1Y2Nlc3MuaXMtYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDc4LCAxNzIsIDEwNSk7XG59XG5cbi8qIFVuc3VyZSAqL1xuXG4uQnV0dG9uLS11bnN1cmUge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0U5REYxQjtcbn1cblxuLkJ1dHRvbi0tdW5zdXJlOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxMCwgMjAxLCAyNCk7XG59XG5cbi5CdXR0b24tLXVuc3VyZTphY3RpdmUsXG4uQnV0dG9uLS11bnN1cmUuaXMtYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE5OCwgMTkwLCAyMyk7XG59XG5cbi8qIE5ldXRyYWwgKi9cblxuLkJ1dHRvbi0tbmV1dHJhbCB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTQ0LCAxODQsIDE5Nyk7XG59XG5cbi5CdXR0b24tLW5ldXRyYWw6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTMwLCAxNjYsIDE3Nyk7XG59XG5cbi5CdXR0b24tLW5ldXRyYWw6YWN0aXZlLFxuLkJ1dHRvbi0tbmV1dHJhbC5pcy1hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTIyLCAxNTYsIDE2Nyk7XG59XG5cbi8qIFdhcm5pbmcgKi9cblxuLkJ1dHRvbi0td2FybmluZyB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZBODAwO1xufVxuXG4uQnV0dG9uLS13YXJuaW5nOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzMCwgMTUxLCAwKTtcbn1cblxuLkJ1dHRvbi0td2FybmluZzphY3RpdmUsXG4uQnV0dG9uLS13YXJuaW5nLmlzLWFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTcsIDE0MywgMCk7XG59XG5cbi8qIERhbmdlciAqL1xuXG4uQnV0dG9uLS1kYW5nZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGM0IzRDtcbn1cblxuLkJ1dHRvbi0tZGFuZ2VyOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzMCwgNTMsIDU1KTtcbn1cblxuLkJ1dHRvbi0tZGFuZ2VyOmFjdGl2ZSxcbi5CdXR0b24tLWRhbmdlci5pcy1hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjE3LCA1MCwgNTIpO1xufVxuXG4vKiBJbnZpc2libGUgKi9cblxuLkJ1dHRvbi0taW52aXNpYmxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiByZ2IoMTQ0LCAxODQsIDE5Nyk7XG59XG5cbi5CdXR0b24tLWludmlzaWJsZTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzcsIDI0NCwgMjQ2KTtcbiAgY29sb3I6IHJnYig5OSwgMTU2LCAxNzMpO1xufVxuXG4uQnV0dG9uLS1pbnZpc2libGU6YWN0aXZlLFxuLkJ1dHRvbi0taW52aXNpYmxlLmlzLWFjdGl2ZSB7XG4gIGNvbG9yOiAjMjA3MThBO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI4LCAyMzgsIDI0MSk7XG59XG5cbi8qKlxuICogQnV0dG9uIFR5cGUgTW9kaWZpZXJzXG4gKi9cblxuLyogU251ZyAqL1xuXG4uQnV0dG9uLS1zbnVnIHtcbiAgcGFkZGluZy1sZWZ0OiAwLjM3NXJlbTtcbiAgcGFkZGluZy1yaWdodDogMC4zNzVyZW07XG59XG5cbi5CdXR0b24tLXNtYWxsIHtcbiAgbWluLWhlaWdodDogMS41cmVtO1xuICBwYWRkaW5nOiAwLjE4NzVyZW0gMC43NXJlbTtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbn1cblxuLyoqIEBkZWZpbmUgSW5wdXRHcm91cDsgdXNlIHN0cmljdCAqL1xuXG5cblxuLklucHV0R3JvdXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlO1xufVxuXG4uSW5wdXRHcm91cC1pbnB1dCxcbi5JbnB1dEdyb3VwLWFkZG9uLFxuLklucHV0R3JvdXAtYnV0dG9uIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdHJhbnNpdGlvbjogMC4ycyBjdWJpYy1iZXppZXIoLjI2LCAuNDcsIC4zNiwgLjk0KTtcbn1cblxuLklucHV0R3JvdXAtaW5wdXQsXG4uSW5wdXRHcm91cC1hZGRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBwYWRkaW5nOiAwIDAuMzc1cmVtO1xufVxuXG4uSW5wdXRHcm91cC1pbnB1dCB7XG4gIGJvcmRlcjogbm9uZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGNvbG9yOiAjMjA3MThBO1xufVxuXG4uSW5wdXRHcm91cC1hZGRvbiB7XG4gIGNvbG9yOiByZ2IoOTksIDE1NiwgMTczKTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMSU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5JbnB1dEdyb3VwLWFkZG9uOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICcgJztcbn1cblxuLklucHV0R3JvdXAuaXMtZm9jdXNlZCAuSW5wdXRHcm91cC1pbnB1dCxcbi5JbnB1dEdyb3VwLmlzLWZvY3VzZWQgLklucHV0R3JvdXAtYWRkb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuXG4uSW5wdXRHcm91cC0tYm9yZGVyZWQgLklucHV0R3JvdXAtaW5wdXQsXG4uSW5wdXRHcm91cC0tYm9yZGVyZWQgLklucHV0R3JvdXAtYWRkb24sXG4uSW5wdXRHcm91cC0tb3V0bGluZWQgLklucHV0R3JvdXAtaW5wdXQsXG4uSW5wdXRHcm91cC0tb3V0bGluZWQgLklucHV0R3JvdXAtYWRkb24ge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiKDE2NiwgMTk4LCAyMDgpO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiKDE2NiwgMTk4LCAyMDgpO1xufVxuXG4uSW5wdXRHcm91cC0tYm9yZGVyZWQgLklucHV0R3JvdXAtaW5wdXQge1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHJnYigxNjYsIDE5OCwgMjA4KTtcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgcmdiKDE2NiwgMTk4LCAyMDgpO1xufVxuXG4uSW5wdXRHcm91cC0tb3V0bGluZWQgLklucHV0R3JvdXAtaW5wdXQ6Zmlyc3QtY2hpbGQsXG4uSW5wdXRHcm91cC0tb3V0bGluZWQgLklucHV0R3JvdXAtYWRkb246Zmlyc3QtY2hpbGQge1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHJnYigxNjYsIDE5OCwgMjA4KTtcbn1cblxuLklucHV0R3JvdXAtLW91dGxpbmVkIC5JbnB1dEdyb3VwLWlucHV0Omxhc3QtY2hpbGQsXG4uSW5wdXRHcm91cC0tb3V0bGluZWQgLklucHV0R3JvdXAtYWRkb246bGFzdC1jaGlsZCB7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYigxNjYsIDE5OCwgMjA4KTtcbn1cblxuLklucHV0R3JvdXAtLWJvcmRlcmVkLmlzLWZvY3VzZWQgLklucHV0R3JvdXAtaW5wdXQsXG4uSW5wdXRHcm91cC0tYm9yZGVyZWQuaXMtZm9jdXNlZCAuSW5wdXRHcm91cC1hZGRvbixcbi5JbnB1dEdyb3VwLS1vdXRsaW5lZC5pcy1mb2N1c2VkIC5JbnB1dEdyb3VwLWlucHV0LFxuLklucHV0R3JvdXAtLW91dGxpbmVkLmlzLWZvY3VzZWQgLklucHV0R3JvdXAtYWRkb24ge1xuICBib3JkZXItY29sb3I6IHJnYig5OSwgMTU2LCAxNzMpO1xufVxuXG4uSW5wdXRHcm91cC0tcm91bmRlZCAuSW5wdXRHcm91cC1pbnB1dDpmaXJzdC1jaGlsZCxcbi5JbnB1dEdyb3VwLS1yb3VuZGVkIC5JbnB1dEdyb3VwLWFkZG9uOmZpcnN0LWNoaWxkIHtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMS41cmVtO1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxLjVyZW07XG4gIHBhZGRpbmctbGVmdDogMC41NjI1cmVtO1xufVxuXG4uSW5wdXRHcm91cC0tcm91bmRlZCAuSW5wdXRHcm91cC1pbnB1dDpsYXN0LWNoaWxkLFxuLklucHV0R3JvdXAtLXJvdW5kZWQgLklucHV0R3JvdXAtYWRkb246bGFzdC1jaGlsZCB7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxLjVyZW07XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxLjVyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDAuNTYyNXJlbTtcbn1cblxuLyoqIEBkZWZpbmUgRHJvcGRvd247IHVzZSBzdHJpY3QgKi9cblxuXG5cbi5Ecm9wZG93biB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTAwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG4uRHJvcGRvd24uaXMtYWN0aXZlIHtcbiAgei1pbmRleDogOTAwO1xufVxuXG4uRHJvcGRvd24tdG9nZ2xlSWNvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdHJhbnNpdGlvbjogYWxsIC4ycyBjdWJpYy1iZXppZXIoLjE3NSwgLjg4NSwgLjMyMCwgMS4yNzUpO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5Ecm9wZG93bi5pcy1hY3RpdmUgLkRyb3Bkb3duLXRvZ2dsZUljb24ge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuXG4uRHJvcGRvd24tY29udGVudCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogODAwO1xuICB0b3A6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIG1heC1oZWlnaHQ6IDI1LjVyZW07XG4gIG1pbi13aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICB0cmFuc2l0aW9uOiBhbGwgLjJzIGN1YmljLWJlemllciguMTc1LCAuODg1LCAuMzIwLCAxLjI3NSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgb3BhY2l0eTogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDtcbiAgYm94LXNoYWRvdzogMCAwIDEuNXJlbSByZ2JhKDAsMCwwLDAuMSk7XG59XG5cbi5Ecm9wZG93bi1jb250ZW50LS1Cb3JkZXJlZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMzIsIDExMywgMTM4LCAwLjEyKTtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMnB4O1xufVxuXG4uRHJvcGRvd24uaXMtYWN0aXZlID4gLkRyb3Bkb3duLWNvbnRlbnQge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5Ecm9wZG93bi10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIHBhZGRpbmc6IDAuMTg3NXJlbSAwLjM3NXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDMyLCAxMTMsIDEzOCwgMC4xMik7XG4gIGNvbG9yOiByZ2IoMTIxLCAxNzAsIDE4NSk7XG59XG5cbi5Ecm9wZG93bi1pdGVtIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAxLjMxMjVyZW07XG4gIHBhZGRpbmc6IDAuMzc1cmVtIDAuMzc1cmVtO1xuICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2Utb3V0O1xuICBjb2xvcjogIzAzQTZENztcbn1cblxuLkRyb3Bkb3duLWl0ZW06aG92ZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAzQTZENztcbn1cblxuLyoqXG4gKiBNb2RpZmllcnNcbiAqL1xuXG4uRHJvcGRvd24tLXJpZ2h0IC5Ecm9wZG93bi1jb250ZW50IHtcbiAgbGVmdDogYXV0bztcbiAgcmlnaHQ6IDA7XG59XG5cbi8qKiBAZGVmaW5lIEhlYWRlcjsgdXNlIHN0cmljdCAqL1xuXG5cblxuLkhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwM0E2RDc7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogMTAwO1xuICB3aWR0aDogMTAwJTtcbiAgdG9wOiAwO1xuICBib3gtc2hhZG93OiAwIDAuMzc1cmVtIDEuNXJlbSByZ2JhKDAsMCwwLDAuMSk7XG59XG5cbi5IZWFkZXItaXRlbSB7XG4gIGhlaWdodDogM3JlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwYWRkaW5nLXRvcDogMC43NXJlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuNzVyZW07XG59XG5cbi5IZWFkZXItYXZhdGFyIHtcbiAgbWFyZ2luLXRvcDogMC41NjI1cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjU2MjVyZW07XG4gIHdpZHRoOiAxLjg3NXJlbTtcbiAgaGVpZ2h0OiAxLjg3NXJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKiogQGRlZmluZSBIZWFkaW5nOyB1c2Ugc3RyaWN0ICovXG5cblxuXG4uaDEsXG4uaDIsXG4uaDMsXG4uaDQsXG4uaDUsXG4uaDYge1xuICBmb250LWZhbWlseTogJ1NvdXJjZSBTYW5zIFBybycsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhTmV1ZSwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLmgxIHtcbiAgZm9udC1zaXplOiAzNnB4O1xufVxuXG4uaDIge1xuICBmb250LXNpemU6IDI4cHg7XG59XG5cbi5oMyB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbn1cblxuLmg0IHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uaDUge1xuICBmb250LXNpemU6IDE4cHg7XG59XG5cbi5oNiB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuLkhlYWRpbmctLXBhbmVsIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBtYXJnaW46IDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi8qKiBAZGVmaW5lIEljb247IHVzZSBzdHJpY3QgKi9cblxuXG5cbi5JY29uIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRyYW5zaXRpb246IC4yNXMgYWxsIGN1YmljLWJlemllciguMTc1LCAuODg1LCAuMzIwLCAxLjI3NSk7XG59XG5cbi5JY29uLmlzLXJvdGF0ZWQge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuXG4uSWNvbi1pdGVtIHtcbiAgdmVydGljYWwtYWxpZ246IC0yNSU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDEuNXJlbTtcbiAgaGVpZ2h0OiAxLjVyZW07XG4gIGZpbGw6IGN1cnJlbnRDb2xvciAhaW1wb3J0YW50O1xufVxuXG4uSWNvbi0teGxnIC5JY29uLWl0ZW0ge1xuICB3aWR0aDogM3JlbTtcbiAgaGVpZ2h0OiAzcmVtO1xufVxuXG4uSWNvbi0tbGcgLkljb24taXRlbSB7XG4gIHdpZHRoOiAyLjI1cmVtO1xuICBoZWlnaHQ6IDIuMjVyZW07XG59XG5cbi5JY29uLS1zbSAuSWNvbi1pdGVtIHtcbiAgdmVydGljYWwtYWxpZ246IC0xNSU7XG4gIHdpZHRoOiAxLjEyNXJlbTtcbiAgaGVpZ2h0OiAxLjEyNXJlbTtcbn1cblxuLkljb24tLXhzbSAuSWNvbi1pdGVtIHtcbiAgdmVydGljYWwtYWxpZ246IC0xMCU7XG4gIHdpZHRoOiAwLjkzNzVyZW07XG4gIGhlaWdodDogMC45Mzc1cmVtO1xufVxuXG4uSWNvbi0tY2lyY2xlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAwLjc1cmVtO1xufVxuXG4uSWNvbi0tY2lyY2xlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBib3JkZXI6IDJweCBzb2xpZDtcbiAgb3BhY2l0eTogLjI7XG4gIGJvcmRlci1yYWRpdXM6IDNyZW07XG59XG5cbi5JY29uLS1jaXJjbGUuSWNvbi0tbGcsXG4uSWNvbi0tY2lyY2xlLkljb24tLXhsZyB7XG4gIGJvcmRlci13aWR0aDogM3B4O1xuICBwYWRkaW5nOiAxLjEyNXJlbTtcbn1cblxuLkljb24tLWNpcmNsZS5JY29uLS1sZyB7XG4gIHBhZGRpbmc6IDAuOTM3NXJlbTtcbn1cblxuLkljb24tLWNpcmNsZS5JY29uLS1zbSxcbi5JY29uLS1jaXJjbGUuSWNvbi0teHNtIHtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gIHBhZGRpbmc6IDAuNTYyNXJlbTtcbn1cblxuLkljb24tLWNpcmNsZS5JY29uLS14c20ge1xuICBwYWRkaW5nOiAwLjM3NXJlbTtcbn1cblxuLkljb24tLXN0cm9rZWQgLkljb24taXRlbSB7XG4gIGZpbGw6IG5vbmU7XG4gIHN0cm9rZTogY3VycmVudENvbG9yO1xuICBzdHJva2Utd2lkdGg6IDM7XG59XG5cbi8qIExvYWRlciBJY29uICovXG5cbi5JY29uLS1sb2FkZXIgLkljb24taXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLkljb24tLWxvYWRlci1kb3Qge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMzYuMSU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDI3LjglO1xuICBoZWlnaHQ6IDI3LjglO1xuICBhbmltYXRpb246IGJvdW5jZWRlbGF5IC45cyBpbmZpbml0ZSBjdWJpYy1iZXppZXIoLjE3NSwgLjg4NSwgLjMyMCwgMS4yNzUpO1xuICBib3JkZXItcmFkaXVzOiAzcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIC8qIFByZXZlbnQgZmlyc3QgZnJhbWUgZnJvbSBmbGlja2VyaW5nIHdoZW4gYW5pbWF0aW9uIHN0YXJ0cyAqL1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xufVxuXG4uSWNvbi0tbG9hZGVyLWRvdDpudGgtb2YtdHlwZSgyKSB7XG4gIGxlZnQ6IDM2LjElO1xuICBhbmltYXRpb24tZGVsYXk6IC4xNXM7XG59XG5cbi5JY29uLS1sb2FkZXItZG90Om50aC1vZi10eXBlKDMpIHtcbiAgcmlnaHQ6IDA7XG4gIGxlZnQ6IGF1dG87XG4gIGFuaW1hdGlvbi1kZWxheTogLjNzO1xufVxuXG5Aa2V5ZnJhbWVzIGJvdW5jZWRlbGF5IHtcbiAgMCUsIDkwJSwgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLCAwKTtcbiAgICBvcGFjaXR5OiAuMjtcbiAgfVxuXG4gIDQwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLCAxKTtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbi8qKiBAZGVmaW5lIExpbmtzOyB1c2Ugc3RyaWN0ICovXG5cblxuXG4vKipcbiAqIERlZmF1bHRcbiAqXG4gKiBNYWtlIGFueXRoaW5nIGxvb2sgbGlrZSBhIGxpbmtcbiAqL1xuXG4uTGluayB7XG4gIGNvbG9yOiAjMDNBNkQ3O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLkxpbms6aG92ZXIge1xuICBjb2xvcjogcmdiKDMsIDE0OSwgMTk0KTtcbn1cblxuLkxpbms6YWN0aXZlIHtcbiAgY29sb3I6IHJnYigyLCAxMzMsIDE3Mik7XG59XG5cbi8qIEludmVydCAqL1xuXG4uTGluay0taW52ZXJ0IHtcbiAgb3BhY2l0eTogMC44O1xufVxuXG4uTGluay0taW52ZXJ0LFxuLkxpbmstLWludmVydDpob3ZlciB7XG4gIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG59XG5cbi5MaW5rLS1pbnZlcnQ6aG92ZXIge1xuICBvcGFjaXR5OiAxO1xufVxuXG4uTGluay0taW52ZXJ0OmFjdGl2ZSxcbi5MaW5rLS1pbnZlcnQuaXMtYWN0aXZlIHtcbiAgb3BhY2l0eTogMC42O1xufVxuXG4vKiBTdWNjZXNzICovXG5cbi5MaW5rLS1zdWNjZXNzIHtcbiAgY29sb3I6ICM1Q0NBN0IgIWltcG9ydGFudDtcbn1cblxuLkxpbmstLXN1Y2Nlc3M6aG92ZXIge1xuICBjb2xvcjogcmdiKDY0LCAxNDEsIDg2KSAhaW1wb3J0YW50O1xufVxuXG4uTGluay0tc3VjY2VzczphY3RpdmUsXG4uTGluay0tc3VjY2Vzcy5pcy1hY3RpdmUge1xuICBjb2xvcjogcmdiKDM3LCA4MSwgNDkpICFpbXBvcnRhbnQ7XG59XG5cbi8qIFVuc3VyZSAqL1xuXG4uTGluay0tdW5zdXJlIHtcbiAgY29sb3I6ICNFOURGMUIgIWltcG9ydGFudDtcbn1cblxuLkxpbmstLXVuc3VyZTpob3ZlciB7XG4gIGNvbG9yOiByZ2IoMTYzLCAxNTYsIDE5KSAhaW1wb3J0YW50O1xufVxuXG4uTGluay0tdW5zdXJlOmFjdGl2ZSxcbi5MaW5rLS11bnN1cmUuaXMtYWN0aXZlIHtcbiAgY29sb3I6IHJnYig5MywgODksIDExKSAhaW1wb3J0YW50O1xufVxuXG4vKiBOZXV0cmFsICovXG5cbi5MaW5rLS1uZXV0cmFsIHtcbiAgY29sb3I6IHJnYigxODgsIDIxMiwgMjIwKSAhaW1wb3J0YW50O1xufVxuXG4uTGluay0tbmV1dHJhbDpob3ZlciB7XG4gIGNvbG9yOiByZ2IoMTMyLCAxNDgsIDE1NCkgIWltcG9ydGFudDtcbn1cblxuLkxpbmstLW5ldXRyYWw6YWN0aXZlLFxuLkxpbmstLW5ldXRyYWwuaXMtYWN0aXZlIHtcbiAgY29sb3I6IHJnYig3NSwgODUsIDg4KSAhaW1wb3J0YW50O1xufVxuXG4vKiBXYXJuaW5nICovXG5cbi5MaW5rLS13YXJuaW5nIHtcbiAgY29sb3I6ICNGRkE4MDAgIWltcG9ydGFudDtcbn1cblxuLkxpbmstLXdhcm5pbmc6aG92ZXIge1xuICBjb2xvcjogcmdiKDE3OSwgMTE4LCAwKSAhaW1wb3J0YW50O1xufVxuXG4uTGluay0td2FybmluZzphY3RpdmUsXG4uTGluay0td2FybmluZy5pcy1hY3RpdmUge1xuICBjb2xvcjogcmdiKDEwMiwgNjcsIDApICFpbXBvcnRhbnQ7XG59XG5cbi8qIERhbmdlciAqL1xuXG4uTGluay0tZGFuZ2VyIHtcbiAgY29sb3I6ICNGRjNCM0QgIWltcG9ydGFudDtcbn1cblxuLkxpbmstLWRhbmdlcjpob3ZlciB7XG4gIGNvbG9yOiByZ2IoMTc5LCA0MSwgNDMpICFpbXBvcnRhbnQ7XG59XG5cbi5MaW5rLS1kYW5nZXI6YWN0aXZlLFxuLkxpbmstLWRhbmdlci5pcy1hY3RpdmUge1xuICBjb2xvcjogcmdiKDEwMiwgMjQsIDI0KSAhaW1wb3J0YW50O1xufVxuXG5cblxuLkRpZmZlcmVuY2UgaW5zLFxuLkRpZmZlcmVuY2UgZGVsIHtcbiAgcGFkZGluZzogMCAxcHg7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbn1cblxuLkRpZmZlcmVuY2UgaW5zIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIwMSwgMjM4LCAyMTEpO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5EaWZmZXJlbmNlIGRlbCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDIyNCwgMjI0KTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4vKiogQGRlZmluZSBMb2dvTG9hZGVyOyB1c2Ugc3RyaWN0ICovXG5cblxuXG4uTG9nb0xvYWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiAtMC4wOTM3NXJlbTtcbiAgd2lkdGg6IDIuNDM3NXJlbTtcbiAgaGVpZ2h0OiAyLjQzNzVyZW07XG4gIGNvbG9yOiAjZmZmO1xuICBib3JkZXItcmFkaXVzOiAxMDBweDtcbn1cblxuLkxvZ29Mb2FkZXItLWludmVydGVkIHtcbiAgY29sb3I6ICMwM0E2RDc7XG59XG5cbi5Mb2dvTG9hZGVyLWxvZ28ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXMgY3ViaWMtYmV6aWVyKC4xNzUsIC44ODUsIC4zMjAsIDEuMjc1KTtcbiAgZmlsbDogY3VycmVudENvbG9yO1xufVxuXG4uTG9nb0xvYWRlci1zdmcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi5Mb2dvTG9hZGVyIHBhdGgge1xuICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlIDA7XG59XG5cbi5Mb2dvTG9hZGVyOmhvdmVyIC5Mb2dvTG9hZGVyLXoge1xuICBhbmltYXRpb246IHBvcCAuM3MgY3ViaWMtYmV6aWVyKC4xNzUsIC44ODUsIC4zMjAsIDEuMjc1KTtcbiAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMjtcbiAgYW5pbWF0aW9uLWRpcmVjdGlvbjogYWx0ZXJuYXRlO1xufVxuXG4uTG9nb0xvYWRlci16IHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLDEpO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cyBjdWJpYy1iZXppZXIoLjE3NSwgLjg4NSwgLjMyMCwgMS4yNzUpO1xufVxuXG4uTG9nb0xvYWRlciAuTG9nb0xvYWRlci1sb2dvIHtcbiAgdHJhbnNmb3JtLW9yaWdpbjogNTAlIDUwJSAwO1xuICAvKnRyYW5zZm9ybTogc2NhbGUoLjgsIC44KTsqL1xufVxuXG4uTG9nb0xvYWRlciAuTG9nb0xvYWRlci1jaXJjbGUsXG4uTG9nb0xvYWRlciAuTG9nb0xvYWRlci1jaXJjbGVQdWxzZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSwgMSk7XG59XG5cbi5Mb2dvTG9hZGVyLmlzLWxvYWRpbmcgLkxvZ29Mb2FkZXIteiB7XG4gIGFuaW1hdGlvbjogcHVsc2VCZWdpbiAxcyBpbmZpbml0ZSBsaW5lYXI7XG59XG5cbi5Mb2dvTG9hZGVyLmlzLWxvYWRpbmcgLkxvZ29Mb2FkZXItY2lyY2xlIHtcbiAgYW5pbWF0aW9uOiBwdWxzZUJlZ2luIDFzIGluZmluaXRlIGxpbmVhcjtcbiAgYW5pbWF0aW9uLWRlbGF5OiAuMXM7XG59XG5cbi5Mb2dvTG9hZGVyLmlzLWxvYWRpbmcgLkxvZ29Mb2FkZXItY2lyY2xlUHVsc2Uge1xuICBhbmltYXRpb246IHB1bHNlIDFzIGluZmluaXRlIGxpbmVhcjtcbiAgYW5pbWF0aW9uLWRlbGF5OiAuMXM7XG59XG5cbkBrZXlmcmFtZXMgcHVsc2VCZWdpbiB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB9XG5cbiAgMjAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKC42KTtcbiAgfVxuXG4gIDQwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xuICB9XG5cbiAgNjAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHB1bHNlIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoLjYpO1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cblxuICAyMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoLjYpO1xuICB9XG5cbiAgNDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG4gICAgb3BhY2l0eTogMC41O1xuICB9XG5cbiAgNjAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuNik7XG4gICAgb3BhY2l0eTogMC43O1xuICB9XG5cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcbiAgICBvcGFjaXR5OiAwLjA7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBwb3Age1xuICB0byB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMTVkZWcpIHNjYWxlKDEuMSwgMS4xKTtcbiAgfVxufVxuXG4vKiogQGRlZmluZSBQcm9ncmVzc2JhcjsgdXNlIHN0cmljdCAqL1xuXG5cblxuLlByb2dyZXNzYmFyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAwLjc1cmVtO1xuICBtYXJnaW46IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxODgsIDIxMiwgMjIwKTtcbn1cblxuLlByb2dyZXNzYmFyLS1zbSB7XG4gIGhlaWdodDogMC4zNzVyZW07XG59XG5cbi5Qcm9ncmVzc2Jhci0tbGcge1xuICBoZWlnaHQ6IDEuNXJlbTtcbn1cblxuLlByb2dyZXNzYmFyLWl0ZW0ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDEwMDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG4uUHJvZ3Jlc3NiYXItYXBwcm92ZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDNBNkQ3O1xuICB6LWluZGV4OiAyMDA7XG59XG5cbi5Qcm9ncmVzc2Jhci10cmFuc2xhdGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVDQ0E3Qjtcbn1cblxuLlByb2dyZXNzYmFyLW5lZWRzV29yayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFOURGMUI7XG59XG5cbi5Qcm9ncmVzc2Jhci11bnRyYW5zbGF0ZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTg4LCAyMTIsIDIyMCk7XG59XG5cblxuXG4uTW9kYWwge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDEwMDA7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDQuNXJlbSAxLjVyZW0gMS41cmVtO1xuICB0cmFuc2l0aW9uOiBhbGwgLjE1cyBsaW5lYXI7XG4gIG9wYWNpdHk6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjM2LCAyMzksIDI0MCwgMC45NSk7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgcGVyc3BlY3RpdmU6IDc1cmVtO1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG59XG5cbi5Nb2RhbC5pcy1hY3RpdmUge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICBvcGFjaXR5OiAxO1xufVxuXG4uTW9kYWwtZGlhbG9nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiA5MCU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIG1heC1oZWlnaHQ6IDEwMCU7XG4gIG1pbi13aWR0aDogMzAwcHg7XG4gIG1heC13aWR0aDogNDVyZW07XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzIGN1YmljLWJlemllciguMTc1LCAuODg1LCAuMzIwLCAxLjEpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgxMDAlKTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0NywgMjQ5LCAyNDkpO1xufVxuXG4uTW9kYWwuaXMtYWN0aXZlIC5Nb2RhbC1kaWFsb2cge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuLk1vZGFsLWhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAtM3JlbTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMzIsIDExMywgMTM4LCAwLjEyKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgei1pbmRleDogMTAwO1xufVxuXG4uTW9kYWwtdGl0bGUge1xuICBmb250LXNpemU6IDEuMzc1cmVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICBsaW5lLWhlaWdodDogMS41cmVtO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDAuNzVyZW0gMi4yNXJlbSAwLjc1cmVtIDEuNXJlbTtcbn1cblxuLk1vZGFsLWNsb3NlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogM3JlbTtcbiAgaGVpZ2h0OiAzcmVtO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cyBlYXNlLW91dDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHJnYmEoMzIsIDExMywgMTM4LCAwLjEyKTtcbn1cblxuLk1vZGFsLWNsb3NlOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMiwgMTEzLCAxMzgsIDAuMDUpO1xufVxuXG4uTW9kYWwtY2xvc2U6YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMiwgMTEzLCAxMzgsIDAuMSk7XG59XG5cbi5Nb2RhbC1jb250ZW50IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXgtaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdzogYXV0bztcbiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgzMiwgMTEzLCAxMzgsIDAuMTIpO1xuICBib3JkZXItdG9wLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMnB4O1xufVxuXG4vKiBib2R5ICovXG5cbi5Nb2RhbC1jb250YWluZXIuaXMtbW9kYWwge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi8qKiBAZGVmaW5lIFRvZ2dsZTsgdXNlIHN0cmljdCAqL1xuXG5cblxuLlRvZ2dsZSxcbi5Ub2dnbGUtbGFiZWwge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5Ub2dnbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWluLXdpZHRoOiAyLjA2MjVyZW07XG4gIG1hcmdpbjogMCAwLjA5Mzc1cmVtO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLlRvZ2dsZS1jaGVja2JveCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY3Vyc29yOiBub25lO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5Ub2dnbGUtbGFiZWwge1xuICBmb250LXdlaWdodDogNjAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAwIDAuNTYyNXJlbTtcbiAgdHJhbnNpdGlvbjogYWxsIC4yNXMgY3ViaWMtYmV6aWVyKC4wNzUsIC44MjAsIC4xNjUsIDEuMDAwKTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogY3VycmVudENvbG9yO1xufVxuXG4uVG9nZ2xlLWZha2VDaGVja2JveCB7XG4gIG9wYWNpdHk6IDE7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb250ZW50OiAnJztcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5Ub2dnbGU6aG92ZXIgPiAuVG9nZ2xlLWZha2VDaGVja2JveCxcbi5Ub2dnbGUtY2hlY2tib3g6Zm9jdXMgfiAuVG9nZ2xlLWZha2VDaGVja2JveCB7XG4gIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgb3BhY2l0eTogLjI7XG59XG5cbi5Ub2dnbGUtY2hlY2tib3g6Y2hlY2tlZCB+IC5Ub2dnbGUtbGFiZWwsXG4uVG9nZ2xlLmlzLWFjdGl2ZSB+IC5Ub2dnbGUtbGFiZWwge1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLlRvZ2dsZS1jaGVja2JveDpjaGVja2VkIH4gLlRvZ2dsZS1mYWtlQ2hlY2tib3gsXG4uVG9nZ2xlLmlzLWFjdGl2ZSA+IC5Ub2dnbGUtZmFrZUNoZWNrYm94IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xufVxuXG4uVG9nZ2xlOmhvdmVyID4gLlRvZ2dsZS1jaGVja2JveDpjaGVja2VkIH4gLlRvZ2dsZS1mYWtlQ2hlY2tib3gsXG4uVG9nZ2xlLWNoZWNrYm94OmNoZWNrZWQ6Zm9jdXMgfiAuVG9nZ2xlLWZha2VDaGVja2JveCxcbi5Ub2dnbGUuaXMtYWN0aXZlOmhvdmVyID4gLlRvZ2dsZS1mYWtlQ2hlY2tib3gge1xuICBvcGFjaXR5OiAuODtcbn1cblxuLyoqIEBkZWZpbmUgU3dpdGNoOyB1c2Ugc3RyaWN0ICovXG5cbi8qXG5cbjxzcGFuIGNsYXNzPVwiU3dpdGNoXCI+XG4gIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBjbGFzcz1cIlN3aXRjaC1jaGVja2JveFwiIC8+XG4gIDxsYWJlbCBjbGFzcz1cIlN3aXRjaC1sYWJlbFwiPlxuICAgIDxzcGFuIGNsYXNzPVwiU3dpdGNoLWxhYmVsVGV4dFwiPlN3aXRjaDwvc3Bhbj5cbiAgPC9sYWJlbD5cbjwvc3Bhbj5cblxuKi9cblxuXG5cbi5Td2l0Y2gge1xuICBwYWRkaW5nLWxlZnQ6IDIuMjVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLlN3aXRjaC1jaGVja2JveCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWFyZ2luLWxlZnQ6IC05OTk5cHg7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cblxuLlN3aXRjaC1sYWJlbCB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLlN3aXRjaC1sYWJlbDpiZWZvcmUsXG4uU3dpdGNoLWxhYmVsOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgYm9yZGVyLXJhZGl1czogMS4xMjVyZW07XG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZS1vdXQ7XG59XG5cbi5Td2l0Y2gtbGFiZWw6YmVmb3JlIHtcbiAgd2lkdGg6IDEuODc1cmVtO1xuICBoZWlnaHQ6IDEuMTI1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjEwLCAyMjcsIDIzMik7XG59XG5cbi5Td2l0Y2gtbGFiZWw6YWZ0ZXIge1xuICB3aWR0aDogMS4xMjVyZW07XG4gIGhlaWdodDogMS4xMjVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMjEsIDE3MCwgMTg1KTtcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSBzY2FsZSguOCwgLjgpO1xufVxuXG4uU3dpdGNoLWxhYmVsVGV4dCB7XG4gIGNvbG9yOiByZ2IoMTIxLCAxNzAsIDE4NSk7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG59XG5cbi5Td2l0Y2gtY2hlY2tib3g6Y2hlY2tlZCB+IC5Td2l0Y2gtbGFiZWw6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwNzE4QTtcbn1cblxuLlN3aXRjaC1jaGVja2JveDpjaGVja2VkIH4gLlN3aXRjaC1sYWJlbDphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKDY2JSkgc2NhbGUoLjgsIC44KTtcbn1cblxuLlN3aXRjaC1jaGVja2JveDpjaGVja2VkIH4gLlN3aXRjaC1sYWJlbCAuU3dpdGNoLWxhYmVsVGV4dCB7XG4gIGNvbG9yOiAjMjA3MThBO1xufVxuXG4vKiogQGRlZmluZSBUcmFuc1VuaXQ7IHVzZSBzdHJpY3QgKi9cblxuXG5cbi5UcmFuc1VuaXQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgY3Vyc29yOiB0ZXh0O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMzIsIDExMywgMTM4LCAwLjEyKTtcbn1cblxuLlRyYW5zVW5pdDpmb2N1cyB7XG4gIG91dGxpbmU6IDA7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG59XG5cbi5UcmFuc1VuaXQuaXMtZm9jdXNlZCB7XG4gIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cblxuLlRyYW5zVW5pdDpiZWZvcmUsXG4uVHJhbnNVbml0OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEuNXJlbTtcbiAgY29udGVudDogJyc7XG4gIC8qdHJhbnNpdGlvbjogdmFyKC0tVHJhbnNVbml0LXRyYW5zaXRpb24pOyovXG4gIHRyYW5zZm9ybTogc2NhbGVZKDApO1xuICBvcGFjaXR5OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xufVxuXG4uVHJhbnNVbml0OmJlZm9yZSB7XG4gIGJveC1zaGFkb3c6IDAgLTAuMzc1cmVtIDAuNzVyZW0gcmdiYSgwLDAsMCwuMDQpO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XG4gIHRvcDogLTEuMTI1cmVtO1xufVxuXG4uVHJhbnNVbml0OmFmdGVyIHtcbiAgYm94LXNoYWRvdzogMCAwLjM3NXJlbSAwLjc1cmVtIHJnYmEoMCwwLDAsLjA0KTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xuICBib3R0b206IC0xLjEyNXJlbTtcbn1cblxuLlRyYW5zVW5pdC5pcy1mb2N1c2VkOmJlZm9yZSxcbi5UcmFuc1VuaXQuaXMtZm9jdXNlZDphZnRlciB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIHRyYW5zZm9ybTogc2NhbGVZKDEpO1xuICBvcGFjaXR5OiAxO1xufVxuXG4uVHJhbnNVbml0LmlzLWZpcnN0IHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoMzIsIDExMywgMTM4LCAwLjEyKTtcbn1cblxuLyogUGFpciB3aXRoIC5FZGl0b3ItY29udGVudCAqL1xuXG4uVHJhbnNVbml0LWNvbnRhaW5lci5pcy11bml0LXNlbGVjdGVkIC5UcmFuc1VuaXQge1xuICBvcGFjaXR5OiAuODtcbn1cblxuLyoqXG4gKiBQYW5lbHNcbiAqL1xuXG4uVHJhbnNVbml0LXBhbmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLXRvcDogMS4xMjVyZW07XG4gIHBhZGRpbmctYm90dG9tOiAxLjEyNXJlbTtcbiAgcGFkZGluZy1sZWZ0OiAxLjVyZW07XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG5cbi5UcmFuc1VuaXQtaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLlRyYW5zVW5pdC1zb3VyY2Uge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHVzZXItc2VsZWN0OiB0ZXh0O1xufVxuXG4uVHJhbnNVbml0LmlzLWZvY3VzZWQgLlRyYW5zVW5pdC1zb3VyY2Uge1xuICBjdXJzb3I6IHRleHQ7XG59XG5cbi5UcmFuc1VuaXQtdHJhbnNsYXRpb24ge1xuICBjdXJzb3I6IHRleHQ7XG4gIHVzZXItc2VsZWN0OiB0ZXh0O1xufVxuXG4vKipcbiAqIFRyYW5zbGF0aW9uIGFuZCBzb3VyY2UgSGVhZGVyIGFuZCBGb290ZXJcbiAqL1xuXG4uVHJhbnNVbml0LXBhbmVsSGVhZGVyLFxuLlRyYW5zVW5pdC1wYW5lbEZvb3Rlcixcbi5UcmFuc1VuaXQtaXRlbUhlYWRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMjAwO1xuICByaWdodDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctcmlnaHQ6IDEuMTI1cmVtO1xuICBwYWRkaW5nLWxlZnQ6IDEuMTI1cmVtO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi5UcmFuc1VuaXQtcGFuZWxIZWFkZXIsXG4uVHJhbnNVbml0LXBhbmVsRm9vdGVyIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAvKnRyYW5zaXRpb246IHZhcigtLVRyYW5zVW5pdC10cmFuc2l0aW9uKTsqL1xuICBvcGFjaXR5OiAwO1xufVxuXG4uVHJhbnNVbml0LmlzLWZvY3VzZWQgLlRyYW5zVW5pdC1wYW5lbEhlYWRlcixcbi5UcmFuc1VuaXQuaXMtZm9jdXNlZCAuVHJhbnNVbml0LXBhbmVsRm9vdGVyIHtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgb3BhY2l0eTogMTtcbn1cblxuLlRyYW5zVW5pdC1wYW5lbEhlYWRlciB7XG4gIHRvcDogLTEuMTI1cmVtO1xufVxuXG4uVHJhbnNVbml0LWl0ZW1IZWFkZXIge1xuICB0b3A6IDA7XG59XG5cbi5UcmFuc1VuaXQtcGFuZWxGb290ZXIge1xuICBib3R0b206IC0xLjEyNXJlbTtcbn1cblxuLlRyYW5zVW5pdC1oZWFkaW5nIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMi4yNXJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luOiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uVHJhbnNVbml0LXRleHQge1xuICBmb250LWZhbWlseTogJ1NvdXJjZSBTYW5zIFBybycsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhTmV1ZSwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMS41O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMS41cmVtO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDEuMTI1cmVtO1xuICByZXNpemU6IG5vbmU7XG4gIHRyYW5zaXRpb246IGhlaWdodCAuMXMgY3ViaWMtYmV6aWVyKC4wNzUsIC44MjAsIC4xNjUsIDEuMDAwKTtcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHRhYi1zaXplOiA4O1xuICBjb2xvcjogIzQ0NGM1NDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4uVHJhbnNVbml0LXRleHQ6Zm9jdXMge1xuICBib3JkZXI6IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIE92ZXJyaWRlIHRleHQgaGlnaGxpZ2h0aW5nIGNoYW5naW5nIHRleHQgZm9ybWF0XG4gKiBvdGhlcndpc2UgaXQgd29uJ3QgYWxpZ25cbiAqL1xuXG4uVHJhbnNVbml0LXRleHQgc3BhbiB7XG4gIGZvbnQtd2VpZ2h0OiA0MDAgIWltcG9ydGFudDtcbiAgZm9udC1zdHlsZTogbm9ybWFsICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogU3RhdHVzIGJhclxuICovXG5cbi5UcmFuc1VuaXQtc3RhdHVzLFxuLlRyYW5zVW5pdC1zdGF0dXM6YmVmb3JlLFxuLlRyYW5zVW5pdC1zdGF0dXM6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDIwMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEuNXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE4OCwgMjEyLCAyMjApO1xufVxuXG4uVHJhbnNVbml0LXN0YXR1cyB7XG4gIHRvcDogLTE7XG4gIGJvdHRvbTogLTE7XG59XG5cbi5UcmFuc1VuaXQtc3RhdHVzLmlzLWxvYWRpbmcsXG4uVHJhbnNVbml0LXN0YXR1cy5pcy1sb2FkaW5nOmJlZm9yZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQoXG4gICAgNDVkZWcsXG4gICAgdHJhbnNwYXJlbnQsXG4gICAgdHJhbnNwYXJlbnQgMC4zNzVyZW0sXG4gICAgcmdiYSgyNTUsMjU1LDI1NSwuNSkgMC4zNzVyZW0sXG4gICAgcmdiYSgyNTUsMjU1LDI1NSwuNSkgMC43NXJlbVxuICApO1xuICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwMHB4O1xuICBhbmltYXRpb246IGxvYWRpbmcgN3MgbGluZWFyO1xuICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiBpbmZpbml0ZTtcbn1cblxuLlRyYW5zVW5pdC1zdGF0dXM6YmVmb3JlIHtcbiAgdG9wOiAtMS4xMjVyZW07XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZy10b3A6IDEuMTI1cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMS4xMjVyZW07XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICB6LWluZGV4OiAzMDA7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgY29udGVudDogJyc7XG4gIHRyYW5zZm9ybTogc2NhbGVZKC42NSk7XG59XG5cbi5UcmFuc1VuaXQtc3RhdHVzOmFmdGVyIHtcbiAgdHJhbnNpdGlvbjogbm9uZTtcbiAgei1pbmRleDogNDAwO1xuICB0b3A6IDA7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICB3aWR0aDogMS4zMTI1cmVtO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbnRlbnQ6ICcnO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBvcGFjaXR5OiAuNjtcbn1cblxuLlRyYW5zVW5pdC5pcy1mb2N1c2VkIC5UcmFuc1VuaXQtc3RhdHVzOmJlZm9yZSB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIHRyYW5zZm9ybTogc2NhbGVZKDEpO1xufVxuXG4uVHJhbnNVbml0LmlzLWZvY3VzZWQgLlRyYW5zVW5pdC1zdGF0dXM6YWZ0ZXIge1xuICB0b3A6IC0xLjEyNXJlbTtcbiAgcGFkZGluZy10b3A6IDEuMTI1cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMS4xMjVyZW07XG4gIG9wYWNpdHk6IC44O1xufVxuXG4vKipcbiAqIE1ldGEgZGF0YVxuICovXG5cbi5UcmFuc1VuaXQtbWV0YURhdGEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHJpZ2h0OiAwO1xuICBsZWZ0OiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLlRyYW5zVW5pdC1tZXRhRGF0YUl0ZW0ge1xuICBsaW5lLWhlaWdodDogMS4xMjVyZW07XG59XG5cbi5UcmFuc1VuaXQtbWV0YURhdGFCdXR0b24ge1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGxpbmUtaGVpZ2h0OiAwLjYwMDAwMDAwMDAwMDAwMDFyZW07XG4gIG9wYWNpdHk6IC44O1xufVxuXG4uVHJhbnNVbml0LW1ldGFEYXRhQnV0dG9uOmhvdmVyIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLlRyYW5zVW5pdC1tZXRhRGF0YUNvbW1lbnRzLFxuLlRyYW5zVW5pdC1tZXRhRGF0YUVycm9ycyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDA7XG4gIGxlZnQ6IDA7XG59XG5cbi5UcmFuc1VuaXQtbWV0YURhdGFDb21tZW50cyB7XG4gIHRvcDogMS4xMjVyZW07XG59XG5cbi5UcmFuc1VuaXQtbWV0YURhdGFFcnJvcnMge1xuICB0b3A6IDIuNjI1cmVtO1xufVxuXG4uVHJhbnNVbml0LW1ldGFEYXRhRXJyb3JzSWNvbiB7XG4gIHRleHQtc2hhZG93OiAwIDAgMnB4ICNmZmY7XG59XG5cbi8qKlxuICogU21hbGwgU2l6ZSBEb3duXG4gKi9cblxuQG1lZGlhIChtaW4td2lkdGg6MCkgYW5kIChtYXgtd2lkdGg6NzQwcHgpIHtcbiAgLlRyYW5zVW5pdC1IZWFkaW5nIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNXJlbTtcbiAgfVxuXG4gIC5UcmFuc1VuaXQtcGFuZWxGb290ZXJMZWZ0TmF2IHtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNXJlbTtcbiAgfVxufVxuXG4vKipcbiAqIE1lZGl1bSBTaXplIFVwXG4gKi9cblxuQG1lZGlhIChtaW4td2lkdGg6NzQxcHgpIHtcbiAgLlRyYW5zVW5pdCxcbiAgLlRyYW5zVW5pdC1pdGVtIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xuICB9XG5cbiAgLlRyYW5zVW5pdC1wYW5lbCB7XG4gICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICB3aWR0aDogNTAlO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxuXG4gIC5UcmFuc1VuaXQtc291cmNlIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwLjc1cmVtO1xuICB9XG5cbiAgLlRyYW5zVW5pdC10cmFuc2xhdGlvbiB7XG4gICAgcGFkZGluZy1sZWZ0OiAwLjc1cmVtO1xuICB9XG5cbiAgLyogQ292ZXIgdGhlIG92ZXJsYXBwaW5nIGhlYWRlcnMgKi9cblxuICAuVHJhbnNVbml0LXBhbmVsSGVhZGVyLS1zb3VyY2UsXG4gIC5UcmFuc1VuaXQtcGFuZWxGb290ZXItLXNvdXJjZSB7XG4gICAgcGFkZGluZy1yaWdodDogMS44NzVyZW07XG4gICAgcmlnaHQ6IGF1dG87XG4gIH1cblxuICAuVHJhbnNVbml0LXBhbmVsSGVhZGVyLS10cmFuc2xhdGlvbixcbiAgLlRyYW5zVW5pdC1wYW5lbEZvb3Rlci0tdHJhbnNsYXRpb24ge1xuICAgIHBhZGRpbmctbGVmdDogMS44NzVyZW07XG4gICAgbGVmdDogYXV0bztcbiAgfVxuXG4gIC5UcmFuc1VuaXQtc3RhdHVzLFxuICAuVHJhbnNVbml0LXN0YXR1czpiZWZvcmUsXG4gIC5UcmFuc1VuaXQtc3RhdHVzOmFmdGVyIHtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLWxlZnQ6IC0wLjc1cmVtO1xuICB9XG59XG5cbi8qKlxuICogU3RhdHVzIGJhciBNb2RpZmllcnNcbiAqL1xuXG4uVHJhbnNVbml0LS1oaWdobGlnaHQgLlRyYW5zVW5pdC1zdGF0dXMsXG4uVHJhbnNVbml0LS1oaWdobGlnaHQgLlRyYW5zVW5pdC1zdGF0dXM6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAzQTZENztcbn1cblxuLlRyYW5zVW5pdC0tc3VjY2VzcyAuVHJhbnNVbml0LXN0YXR1cyxcbi5UcmFuc1VuaXQtLXN1Y2Nlc3MgLlRyYW5zVW5pdC1zdGF0dXM6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVDQ0E3Qjtcbn1cblxuLlRyYW5zVW5pdC0tdW5zdXJlIC5UcmFuc1VuaXQtc3RhdHVzLFxuLlRyYW5zVW5pdC0tdW5zdXJlIC5UcmFuc1VuaXQtc3RhdHVzOmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFOURGMUI7XG59XG5cbi5UcmFuc1VuaXQtLXdhcm5pbmcgLlRyYW5zVW5pdC1zdGF0dXMsXG4uVHJhbnNVbml0LS13YXJuaW5nIC5UcmFuc1VuaXQtc3RhdHVzOmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkE4MDA7XG59XG5cbi5UcmFuc1VuaXQtLWRhbmdlciAuVHJhbnNVbml0LXN0YXR1cyxcbi5UcmFuc1VuaXQtLWRhbmdlciAuVHJhbnNVbml0LXN0YXR1czpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkYzQjNEO1xufVxuXG4uVHJhbnNVbml0LS1zZWNvbmRhcnkgLlRyYW5zVW5pdC1zdGF0dXMsXG4uVHJhbnNVbml0LS1zZWNvbmRhcnkgLlRyYW5zVW5pdC1zdGF0dXM6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwNzE4QTtcbn1cblxuLyoqXG4gKiBUeXBlIE1vZGlmaWVyc1xuICovXG5cbi5UcmFuc1VuaXQtLXN1Z2dlc3Rpb246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUxLCAyNTIsIDI1Mik7XG59XG5cbi5UcmFuc1VuaXQtLXN1Z2dlc3Rpb24gLlRyYW5zVW5pdC1wYW5lbCB7XG4gIHBhZGRpbmctdG9wOiAwLjc1cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC43NXJlbTtcbn1cblxuLlRyYW5zVW5pdC0tc3VnZ2VzdGlvbiAuVHJhbnNVbml0LWRldGFpbHMge1xuICBwYWRkaW5nLWxlZnQ6IDEuMTI1cmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAxLjEyNXJlbTtcbn1cblxuLlRyYW5zVW5pdC0tc3VnZ2VzdGlvbiAuVHJhbnNVbml0LXRleHQtLXRpZ2h0IHtcbiAgcGFkZGluZy10b3A6IDA7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xufVxuXG5Aa2V5ZnJhbWVzIGxvYWRpbmcge1xuICAwJSB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAwO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAwcHg7XG4gIH1cbn1cblxuLlJlc2l6ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDEwMDA7XG59XG5cbi5SZXNpemVyLS12ZXJ0aWNhbCB7XG4gIGN1cnNvcjogZXctcmVzaXplO1xuICB3aWR0aDogMTJweDtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG59XG5cbi5SZXNpemVyLS1ob3Jpem9udGFsIHtcbiAgaGVpZ2h0OiAxMnB4O1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgY3Vyc29yOiBucy1yZXNpemU7XG59XG5cbi8qKlxuICogVmlld3NcbiAqL1xuXG4vKiogQGRlZmluZSBFZGl0b3I7IHVzZSBzdHJpY3QgKi9cblxuXG5cbi5FZGl0b3Ige1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uRWRpdG9yLWhlYWRlcixcbi5FZGl0b3ItbG9hZGVyIHtcbiAgdHJhbnNpdGlvbjogLjJzIGFsbCBjdWJpYy1iZXppZXIoLjE3NSwgLjg4NSwgLjMyMCwgMS4yNzUpO1xufVxuXG4uRWRpdG9yLWhlYWRlci5pcy1taW5pbWlzZWQge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTNyZW0pO1xufVxuXG4uRWRpdG9yLWhlYWRlci5pcy1taW5pbWlzZWQgLkVkaXRvci1tYWluTmF2IHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4uRWRpdG9yLWxvYWRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogOTAwO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMC4zNzVyZW0pO1xufVxuXG4uRWRpdG9yLWxvYWRlci5pcy1taW5pbWlzZWQge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgc2NhbGUoLjc1LCAuNzUpO1xufVxuXG4uRWRpdG9yLW1haW5OYXYge1xuICBoZWlnaHQ6IDNyZW07XG59XG5cbi5FZGl0b3ItY29udGVudCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogNS42MjVyZW07XG4gIGJvdHRvbTogMDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgd2lkdGg6IDEwMCU7XG4gIC13ZWJraXQtb3Zlcmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xufVxuXG4uRWRpdG9yLWNvbnRlbnQuaXMtbWF4aW1pc2VkIHtcbiAgdG9wOiAyLjYyNXJlbTtcbn1cblxuLypTbyBmaXJlZm94IGtlZXBzIHRoZSBiYWNrZ3JvdW5kIGF0IDEwMCUgaGVpZ2h0IHdoZW4gdGhlcmUgYXJlIG9ubHkgYSBmZXcgdHJhbnNsYXRpb25zKi9cblxuLkVkaXRvci10cmFuc2xhdGlvbnNXcmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uRWRpdG9yLXRyYW5zbGF0aW9ucyB7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IDNyZW0gMDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KGxlZnQsIHJnYigyMTUsIDIyOSwgMjM0KSwgcmdiKDIxNSwgMjI5LCAyMzQpKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdCBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogMS41cmVtIDEwMCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG5cbi5FZGl0b3ItY3VycmVudERvYyB7XG4gIG1heC13aWR0aDogNS4yNXJlbTtcbn1cblxuLkVkaXRvci1jdXJyZW50TGFuZyB7XG4gIG1heC13aWR0aDogNS4yNXJlbTtcbn1cblxuLkVkaXRvci1zdWdnZXN0aW9ucyB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogMjAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtaW4taGVpZ2h0OiAzMCU7XG4gIGJveC1zaGFkb3c6IDAgLTAuMTg3NXJlbSAxLjVyZW0gcmdiYSgwLDAsMCwuMSk7XG4gIC8qdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpOyovXG59XG5cbi5FZGl0b3Itc3VnZ2VzdGlvbnNIZWFkZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDAsMCwwLDAuMSk7XG4gIHotaW5kZXg6IDMwMDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi5FZGl0b3Itc3VnZ2VzdGlvbnNCb2R5IHtcbiAgLyogRmFsbGJhY2sgKi9cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDIuMjVyZW07XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIG92ZXJmbG93OiBzY3JvbGw7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuXG4uRWRpdG9yLXN1Z2dlc3Rpb25zLmlzLXNlYXJjaC1hY3RpdmUgLkVkaXRvci1zdWdnZXN0aW9uc0JvZHkge1xuICB0b3A6IDQuNXJlbTtcbn1cblxuLkVkaXRvci1zdWdnZXN0aW9uc1NlYXJjaCB7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4vKipcbiAqIE1lZGlhIFF1ZXJpZXNcbiAqL1xuXG5AbWVkaWEgKG1pbi13aWR0aDowKSBhbmQgKG1heC13aWR0aDo3NDBweCkge1xuICAuRWRpdG9yLWN1cnJlbnRQcm9qZWN0IHtcbiAgICBtYXgtd2lkdGg6IDUuMjVyZW07XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6NzQxcHgpIHtcbiAgLkVkaXRvci10cmFuc2xhdGlvbnMge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgcmdiKDIxNSwgMjI5LCAyMzQpLCByZ2IoMjE1LCAyMjksIDIzNCkpLFxuICAgICAgbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjRUNFRkYwLCAjRUNFRkYwKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIsXG4gICAgICByaWdodDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDEuNXJlbSAxMDAlLFxuICAgICAgNTAlIDEwMCU7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgfVxufVxuXG4vKipcbiAqIFRoZW1lXG4gKi9cblxuLyoqXG4qIFRoZW1lIGRlZmluaXRpb25cbipcbiogVGhpcyBkZWZpbmVzIHRoZSB0aGVtZSBpbiBmdW5kYW1lbnRhbCB0ZXJtcywgYnV0IG5vdCBob3cgaXQgaXMgYXBwbGllZCB0b1xuKiB0aGUgY29tcG9uZW50cy4gVGhhdCBpcyBkb25lIGluIGB0aGVtZS1tYXAuY3NzYC5cbiovXG5cbi8qKlxuKiBCcmVha3BvaW50c1xuKi9cblxuLyoqXG4gKiBDb2xvcnNcbiAqL1xuXG46cm9vdCB7XG4gIC8qIFByaW1hcnkgZ3JleXMgKi9cbiAgLyogTWFpbiBjb2xvcnMgKi9cbiAgLyogQmFja2dyb3VuZCBjb2xvcnMgKi9cbiAgLyogU3RhdGUgY29sb3JzICovXG4gIC8qIEZvbnQgY29sb3JzICovXG59XG5cbi8qKlxuICogRm9udFxuICovXG5cblxuXG4vKipcbiAqIFN0eWxlIERlZmF1bHRzXG4gKi9cblxuXG5cbi8qKlxuICogUmh5dGhtXG4gKi9cblxuXG5cbi8qKlxuICogVHJhbnNpdGlvbnNcbiAqL1xuXG5cblxuLyoqXG4gKiBaLUluZGV4IFNjYWxlXG4gKi9cblxuXG5cbi8qKlxuICpcbiAqIFV0aWxpdGllc1xuICpcbiAqL1xuXG4vKipcbiAqIEJhY2tncm91bmRcbiAqL1xuXG5cblxuLyoqXG4gKiBMaXN0XG4gKi9cblxuXG5cbi8qKlxuICogU2l6ZVxuICovXG5cblxuXG4vKipcbiAqIFNwYWNlXG4gKi9cblxuXG5cbi8qKlxuICogRGlzcGxheVxuICovXG5cblxuXG4vKipcbiAqIFRleHRcbiAqL1xuXG5cblxuLyoqXG4gKlxuICogQ29tcG9uZW50c1xuICpcbiAqL1xuXG4vKipcbiAqIEJhc2VcbiAqL1xuXG46cm9vdCB7XG4gIC8qIEZvcm1zICovXG4gIC8qIEdsb2JhbCAqL1xuICAvKiBIZWFkaW5ncyAqL1xuICAvKiBMaW5rcyAqL1xuICAvKiBMaXN0cyAqL1xuICAvKiBNZWRpYSAqL1xuICAvKiBNaXNjICovXG4gIC8qIFRleHQgKi9cbn1cblxuLyoqXG4gKiBCdXR0b25cbiAqL1xuXG5cblxuLyoqXG4gKiBCdXR0b24gR3JvdXBcbiAqL1xuXG5cblxuLyoqXG4gKiBEcm9wZG93blxuICovXG5cblxuXG4vKipcbiAqIEhlYWRlclxuICovXG5cblxuXG4vKipcbiAqIEhlYWRpbmdzXG4gKi9cblxuXG5cbi8qKlxuICogSWNvblxuICovXG5cblxuXG4vKipcbiAqIExpbmtzXG4gKi9cblxuXG5cbi8qKlxuICogRGlmZmVyZW5jZVxuICovXG5cblxuXG4vKipcbiAqIExvZ29Mb2FkZXJcbiAqL1xuXG5cblxuLyoqXG4gKiBNb2RhbFxuICovXG5cblxuXG4vKipcbiAqIFByb2dyZXNzYmFyXG4gKi9cblxuXG5cbi8qKlxuICogVG9nZ2xlXG4gKi9cblxuXG5cbi8qKlxuICogVHJhbnNVbml0XG4gKi9cblxuXG5cbi8qKlxuICpcbiAqIFZpZXdzXG4gKlxuICovXG5cbi8qKlxuICogRWRpdG9yXG4gKi9cblxuXG5cbi8qIEZpeCBmb3IgaG90a2V5cywgcmVtb3ZlIHRoaXMgd2hlbiByZWltcGxlbWVudGVkICovXG5cbi5mYWRlIHtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuMjVzIGVhc2VpbjtcbiAgb3BhY2l0eTogMDtcbn1cblxuLmZhZGUuaW4ge1xuICBvcGFjaXR5OiAxO1xufVxuXG4vKiBBbmd1bGFyIHNwZWNpZmljIGNsYXNzZXMgKi9cblxuW25nXFw6Y2xvYWtdLFxuW25nLWNsb2FrXSxcbltkYXRhLW5nLWNsb2FrXSxcblt4LW5nLWNsb2FrXSxcbi5uZy1jbG9hayxcbi54LW5nLWNsb2FrIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpOW9iMjFsTDNCaGFIVmhibWN2ZDI5eWF5OTZZVzVoZEdFdGMzQmhMMkZ3Y0M5aGNIQXVZM056SWl3aWJtOWtaVjl0YjJSMWJHVnpMM04xYVhSamMzTXRkWFJwYkhNdGJHRjViM1YwTDJ4cFlpOXNZWGx2ZFhRdVkzTnpJaXdpWVhCd0wyTnZiWEJ2Ym1WdWRITXZkWFJwYkhNdGJHRjViM1YwTDJsdVpHVjRMbU56Y3lJc0ltRndjQzlqYjIxd2IyNWxiblJ6TDNWMGFXeHpMV0poWTJ0bmNtOTFibVF2YVc1a1pYZ3VZM056SWl3aWJtOWtaVjl0YjJSMWJHVnpMM04xYVhSamMzTXRkWFJwYkhNdFpHbHpjR3hoZVM5c2FXSXZaR2x6Y0d4aGVTNWpjM01pTENKaGNIQXZZMjl0Y0c5dVpXNTBjeTkxZEdsc2N5MWthWE53YkdGNUwybHVaR1Y0TG1OemN5SXNJbUZ3Y0M5amIyMXdiMjVsYm5SekwzVjBhV3h6TFd4cGMzUXZhVzVrWlhndVkzTnpJaXdpYm05a1pWOXRiMlIxYkdWekwzTjFhWFJqYzNNdGRYUnBiSE10Y0c5emFYUnBiMjR2YkdsaUwzQnZjMmwwYVc5dUxtTnpjeUlzSW1Gd2NDOWpiMjF3YjI1bGJuUnpMM1YwYVd4ekxYQnZjMmwwYVc5dUwybHVaR1Y0TG1OemN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5emRXbDBZM056TFhWMGFXeHpMWE5wZW1VdmJHbGlMM05wZW1VdVkzTnpJaXdpYm05a1pWOXRiMlIxYkdWekwzTjFhWFJqYzNNdGRYUnBiSE10YzJsNlpTOXNhV0l2YzJsNlpTMXpiUzVqYzNNaUxDSnViMlJsWDIxdlpIVnNaWE12YzNWcGRHTnpjeTExZEdsc2N5MXphWHBsTDJ4cFlpOXphWHBsTFcxa0xtTnpjeUlzSW01dlpHVmZiVzlrZFd4bGN5OXpkV2wwWTNOekxYVjBhV3h6TFhOcGVtVXZiR2xpTDNOcGVtVXRiR2N1WTNOeklpd2lZWEJ3TDJOdmJYQnZibVZ1ZEhNdmRYUnBiSE10YzJsNlpTOXBibVJsZUM1amMzTWlMQ0poY0hBdlkyOXRjRzl1Wlc1MGN5OTFkR2xzY3kxemNHRmpaUzlwYm1SbGVDNWpjM01pTENKdWIyUmxYMjF2WkhWc1pYTXZjM1ZwZEdOemN5MTFkR2xzY3kxMFpYaDBMMnhwWWk5MFpYaDBMbU56Y3lJc0ltRndjQzlqYjIxd2IyNWxiblJ6TDNWMGFXeHpMWFJsZUhRdmFXNWtaWGd1WTNOeklpd2libTlrWlY5dGIyUjFiR1Z6TDNOMWFYUmpjM010WTI5dGNHOXVaVzUwY3kxbmNtbGtMMnhwWWk5bmNtbGtMbU56Y3lJc0ltNXZaR1ZmYlc5a2RXeGxjeTl1YjNKdFlXeHBlbVV1WTNOekwyNXZjbTFoYkdsNlpTNWpjM01pTENKaGNIQXZZMjl0Y0c5dVpXNTBjeTlpWVhObEwyeHBZaTltYjNKdGN5NWpjM01pTENKaGNIQXZZMjl0Y0c5dVpXNTBjeTlpWVhObEwyeHBZaTluYkc5aVlXd3VZM056SWl3aVlYQndMMk52YlhCdmJtVnVkSE12WW1GelpTOXNhV0l2YUdWaFpHbHVaM011WTNOeklpd2lZWEJ3TDJOdmJYQnZibVZ1ZEhNdlltRnpaUzlzYVdJdmJHbHVhM011WTNOeklpd2lZWEJ3TDJOdmJYQnZibVZ1ZEhNdlltRnpaUzlzYVdJdmJHbHpkSE11WTNOeklpd2lZWEJ3TDJOdmJYQnZibVZ1ZEhNdlltRnpaUzlzYVdJdmJXVmthV0V1WTNOeklpd2lZWEJ3TDJOdmJYQnZibVZ1ZEhNdlltRnpaUzlzYVdJdmJXbHpZeTVqYzNNaUxDSmhjSEF2WTI5dGNHOXVaVzUwY3k5aVlYTmxMMnhwWWk5MFpYaDBMbU56Y3lJc0ltRndjQzlqYjIxd2IyNWxiblJ6TDJKMWRIUnZiaTFuY205MWNDOXBibVJsZUM1amMzTWlMQ0p1YjJSbFgyMXZaSFZzWlhNdmMzVnBkR056Y3kxamIyMXdiMjVsYm5SekxXSjFkSFJ2YmkxbmNtOTFjQzlpZFhSMGIyNHRaM0p2ZFhBdVkzTnpJaXdpYm05a1pWOXRiMlIxYkdWekwzTjFhWFJqYzNNdFkyOXRjRzl1Wlc1MGN5MWlkWFIwYjI0dFozSnZkWEF2WW5WMGRHOXVMV2R5YjNWd0xuQnNkV2RwYmk1amMzTWlMQ0poY0hBdlkyOXRjRzl1Wlc1MGN5OWlkWFIwYjI0dmFXNWtaWGd1WTNOeklpd2libTlrWlY5dGIyUjFiR1Z6TDNOMWFYUmpjM010WTI5dGNHOXVaVzUwY3kxaWRYUjBiMjR2YkdsaUwySjFkSFJ2Ymk1amMzTWlMQ0poY0hBdlkyOXRjRzl1Wlc1MGN5OXBibkIxZEMxbmNtOTFjQzlwYm1SbGVDNWpjM01pTENKaGNIQXZZMjl0Y0c5dVpXNTBjeTlrY205d1pHOTNiaTlwYm1SbGVDNWpjM01pTENKaGNIQXZZMjl0Y0c5dVpXNTBjeTlvWldGa1pYSXZhVzVrWlhndVkzTnpJaXdpWVhCd0wyTnZiWEJ2Ym1WdWRITXZhR1ZoWkdsdVp5OXBibVJsZUM1amMzTWlMQ0poY0hBdlkyOXRjRzl1Wlc1MGN5OXBZMjl1TDJsdVpHVjRMbU56Y3lJc0ltRndjQzlqYjIxd2IyNWxiblJ6TDJ4cGJtdHpMMmx1WkdWNExtTnpjeUlzSW1Gd2NDOWpiMjF3YjI1bGJuUnpMMlJwWm1abGNtVnVZMlV2YVc1a1pYZ3VZM056SWl3aVlYQndMMk52YlhCdmJtVnVkSE12Ykc5bmJ5MXNiMkZrWlhJdmFXNWtaWGd1WTNOeklpd2lZWEJ3TDJOdmJYQnZibVZ1ZEhNdlVISnZaM0psYzNOQ1lYSXZhVzVrWlhndVkzTnpJaXdpWVhCd0wyTnZiWEJ2Ym1WdWRITXZiVzlrWVd3dmFXNWtaWGd1WTNOeklpd2lZWEJ3TDJOdmJYQnZibVZ1ZEhNdmRHOW5aMnhsTDJsdVpHVjRMbU56Y3lJc0ltRndjQzlqYjIxd2IyNWxiblJ6TDNOM2FYUmphQzlwYm1SbGVDNWpjM01pTENKaGNIQXZZMjl0Y0c5dVpXNTBjeTkwY21GdWMxVnVhWFF2YVc1a1pYZ3VZM056SWl3aVlYQndMMk52YlhCdmJtVnVkSE12Y21WemFYcGxjaTlwYm1SbGVDNWpjM01pTENKaGNIQXZaV1JwZEc5eUwybHVaR1Y0TG1OemN5SXNJbUZ3Y0M5amIyMXdiMjVsYm5SekwzUm9aVzFsTDJ4cFlpOTBhR1Z0WlM1amMzTWlMQ0poY0hBdlkyOXRjRzl1Wlc1MGN5OTBhR1Z0WlM5c2FXSXZkR2hsYldVdGJXRndMbU56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUczdPenRCUTBGQk96czdPenM3T3pzN096czdPenRCUVdOQk96dEZRVVZGTzBGQlFXTTdSVUZEWkR0QlFVRm5RanM3TzBGQlIyeENPMFZCUTBVN096dEJRVWRHT3pzN096czdPenM3TzBGQlZVRTdSVUZEUlRzN08wRkJSMFk3T3pzN096czdPenM3T3p0QlFWbEJPMFZCUTBVN1FVRkJaME03UlVGRGFFTTdRVUZCTWtJN096dEJRVWMzUWpzN096dEJRVWxCTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3T3p0QlF6bEVSanRCUVVWRk8wbEJRMFU3U1VGRFFUczdPenM3TzBGRFpVbzdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUdEZRVU5CT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVOdVJrWTdPenM3UVVGSlFUdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmpzN096dEJRVWxCTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHT3pzN096czdRVUZOUVR0RlFVTkZPMFZCUTBFN1FVRkJhVUk3T3p0QlFVZHVRanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN096dEJRelZEUmpzN096czdPMEZCVFVFN1JVRkRSVHRGUVVOQk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UVVGRFJUdEpRVU5GT3pzN08wRkJTVW83UVVGRFJUdEpRVU5GT3pzN08wRkJTVW83UVVGRFJUdEpRVU5GT3pzN08wRkJTMG83UVVGRFJUdEpRVU5GT3pzN08wRkJTVW83UVVGRFJUdEpRVU5GT3pzN08wRkJTVW83UVVGRFJUdEpRVU5GT3pzN096czdRVU40UkVvN096czdPenRCUVUxQk8wVkJRMFU3T3p0QlFVZEdPenM3TzBGQlNVRTdPMFZCUlVVN1JVRkRRVHRGUVVOQk96czdRVUZIUmpzN096czdPMEZCVFVFN1JVRkRSVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdPenM3UVVGSlFUdEZRVU5GTzBWQlEwRTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdPenRCUVVkR096czdPMEZCU1VFN1FVRkRSVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPMEZCUTBVN1JVRkRRVHRGUVVOQk8wVkJRMEU3T3p0QlEzaEZSanRGUVVORk96czdRVUZIUmpzN096czdPMEZCVFVFN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPenRCUVVkR096czdPenRCUVV0Qk8wVkJRMFU3UlVGRFFUdEJRVUUyUWpzN08wRkJSeTlDTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3T3p0QlEyaERSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVTndRa1k3T3pzN1FVRkpRVHM3TzBGQlIwRTdPenM3UVVGSlFUczdSVUZGUlR0RlFVTkJPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR096czdPenRCUVV0Qk8wVkJRMFU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanM3T3pzN08wRkJUVUU3UlVGRFJUdEZRVU5CTzBWQlEwRTdPenRCUVVkR096czdPMEZCU1VFN1JVRkRSVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPenM3UVVGSFFUczdPenM3TzBGQlRVRTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdPMFZCUlVVN096dEJRVWRHT3p0RlFVVkZPenM3UVVGSFJqczdPMFZCUjBVN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR096czdSVUZIUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN08wVkJSVVU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHT3pzN096czdSVUZOUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN08wVkJSVVU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHT3pzN1JVRkhSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3T3p0RlFVZEZPenM3UVVGSFJqczdSVUZGUlRzN08wRkJSMFk3TzBWQlJVVTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdPenRCUXpWTFJqczdPenRCUVVsQk8wRkJSVVU3T3pzN1FVRkpRVHM3U1VGRlJUdEpRVU5CTzBsQlEwRTdPenRCUVVkR08wbEJRMFU3T3p0QlFVZEdPenM3T3p0QlFVdEJPMGxCUTBVN1NVRkRRVHRKUVVOQk96czdRVUZIUmpzN096czdPMEZCVFVFN1NVRkRSVHRKUVVOQk8wbEJRMEU3T3p0QlFVZEdPenM3TzBGQlNVRTdTVUZEUlR0SlFVTkJPMGxCUTBFN096dEJRVWRHT3pzN1FVRkhRVHM3T3pzN08wRkJUVUU3U1VGRFJUczdPMEZCUjBZN1NVRkRSVHM3TzBGQlIwWTdTVUZEUlRzN08wRkJSMFk3TzBsQlJVVTdPenRCUVVkR096dEpRVVZGT3pzN1FVRkhSanM3TzBsQlIwVTdPenRCUVVkR08wbEJRMFU3T3p0QlFVZEdPenM3U1VGSFJUczdPMEZCUjBZN1NVRkRSVHM3TzBGQlIwWTdPMGxCUlVVN096dEJRVWRHTzBsQlEwVTdPenRCUVVkR096czdPenM3U1VGTlJUczdPMEZCUjBZN1NVRkRSVHM3TzBGQlIwWTdPMGxCUlVVN096dEJRVWRHTzBsQlEwVTdPenRCUVVkR096czdTVUZIUlRzN08wRkJSMFk3U1VGRFJUczdPMEZCUjBZN096dEpRVWRGT3pzN1FVRkhSanM3U1VGRlJUczdPMEZCUjBZN08wbEJSVVU3T3p0QlFVZEdPMGxCUTBVN096dEJRVWRHTzBsQlEwVTdPenRCUVVkR08wbEJRMFU3T3pzN1FVTXpTMG83T3pzN1FVRkpRVHRCUVVWRk96czdPMEZCU1VFN08wbEJSVVU3U1VGRFFUdEpRVU5CT3pzN1FVRkhSanRKUVVORk96czdRVUZIUmpzN096czdRVUZMUVR0SlFVTkZPMGxCUTBFN1NVRkRRVHM3TzBGQlIwWTdPenM3T3p0QlFVMUJPMGxCUTBVN1NVRkRRVHRKUVVOQk96czdRVUZIUmpzN096dEJRVWxCTzBsQlEwVTdTVUZEUVR0SlFVTkJPenM3UVVGSFJqczdPMEZCUjBFN096czdPenRCUVUxQk8wbEJRMFU3T3p0QlFVZEdPMGxCUTBVN096dEJRVWRHTzBsQlEwVTdPenRCUVVkR096dEpRVVZGT3pzN1FVRkhSanM3U1VGRlJUczdPMEZCUjBZN096dEpRVWRGT3pzN1FVRkhSanRKUVVORk96czdRVUZIUmpzN08wbEJSMFU3T3p0QlFVZEdPMGxCUTBVN096dEJRVWRHT3p0SlFVVkZPenM3UVVGSFJqdEpRVU5GT3pzN1FVRkhSanM3T3pzN08wbEJUVVU3T3p0QlFVZEdPMGxCUTBVN096dEJRVWRHT3p0SlFVVkZPenM3UVVGSFJqdEpRVU5GT3pzN1FVRkhSanM3TzBsQlIwVTdPenRCUVVkR08wbEJRMFU3T3p0QlFVZEdPenM3U1VGSFJUczdPMEZCUjBZN08wbEJSVVU3T3p0QlFVZEdPenRKUVVWRk96czdRVUZIUmp0SlFVTkZPenM3UVVGSFJqdEpRVU5GT3pzN1FVRkhSanRKUVVORk96czdPMEZETTB0S096czdPMEZCU1VFN1FVRkZSVHM3T3p0QlFVbEJPenRKUVVWRk8wbEJRMEU3U1VGRFFUczdPMEZCUjBZN1NVRkRSVHM3TzBGQlIwWTdPenM3TzBGQlMwRTdTVUZEUlR0SlFVTkJPMGxCUTBFN096dEJRVWRHT3pzN096czdRVUZOUVR0SlFVTkZPMGxCUTBFN1NVRkRRVHM3TzBGQlIwWTdPenM3UVVGSlFUdEpRVU5GTzBsQlEwRTdTVUZEUVRzN08wRkJSMFk3T3p0QlFVZEJPenM3T3pzN1FVRk5RVHRKUVVORk96czdRVUZIUmp0SlFVTkZPenM3UVVGSFJqdEpRVU5GT3pzN1FVRkhSanM3U1VGRlJUczdPMEZCUjBZN08wbEJSVVU3T3p0QlFVZEdPenM3U1VGSFJUczdPMEZCUjBZN1NVRkRSVHM3TzBGQlIwWTdPenRKUVVkRk96czdRVUZIUmp0SlFVTkZPenM3UVVGSFJqczdTVUZGUlRzN08wRkJSMFk3U1VGRFJUczdPMEZCUjBZN096czdPenRKUVUxRk96czdRVUZIUmp0SlFVTkZPenM3UVVGSFJqczdTVUZGUlRzN08wRkJSMFk3U1VGRFJUczdPMEZCUjBZN096dEpRVWRGT3pzN1FVRkhSanRKUVVORk96czdRVUZIUmpzN08wbEJSMFU3T3p0QlFVZEdPenRKUVVWRk96czdRVUZIUmpzN1NVRkZSVHM3TzBGQlIwWTdTVUZEUlRzN08wRkJSMFk3U1VGRFJUczdPMEZCUjBZN1NVRkRSVHM3T3pzN08wRkRja3RLT3p0QlFVVkJPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHT3p0QlFVVkJPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHT3p0QlFVVkJPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN096czdPMEZEZWtaR096czdPenM3T3p0QlFWRkJPenM3T3pzN1FVRk5RenM3UVVGRlFUdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhTRHM3UVVGRlFUdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanM3UVVGRlFUdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqczdRVUZGUVR0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmpzN1FVRkZRVHRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmpzN1FVRkZRVHRGUVVORk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk96czdRVUZIUmpzN1FVRkZRVHRGUVVORk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk96czdRVUZIUmpzN096czdPMEZCVFVNN08wRkJSVUU3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMGc3TzBGQlJVRTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdPMEZCUlVFN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN08wRkJSVUU3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3TzBGQlJVRTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdPMEZCUlVFN1JVRkRSVHRGUVVOQk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdPMEZCUlVFN1JVRkRSVHRGUVVOQk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHM3TzBGRGNtRkdPenM3T3pzN1FVRk5RVHRGUVVORk96czdRVUZIUmpzN096dEJRVWxCTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHT3pzN08wRkJTVUU3UlVGRFJUczdPMEZCUjBZN096czdPenM3T3p0QlFWTkJPMFZCUTBVN1FVRkJiME03UlVGRGNFTTdRVUZCYVVNN1JVRkRha003UVVGQmMwSTdPenRCUVVkNFFqczdPenRCUVVsQk8wVkJRMFU3T3p0QlFVZEdPenM3T3pzN096czdPenM3UVVGWlFUdEZRVU5GTzBGQlFXbENPMFZCUTJwQ08wVkJRMEU3UlVGRFFUdEZRVU5CTzBGQlFUaENPenM3T3p0QlEzcEVhRU03UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUczdPMEZCUlVZN1JVRkRSVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN096dEJhRUl4UjBZN096czdRV2xDWkVFN096czdRVUZQUVRzN096czdPenRCUVU5Qk96czdRVUZIUVRzN096czdPenM3T3p0QlFWVkJPMFZCUTBVN1FVRkJaMEk3UlVGRGFFSTdRVUZCWXp0RlFVTmtPMEZCUVZjN1JVRkRXRHRCUVVGWk8wVkJRMW83UVVGQmEwSTdPenRCUVVkd1FqczdPenRCUVVsQk8wVkJRMFU3T3p0QlFVZEdPenM3TzBGQlNVRTdSVUZEUlRzN08wRkJSMFk3T3pzN1FVRkpRVHRGUVVORk96czdRVUZIUmpzN096dEJRVWxCTzBWQlEwVTdPenRCUVVkR096czdPenM3T3p0QlFWRkJPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR096czdRVUZIUVRzN096czdPenM3T3pzN1FVRlhRVHRGUVVORk8wVkJRMEU3UVVGQmRVSTdSVUZEZGtJN1FVRkJhME03UlVGRGJFTTdSVUZEUVR0RlFVTkJPMEZCUVd0Q08wVkJRMnhDTzBGQlFYRkNPMFZCUTNKQ08wRkJRV0U3T3p0QlFVZG1PenM3T3pzN1FVRk5RVHRGUVVORk8wVkJRMEU3T3p0QlEzQklSanM3UVVGRlFUczdPenM3TzBGQlRVRTdSVUZEUlR0QlFVRjVRanRGUVVONlFqdEJRVUUwUWp0RlFVTTFRanRCUVVGblF6czdPMEZCUjJ4RE96czdPMEZCU1VFN1JVRkRSVHM3TzBGQlIwWTdPenRCUVVkQk96czdPenM3TzBGQlQwRTdPenM3T3pzN096czdPenM3UlVGaFJUczdPMEZCUjBZN096czdPMEZCUzBFN096czdSVUZKUlR0QlFVRjFRanRGUVVOMlFqdEJRVUV3UWpzN08wRkJSelZDT3pzN096dEJRVXRCTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3T3pzN08wRkJTMEU3TzBWQlJVVTdPenRCUVVkR096czdRVUZIUVRzN096dEJRVWxCTzBWQlEwVTdPenRCUVVkR096czdPenRCUVV0Qk96dEZRVVZGT3pzN1FVRkhSanM3TzBGQlIwRTdPenM3UVVGSlFUdEZRVU5GT3pzN1FVRkhSanM3T3p0QlFVbEJPenRGUVVWRk96czdRVUZIUmpzN096dEJRVWxCTzBWQlEwVTdPenRCUVVkR096czdPenRCUVV0Qk8wVkJRMFU3UlVGRFFUczdPMEZCUjBZN096czdRVUZKUVR0RlFVTkZPMFZCUTBFN096dEJRVWRHT3pzN08wRkJTVUU3UlVGRFJUczdPMEZCUjBZN096czdRVUZKUVRzN1JVRkZSVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3T3p0QlFVZEJPenM3TzBGQlNVRTdSVUZEUlRzN08wRkJSMFk3T3pzN1FVRkpRVHRGUVVORk96czdRVUZIUmpzN08wRkJSMEU3T3pzN1FVRkpRVHRGUVVORk96czdRVUZIUmpzN096dEJRVWxCTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3T3pzN1FVRkpRVHRGUVVORk96czdRVUZIUmpzN096dEJRVWxCT3pzN08wVkJTVVU3UlVGRFFUczdPMEZCUjBZN096dEJRVWRCT3pzN096dEJRVXRCT3pzN096czdPMEZCVDBFN096czdPMFZCUzBVN1FVRkJaMEk3UlVGRGFFSTdRVUZCWlR0RlFVTm1PMEZCUVZjN096dEJRVWRpT3pzN08wRkJTVUU3UlVGRFJUczdPMEZCUjBZN096czdPenM3UVVGUFFUczdSVUZGUlRzN08wRkJSMFk3T3pzN096czdPMEZCVVVFN096czdSVUZKUlR0QlFVRTBRanRGUVVNMVFqdEJRVUZwUWpzN08wRkJSMjVDT3pzN08wRkJTVUU3TzBWQlJVVTdPenRCUVVkR096czdPMEZCU1VFN08wVkJSVVU3UlVGRFFUczdPMEZCUjBZN096czdPMEZCUzBFN1JVRkRSVHM3TzBGQlIwWTdPenM3T3pzN08wRkJVVUU3TzBWQlJVVTdRVUZCZDBJN1JVRkRlRUk3UVVGQldUczdPMEZCUjJRN096czdPenRCUVUxQk96dEZRVVZGT3pzN1FVRkhSanM3T3pzN1FVRkxRVHRGUVVORk8wRkJRU3RDTzBWQlF5OUNPMEZCUVhsQ096czdRVUZITTBJN096czdPenRCUVUxQk96dEZRVVZGT3pzN1FVRkhSanM3T3p0QlFVbEJPMFZCUTBVN1JVRkRRVHRGUVVOQk96czdRVUZIUmpzN096czdRVUZMUVR0RlFVTkZPMEZCUVZjN1JVRkRXRHRCUVVGWk96czdRVUZIWkRzN096dEJRVWxCTzBWQlEwVTdPenRCUVVkR096czdPenRCUVV0Qk8wVkJRMFU3T3p0QlFVZEdPenM3UVVGSFFUczdPenRCUVVsQk8wVkJRMFU3UlVGRFFUczdPMEZCUjBZN08wVkJSVVU3T3pzN08wRkRiR0ZHTzBGQlEwVTdSVUZEUVRzN08wRkJSVVk3UVVGRFJUdEZRVU5CT3pzN1FVRkZSanRCUVVORk8wVkJRMEU3T3p0QlFVVkdPMEZCUTBVN1JVRkRRVHM3TzBGQlIwWTdPenM3UlVGSlJUczdPMEZCUjBZN08wRkJRMEU3UlVGRFJUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN08wRkJSMFk3T3pzN08wRkJTMEU3UlVGRFJUdEZRVU5CT3pzN1FVRkhSanM3UlVGRlJUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPenM3T3pzN096czdPenRGUVZkRk8wVkJRMEU3UlVGRFFUczdPenM3UVVNNVJFWTdPMEZCUlVFN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPenM3UVVGSFJqczdPMFZCUjBVN096dEJRVWRHTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3TzBWQlJVVTdPenM3TzBGRGFrTkdPenM3T3pzN08wRkJUMEU3T3pzN096dEZRVTFGTzBWQlEwRTdSVUZEUVRzN096czdRVU5tUmp0RlFVTkZPMFZCUTBFN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPenM3UVVOaVJqczdSVUZGUlR0RlFVTkJPMFZCUTBFN096dEJRVWRHT3p0QlFVVkZPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdPenM3TzBGRFpFWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN096czdRVU5hUmp0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdPenM3T3p0QlFVMUJPMFZCUTBVN096czdPMEZEWkVZN096czdSVUZKUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPenM3T3p0RlFVdEZPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPenRCUXpGRFJqczdRVU5CUVRzN1FVRkZRVHM3T3p0QlFVMUJPenM3T3pzN096czdPenM3T3pzN096czdPMEZCYlVKQk96czdPenM3T3pzN096czdPMEZCWVVFN1JVRkRSVHRCUVVGblFqdEZRVU5vUWp0QlFVRmpPMFZCUTJRN1FVRkJWenRGUVVOWU8wRkJRV3RDTzBWQlEyeENPMEZCUVZrN096dEJRVWRrT3pzN096czdPenRCUVZGQk8wVkJRMFU3UVVGQlowSTdSVUZEYUVJN1FVRkJlVU03T3p0QlFVY3pRenRGUVVORk8wVkJRMEU3T3p0QlFVZEdPenM3T3p0QlFVdEJPenM3TzBWQlNVVTdPenRCUVVsR096czdRVUZIUVR0RlFVTkZPenM3UVVOdVJrWTdPMEZCUlVFN08wRkJSVUU3T3p0QlFVZEJPenM3T3p0QlFVdEJPenM3TzBGQlNVRTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdPenRCUVVkR096czdPMEZCU1VFN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN096dEJSbmhFUmp0QlFVTkZPMEZCUjBFN096dEJRVXRHTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk96czdRVWQ2UWtZN08wRkRRVUU3T3pzN1FVRlhRVHM3T3pzN08wRkJUVUU3T3pzN096czdPenM3TzBGQlYwRTdSVUZEUlR0QlFVRXdRanRGUVVNeFFqdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMEZCUVhkQ08wVkJRM2hDTzBGQlFUUkNPMFZCUXpWQ08wVkJRMEU3UlVGRFFUdEJRVUV3UWp0RlFVTXhRanRCUVVGeFFqdEZRVU55UWp0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UVVGQmJVSTdSVUZEYmtJN1FVRkJjVUk3T3p0QlFVZDJRanM3T3p0QlFVbEJPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdPenM3TzBGQlMwRTdSVUZEUlR0RlFVTkJPenM3UVVGSFJqczdPenRCUVVsQk96czdSVUZIUlRzN08wRkJSMFk3TzBWQlJVVTdSVUZEUVRzN096czdRVVIwUkVZN1JVRkRSVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPenRGUVVWRk96czdRVUZIUmpzN08wVkJSMFU3T3p0QlFVZEdPenRCUVVWQk8wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHT3p0RlFVVkZPenM3UVVGSFJqczdPenRCUVVsQk96dEJRVVZCTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN08wVkJSVVU3T3p0QlFVZEdPenRCUVVWQk8wVkJRMFU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdPMFZCUlVVN096dEJRVWRHT3p0QlFVVkJPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3TzBWQlJVVTdPenRCUVVkR096dEJRVVZCTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN08wVkJSVVU3T3p0QlFVZEdPenRCUVVWQk8wVkJRMFU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdPMFZCUlVVN096dEJRVWRHT3p0QlFVVkJPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3TzBWQlJVVTdPenRCUVVkR096dEJRVVZCTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN08wVkJSVVU3T3p0QlFVZEdPenRCUVVWQk8wVkJRMFU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdPMFZCUlVVN096dEJRVWRHT3p0QlFVVkJPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPenM3UVVGSFJqczdSVUZGUlR0RlFVTkJPenM3UVVGSFJqczdPenRCUVVsQk96dEJRVVZCTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdPenRCUlM5T1JqczdPenRCUVZkQk8wVkJRMFU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanM3TzBWQlIwVTdSVUZEUVRzN08wRkJSMFk3TzBWQlJVVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN08wVkJSVVU3T3p0QlFVZEdPenM3TzBWQlNVVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CT3pzN1FVRkhSanM3UlVGRlJUczdPMEZCUjBZN08wVkJSVVU3T3p0QlFVZEdPenM3TzBWQlNVVTdPenRCUVVkR096dEZRVVZGTzBWQlEwRTdSVUZEUVRzN08wRkJSMFk3TzBWQlJVVTdSVUZEUVR0RlFVTkJPenM3UVVNNVJrWTdPenM3UVVGdFFrRTdSVUZEUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3T3pzN1FVRkpRVHRGUVVORk8wVkJRMEU3T3p0QlEzSkhSanM3T3p0QlFWRkJPMFZCUTBVN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPenRCUXpkQ1JqczdPenRCUVdGQk96czdPenM3UlVGTlJUdEZRVU5CT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVTnVSRVk3T3pzN1FVRlJRVHRGUVVORk8wVkJRMEU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPenM3UVVGSFJqczdSVUZGUlR0RlFVTkJPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanM3UlVGRlJUdEZRVU5CT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN1JVRkRRVHM3TzBGQlIwWTdPMEZCUlVFN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdRVUZEUVR0RlFVVkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wbEJSMFU3U1VGRFFUczdPMFZCUlVZN1NVRkRSVHRKUVVOQk96czdPMEZEY0VsS096czdPMEZCWlVFN096czdPenRCUVUxQk8wVkJRMFU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSlJqczdRVUZGUVR0RlFVTkZPenM3UVVGSFJqczdSVUZGUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN08wVkJSVVU3T3p0QlFVZEdPenRCUVVWQk8wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHT3p0RlFVVkZPenM3UVVGSFJqczdRVUZGUVR0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkZSanM3UlVGRlJUczdPMEZCUjBZN08wRkJSVUU3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdPMFZCUlVVN096dEJRVWRHT3p0QlFVVkJPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR096dEZRVVZGT3pzN1FVRkhSanM3UVVGRlFUdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZGUmpzN1JVRkZSVHM3T3pzN1FVTjZTRVk3TzBWQlJVVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3T3p0QlEyeENSanM3T3p0QlFWTkJPMFZCUTBVN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPenRCUVVsR08wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk96czdRVUZIUmp0RlFVTkZPMEZCUTBFN096dEJRVWRHT3p0RlFVVkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0SlFVTkhPenM3UlVGRlNEdEpRVU5IT3pzN1JVRkZTRHRKUVVORk96czdSVUZGUmp0SlFVTkhPenM3UlVGRlNEdEpRVU5IT3pzN08wRkJTVXc3UlVGRFJUdEpRVU5ITzBsQlEwRTdPenRGUVVWSU8wbEJRMGM3T3p0RlFVVklPMGxCUTBVN1NVRkRRVHM3TzBWQlJVWTdTVUZEUnp0SlFVTkJPenM3UlVGRlNEdEpRVU5ITzBsQlEwRTdPenM3UVVGSlREdEZRVU5GTzBsQlEwVTdPenM3UVVNMVNFbzdPenM3UVVGalFUdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN096dEJRM1JEUmp0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZGUVR0RlFVTkJPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPenM3UVVGSFJqczdRVUZEUVR0RlFVTkZPMFZCUTBFN096dEJRMjVJUmpzN096dEJRVmRCT3p0RlFVVkZPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk96czdRVUZIUmpzN1JVRkZSVHRGUVVOQk96czdRVUZIUmpzN1JVRkZSVHM3TzBGQlIwWTdPMFZCUlVVN096dEJRVWRHT3pzN1JVRkhSVHM3TzBGRE0wVkdPenRCUVVWQk96czdPenM3T3pzN096czdPMEZCWjBKQk8wVkJRMFU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHT3p0RlFVVkZPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUczdPMEZEZWtWR096czdPMEZCTkVKQk8wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3UlVGRFFUczdPMEZCUjBZN08wVkJSVVU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMEZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHRGUVVOQk96czdRVUZIUmpzN1JVRkZSVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHT3p0QlFVTkJPMFZCUTBVN096dEJRVWxHT3pzN08wRkJTVUU3UlVGRFJUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPenM3UVVGSFJqczdPenRCUVVsQk96czdSVUZIUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanM3UlVGRlJUdEJRVU5CTzBWQlEwRTdPenRCUVVkR096dEZRVVZGTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlJVRTdPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanM3T3pzN1FVRkxRVHRGUVVORk8wVkJRMEU3T3p0QlFVZEdPenM3TzBGQlNVRTdPenRGUVVkRk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3UlVGRFFUczdPMEZCUjBZN08wVkJSVVU3T3pzN096czdSVUZQUVR0RlFVTkJPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPenM3UVVGSFJqczdPenRCUVVsQk8wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHT3p0RlFVVkZPMFZCUTBFN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdPenM3UVVGSlFUdEJRVU5GTzBsQlEwVTdPenRCUVVkR08wbEJRMFU3T3pzN1FVRkxTanM3T3p0QlFVbEJPMEZCUTBVN08wbEJSVVU3U1VGRFFUdEpRVU5CT3pzN1FVRkhSanRKUVVORk8wbEJRMEU3U1VGRFFUczdPMEZCUjBZN1NVRkRSVHM3TzBGQlIwWTdTVUZEUlRzN08wRkJSMFk3TzBGQlJVRTdPMGxCUlVVN1NVRkRRVHM3TzBGQlIwWTdPMGxCUlVVN1NVRkRRVHM3TzBGQlIwWTdPenRKUVVkRk8wbEJRMEU3T3pzN1FVRkpTanM3T3p0QlFVbEJPenRGUVVWRk96czdRVUZIUmpzN1JVRkZSVHM3TzBGQlIwWTdPMFZCUlVVN096dEJRVWRHT3p0RlFVVkZPenM3UVVGSFJqczdSVUZGUlRzN08wRkJSMFk3TzBWQlJVVTdPenRCUVVkR096czdPMEZCU1VFN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHRKUVVORk96czdSVUZGUmp0SlFVTkZPenM3TzBGRGNHTktPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHM3TzBFM1EzTkNSanM3T3p0Qk9FTjBRMFU3T3pzN1FVRmhSanRGUVVORk96czdRVUZIUmpzN1JVRkZSVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdPMEZCUTBFN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRCUVVOQk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRCUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN096czdRVUZKUVR0QlFVTkZPMGxCUTBVN096czdRVUZKU2p0QlFVTkZPMGxCUTBVN08wbEJSMEU3TzBsQlIwRTdPMGxCUjBFN096czdRVGxEZEVkS096czdPMEVyUXpkRFFUczdPenM3T3p0QlFVOUJPenM3TzBGQlkwRTdPenM3UVVGSlFUdEJRVVZGTzBGQllVRTdRVUZKUVR0QlFWTkJPMEZCVVVFN096dEJRVTFHT3pzN096czdRVUZqUVRzN096czdPMEZCYTBKQk96czdPenM3UVVGVlFUczdPenM3TzBGQlYwRTdPenM3T3p0QlEzaElRVHM3T3pzN08wRkJUVUU3T3pzN096dEJRWGxDUVRzN096czdPMEZCVVVFN096czdPenRCUVZGQk96czdPenM3UVVGUlFUczdPenM3TzBGQlUwRTdPenM3T3p0QlFXMUNRVHM3T3pzN08wRkJUVUU3T3pzN1FVRkpRVHRCUVVWRk8wRkJSMEU3UVVGUFFUdEJRVWxCTzBGQlMwRTdRVUZIUVR0QlFVZEJPMEZCU1VFN096dEJRV0ZHT3pzN096czdRVUV5UWtFN096czdPenRCUVZWQk96czdPenM3UVVGelFrRTdPenM3T3p0QlFWZEJPenM3T3pzN1FVRm5Ra0U3T3pzN096dEJRVlZCT3pzN096czdRVUZwUWtFN096czdPenRCUVZOQk96czdPenM3UVVGWFFUczdPenM3TzBGQmNVSkJPenM3T3pzN1FVRnBRa0U3T3pzN096dEJRV0ZCT3pzN096czdRVUUyUWtFN096czdPenRCUVUxQk96czdPenM3UVdoRWFGUkJPenRCUVVWQk8wVkJRMFU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdPMEZCUlVFN096czdPenRGUVUxRklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeW9xWEc0Z0tpQlZkR2xzYzF4dUlDb3ZYRzVjYmtCcGJYQnZjblFnSnk0dlkyOXRjRzl1Wlc1MGN5OTFkR2xzY3kxc1lYbHZkWFF2YVc1a1pYZ3VZM056Snp0Y2JrQnBiWEJ2Y25RZ0p5NHZZMjl0Y0c5dVpXNTBjeTkxZEdsc2N5MWlZV05yWjNKdmRXNWtMMmx1WkdWNExtTnpjeWM3WEc1QWFXMXdiM0owSUNjdUwyTnZiWEJ2Ym1WdWRITXZkWFJwYkhNdFpHbHpjR3hoZVM5cGJtUmxlQzVqYzNNbk8xeHVRR2x0Y0c5eWRDQW5MaTlqYjIxd2IyNWxiblJ6TDNWMGFXeHpMV3hwYzNRdmFXNWtaWGd1WTNOekp6dGNia0JwYlhCdmNuUWdKeTR2WTI5dGNHOXVaVzUwY3k5MWRHbHNjeTF3YjNOcGRHbHZiaTlwYm1SbGVDNWpjM01uTzF4dVFHbHRjRzl5ZENBbkxpOWpiMjF3YjI1bGJuUnpMM1YwYVd4ekxYTnBlbVV2YVc1a1pYZ3VZM056Snp0Y2JrQnBiWEJ2Y25RZ0p5NHZZMjl0Y0c5dVpXNTBjeTkxZEdsc2N5MXpjR0ZqWlM5cGJtUmxlQzVqYzNNbk8xeHVRR2x0Y0c5eWRDQW5MaTlqYjIxd2IyNWxiblJ6TDNWMGFXeHpMWFJsZUhRdmFXNWtaWGd1WTNOekp6dGNibHh1WEc0dktpcGNiaUFxSUVOdmJYQnZibVZ1ZEhOY2JpQXFMMXh1WEc1QWFXMXdiM0owSUNkemRXbDBZM056TFdOdmJYQnZibVZ1ZEhNdFozSnBaQ2M3WEc1QWFXMXdiM0owSUNjdUwyTnZiWEJ2Ym1WdWRITXZZbUZ6WlM5cGJtUmxlQzVqYzNNbk8xeHVRR2x0Y0c5eWRDQW5MaTlqYjIxd2IyNWxiblJ6TDJKMWRIUnZiaTFuY205MWNDOXBibVJsZUM1amMzTW5PMXh1UUdsdGNHOXlkQ0FuTGk5amIyMXdiMjVsYm5SekwySjFkSFJ2Ymk5cGJtUmxlQzVqYzNNbk8xeHVRR2x0Y0c5eWRDQW5MaTlqYjIxd2IyNWxiblJ6TDJsdWNIVjBMV2R5YjNWd0wybHVaR1Y0TG1OemN5YzdYRzVBYVcxd2IzSjBJQ2N1TDJOdmJYQnZibVZ1ZEhNdlpISnZjR1J2ZDI0dmFXNWtaWGd1WTNOekp6dGNia0JwYlhCdmNuUWdKeTR2WTI5dGNHOXVaVzUwY3k5b1pXRmtaWEl2YVc1a1pYZ3VZM056Snp0Y2JrQnBiWEJ2Y25RZ0p5NHZZMjl0Y0c5dVpXNTBjeTlvWldGa2FXNW5MMmx1WkdWNExtTnpjeWM3WEc1QWFXMXdiM0owSUNjdUwyTnZiWEJ2Ym1WdWRITXZhV052Ymk5cGJtUmxlQzVqYzNNbk8xeHVRR2x0Y0c5eWRDQW5MaTlqYjIxd2IyNWxiblJ6TDJ4cGJtdHpMMmx1WkdWNExtTnpjeWM3WEc1QWFXMXdiM0owSUNjdUwyTnZiWEJ2Ym1WdWRITXZaR2xtWm1WeVpXNWpaUzlwYm1SbGVDNWpjM01uTzF4dVFHbHRjRzl5ZENBbkxpOWpiMjF3YjI1bGJuUnpMMnh2WjI4dGJHOWhaR1Z5TDJsdVpHVjRMbU56Y3ljN1hHNUFhVzF3YjNKMElDY3VMMk52YlhCdmJtVnVkSE12VUhKdlozSmxjM05DWVhJdmFXNWtaWGd1WTNOekp6dGNia0JwYlhCdmNuUWdKeTR2WTI5dGNHOXVaVzUwY3k5dGIyUmhiQzlwYm1SbGVDNWpjM01uTzF4dVFHbHRjRzl5ZENBbkxpOWpiMjF3YjI1bGJuUnpMM1J2WjJkc1pTOXBibVJsZUM1amMzTW5PMXh1UUdsdGNHOXlkQ0FuTGk5amIyMXdiMjVsYm5SekwzTjNhWFJqYUM5cGJtUmxlQzVqYzNNbk8xeHVRR2x0Y0c5eWRDQW5MaTlqYjIxd2IyNWxiblJ6TDNSeVlXNXpWVzVwZEM5cGJtUmxlQzVqYzNNbk8xeHVRR2x0Y0c5eWRDQW5MaTlqYjIxd2IyNWxiblJ6TDNKbGMybDZaWEl2YVc1a1pYZ3VZM056Snp0Y2JseHVYRzR2S2lwY2JpQXFJRlpwWlhkelhHNGdLaTljYmx4dVFHbHRjRzl5ZENBbkxpOWxaR2wwYjNJdmFXNWtaWGd1WTNOekp6dGNibHh1WEc0dktpcGNiaUFxSUZSb1pXMWxYRzRnS2k5Y2JseHVRR2x0Y0c5eWRDQW5MaTlqYjIxd2IyNWxiblJ6TDNSb1pXMWxMMmx1WkdWNExtTnpjeWM3WEc1Y2JseHVMeW9nUm1sNElHWnZjaUJvYjNSclpYbHpMQ0J5WlcxdmRtVWdkR2hwY3lCM2FHVnVJSEpsYVcxd2JHVnRaVzUwWldRZ0tpOWNibHh1TG1aaFpHVWdlMXh1SUNCMGNtRnVjMmwwYVc5dU9pQnZjR0ZqYVhSNUlDNHlOWE1nWldGelpXbHVPMXh1SUNCdmNHRmphWFI1T2lBd08xeHVmVnh1WEc0dVptRmtaUzVwYmlCN1hHNGdJRzl3WVdOcGRIazZJREU3WEc1OVhHNWNiaThxSUVGdVozVnNZWElnYzNCbFkybG1hV01nWTJ4aGMzTmxjeUFxTDF4dVhHNWJibWRjWERwamJHOWhhMTBzWEc1YmJtY3RZMnh2WVd0ZExGeHVXMlJoZEdFdGJtY3RZMnh2WVd0ZExGeHVXM2d0Ym1jdFkyeHZZV3RkTEZ4dUxtNW5MV05zYjJGckxGeHVMbmd0Ym1jdFkyeHZZV3NnZTF4dUlDQmthWE53YkdGNU9pQnViMjVsSUNGcGJYQnZjblJoYm5RN1hHNTlYRzRpTENJdktpcGNiaUFxSUVOdmJuUmhhVzRnWm14dllYUnpYRzRnS2x4dUlDb2dUV0ZyWlNCaGJpQmxiR1Z0Wlc1MElHVjRjR0Z1WkNCMGJ5QmpiMjUwWVdsdUlHWnNiMkYwWldRZ1kyaHBiR1J5Wlc0dVhHNGdLaUJWYzJWeklIQnpaWFZrYnkxbGJHVnRaVzUwY3lBb2JXbGpjbThnWTJ4bFlYSm1hWGdwTGx4dUlDcGNiaUFxSURFdUlGUm9aU0J6Y0dGalpTQmpiMjUwWlc1MElHbHpJRzl1WlNCM1lYa2dkRzhnWVhadmFXUWdZVzRnVDNCbGNtRWdZblZuSUhkb1pXNGdkR2hsWEc0Z0tpQWdJQ0JnWTI5dWRHVnVkR1ZrYVhSaFlteGxZQ0JoZEhSeWFXSjFkR1VnYVhNZ2FXNWpiSFZrWldRZ1lXNTVkMmhsY21VZ1pXeHpaU0JwYmlCMGFHVWdaRzlqZFcxbGJuUXVYRzRnS2lBZ0lDQlBkR2hsY25kcGMyVWdhWFFnWTJGMWMyVnpJSE53WVdObElIUnZJR0Z3Y0dWaGNpQmhkQ0IwYUdVZ2RHOXdJR0Z1WkNCaWIzUjBiMjBnYjJZZ2RHaGxYRzRnS2lBZ0lDQmxiR1Z0Wlc1MExseHVJQ29nTWk0Z1ZHaGxJSFZ6WlNCdlppQmdkR0ZpYkdWZ0lISmhkR2hsY2lCMGFHRnVJR0JpYkc5amEyQWdhWE1nYjI1c2VTQnVaV05sYzNOaGNua2dhV1lnZFhOcGJtZGNiaUFxSUNBZ0lHQTZZbVZtYjNKbFlDQjBieUJqYjI1MFlXbHVJSFJvWlNCMGIzQXRiV0Z5WjJsdWN5QnZaaUJqYUdsc1pDQmxiR1Z0Wlc1MGN5NWNiaUFxTDF4dVhHNHVkUzFqWmpwaVpXWnZjbVVzWEc0dWRTMWpaanBoWm5SbGNpQjdYRzRnSUdOdmJuUmxiblE2SUZ3aUlGd2lPeUF2S2lBeElDb3ZYRzRnSUdScGMzQnNZWGs2SUhSaFlteGxPeUF2S2lBeUlDb3ZYRzU5WEc1Y2JpNTFMV05tT21GbWRHVnlJSHRjYmlBZ1kyeGxZWEk2SUdKdmRHZzdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1RtVjNJR0pzYjJOcklHWnZjbTFoZEhScGJtY2dZMjl1ZEdWNGRGeHVJQ3BjYmlBcUlGUm9hWE1nWVdabWIzSmtjeUJ6YjIxbElIVnpaV1oxYkNCd2NtOXdaWEowYVdWeklIUnZJSFJvWlNCbGJHVnRaVzUwTGlCSmRDQjNiMjRuZENCM2NtRndJSFZ1WkdWeVhHNGdLaUJtYkc5aGRITXVJRmRwYkd3Z1lXeHpieUJqYjI1MFlXbHVJR0Z1ZVNCbWJHOWhkR1ZrSUdOb2FXeGtjbVZ1TGx4dVhHNGdLaUJPTGtJdUlGUm9hWE1nZDJsc2JDQmpiR2x3SUc5MlpYSm1iRzkzTGlCVmMyVWdkR2hsSUdGc2RHVnlibUYwYVhabElHMWxkR2h2WkNCaVpXeHZkeUJwWmlCMGFHbHpJR2x6WEc0Z0tpQndjbTlpYkdWdFlYUnBZeTVjYmlBcUwxeHVYRzR1ZFMxdVltWmpJSHRjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmlBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dktpcGNiaUFxSUU1bGR5QmliRzlqYXlCbWIzSnRZWFIwYVc1bklHTnZiblJsZUhRZ0tHRnNkR1Z5Ym1GMGFYWmxLVnh1SUNwY2JpQXFJRUZzZEdWeWJtRjBhWFpsSUcxbGRHaHZaQ0IzYUdWdUlHOTJaWEptYkc5M0lHMTFjM1FnYm05MElHSmxJR05zYVhCd1pXUXVYRzRnS2x4dUlDb2dNUzRnUTNKbFlYUmxJR0VnYm1WM0lHSnNiMk5ySUdadmNtMWhkSFJwYm1jZ1kyOXVkR1Y0ZENBb1RrSkdReWt1WEc0Z0tpQXlMaUJCZG05cFpDQnphSEpwYm1zdGQzSmhjQ0JpWldoaGRtbHZkWElnYjJZZ2RHRmliR1V0WTJWc2JDNWNiaUFxWEc0Z0tpQk9Ma0l1SUZSb2FYTWdZbkpsWVd0eklHUnZkMjRnYVc0Z2MyOXRaU0JpY205M2MyVnljeUIzYUdWdUlHVnNaVzFsYm5SeklIZHBkR2hwYmlCMGFHbHpJR1ZzWlcxbGJuUmNiaUFxSUdWNFkyVmxaQ0JwZEhNZ2QybGtkR2d1WEc0Z0tpOWNibHh1TG5VdGJtSm1ZMEZzZENCN1hHNGdJR1JwYzNCc1lYazZJSFJoWW14bExXTmxiR3dnSVdsdGNHOXlkR0Z1ZERzZ0x5b2dNU0FxTDF4dUlDQjNhV1IwYURvZ01UQXdNREJ3ZUNBaGFXMXdiM0owWVc1ME95QXZLaUF5SUNvdlhHNTlYRzVjYmk4cUtseHVJQ29nUm14dllYUnpYRzRnS2k5Y2JseHVMblV0Wm14dllYUk1aV1owSUh0Y2JpQWdabXh2WVhRNklHeGxablFnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdFpteHZZWFJTYVdkb2RDQjdYRzRnSUdac2IyRjBPaUJ5YVdkb2RDQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dUlpd2lRR2x0Y0c5eWRDQW5jM1ZwZEdOemN5MTFkR2xzY3kxc1lYbHZkWFFuTzF4dVhHNUFiV1ZrYVdFZ0tDMHRjMjB0ZG1sbGQzQnZjblFwSUh0Y2JseHVJQ0F1ZFMxemJTMW1iRzloZEU1dmJtVWdlMXh1SUNBZ0lHTnNaV0Z5T2lCaWIzUm9PMXh1SUNBZ0lHWnNiMkYwT2lCdWIyNWxJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIMWNibHh1ZlZ4dUlpd2lPbkp2YjNRZ2UxeHVJQ0F0TFhVdFltY3RkSEpoYm5OcGRHbHZiam9nWVd4c0lDNHlOWE1nWldGelpTMXZkWFE3WEc0Z0lDMHRkUzFpWnkxaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBalkyTmpPMXh1SUNBdExYVXRZbWN0WW05eVpHVnlMV0p2ZEhSdmJTMTNhV1IwYURvZ01uQjRPMXh1SUNBdExYVXRZbWN0WTI5c2IzSTZJQ05tTUdZeVpqUTdYRzRnSUMwdGRTMWlaeTFqYjJ4dmNpMXNhV2RvZEdWemREb2dZMjlzYjNJb2RtRnlLQzB0WTI5c2IzSXRZbWNwSUhScGJuUW9PVGtsS1NrN1hHNGdJQzB0ZFMxaVp5MWpiMnh2Y2kxc2FXZG9kR1Z5T2lCamIyeHZjaWgyWVhJb0xTMWpiMnh2Y2kxaVp5a2dkR2x1ZENnNU15VXBLVHRjYmlBZ0xTMTFMV0puTFdOdmJHOXlMV3hwWjJoME9pQmpiMnh2Y2loMllYSW9MUzFqYjJ4dmNpMWlaeWtnZEdsdWRDZzBOaVVwS1R0Y2JpQWdMUzExTFdKbkxXTnZiRzl5TFdSaGNtczZJR052Ykc5eUtIWmhjaWd0TFdOdmJHOXlMV0puS1NCemFHRmtaU2d6SlNrcE8xeHVJQ0F0TFhVdFltY3RZMjlzYjNJdFpHRnlhMlZ5T2lCamIyeHZjaWgyWVhJb0xTMWpiMnh2Y2kxaVp5a2djMmhoWkdVb05pVXBLVHRjYmlBZ0xTMTFMV0puTFdOdmJHOXlMV1JoY210bGMzUTZJR052Ykc5eUtIWmhjaWd0TFdOdmJHOXlMV0puS1NCemFHRmtaU2c1SlNrcE8xeHVJQ0F0TFhVdFltY3RZMjlzYjNJdGNISnBiV0Z5ZVRvZ0kyUmpaV05tTnp0Y2JpQWdMUzExTFdKbkxXTnZiRzl5TFhObFkyOXVaR0Z5ZVRvZ0kyUTVaVEZsTnp0Y2JpQWdMUzExTFdKbkxXTnZiRzl5TFc1bGRYUnlZV3c2SUhaaGNpZ3RMWFV0WW1jdFkyOXNiM0lwTzF4dUlDQXRMWFV0WW1jdFkyOXNiM0l0WkdGdVoyVnlPaUJqYjJ4dmNpZ2paVEExTnpWaUlIUnBiblFvT0RBbEtTazdYRzRnSUMwdGRTMWlaeTFqYjJ4dmNpMTNZWEp1YVc1bk9pQmpiMnh2Y2lnalpUTTRNalJsSUhScGJuUW9PREFsS1NrN1hHNGdJQzB0ZFMxaVp5MWpiMnh2Y2kxMWJuTjFjbVU2SUdOdmJHOXlLQ05sTUdNek5UQWdkR2x1ZENnNU1DVXBLVHRjYmlBZ0xTMTFMV0puTFdOdmJHOXlMWE4xWTJObGMzTTZJR052Ykc5eUtDTTNNR0U1T0dJZ2RHbHVkQ2c0TUNVcEtUdGNiaUFnTFMxMUxXSm5MV052Ykc5eUxXaHBaMmhzYVdkb2REb2dZMjlzYjNJb0l6UmxPV1prWkNCMGFXNTBLRGd3SlNrcE8xeHVmVnh1WEc0dWRTMWlaMFpoYVc1MElIdGNiaUFnYjNCaFkybDBlVG9nTGprN1hHNTlYRzVjYmk1MUxXSm5TR2xuYUNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExYVXRZbWN0WTI5c2IzSXRiR2xuYUhRcE8xeHVmVnh1WEc0dWRTMWlaMGhwWjJobGNpQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhaaGNpZ3RMWFV0WW1jdFkyOXNiM0l0YkdsbmFIUmxjaWs3WEc1OVhHNWNiaTUxTFdKblNHbG5hR1Z6ZENCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExYVXRZbWN0WTI5c2IzSXRiR2xuYUhSbGMzUXBPMXh1ZlZ4dVhHNHVkUzFpWjB4dmR5QjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhaaGNpZ3RMWFV0WW1jdFkyOXNiM0l0WkdGeWF5azdYRzU5WEc1Y2JpNTFMV0puVEc5M1pYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzExTFdKbkxXTnZiRzl5TFdSaGNtdGxjaWs3WEc1OVhHNWNiaTUxTFdKblRHOTNaWE4wSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkbUZ5S0MwdGRTMWlaeTFqYjJ4dmNpMWtZWEpyWlhOMEtUdGNibjFjYmx4dUxuVXRZbWRRYjNBZ2UxeHVJQ0JpYjNKa1pYSTZJSFpoY2lndExYVXRZbWN0WW05eVpHVnlLVHRjYmlBZ1ltOXlaR1Z5TFdKdmRIUnZiUzEzYVdSMGFEb2dkbUZ5S0MwdGRTMWlaeTFpYjNKa1pYSXRZbTkwZEc5dExYZHBaSFJvS1R0Y2JuMWNibHh1TG5VdFltZE9aWFYwY21Gc0lIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZG1GeUtDMHRkUzFpWnkxamIyeHZjaTF1WlhWMGNtRnNLVHRjYm4xY2JseHVMblV0WW1kUWNtbHRZWEo1SUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkbUZ5S0MwdGRTMWlaeTFqYjJ4dmNpMXdjbWx0WVhKNUtUdGNibjFjYmx4dUxuVXRZbWRUWldOdmJtUmhjbmtnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMxMUxXSm5MV052Ykc5eUxYTmxZMjl1WkdGeWVTazdYRzU5WEc1Y2JpNTFMV0puUkdGdVoyVnlJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0ZFMxaVp5MWpiMnh2Y2kxa1lXNW5aWElwTzF4dWZWeHVYRzR1ZFMxaVoxZGhjbTVwYm1jZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMTFMV0puTFdOdmJHOXlMWGRoY201cGJtY3BPMXh1ZlZ4dVhHNHVkUzFpWjFWdWMzVnlaU0I3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIWmhjaWd0TFhVdFltY3RZMjlzYjNJdGRXNXpkWEpsS1R0Y2JuMWNibHh1TG5VdFltZFRkV05qWlhOeklIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZG1GeUtDMHRkUzFpWnkxamIyeHZjaTF6ZFdOalpYTnpLVHRjYm4xY2JseHVMblV0WW1kSWFXZG9iR2xuYUhRZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMTFMV0puTFdOdmJHOXlMV2hwWjJoc2FXZG9kQ2s3WEc1OVhHNGlMQ0l2S2lwY2JpQXFJRVJwYzNCc1lYa3RkSGx3WlNCMWRHbHNhWFJwWlhOY2JpQXFMMXh1WEc0dWRTMWliRzlqYXlCN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOcklDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMV2hwWkdSbGJpQjdYRzRnSUdScGMzQnNZWGs2SUc1dmJtVWdJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMeW9xWEc0Z0tpQkRiMjF3YkdWMFpXeDVJSEpsYlc5MlpTQm1jbTl0SUhSb1pTQm1iRzkzSUdKMWRDQnNaV0YyWlNCaGRtRnBiR0ZpYkdVZ2RHOGdjMk55WldWdUlISmxZV1JsY25NdVhHNGdLaTljYmx4dUxuVXRhR2xrWkdWdVZtbHpkV0ZzYkhrZ2UxeHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdiM1psY21ac2IzYzZJR2hwWkdSbGJpQWhhVzF3YjNKMFlXNTBPMXh1SUNCM2FXUjBhRG9nTVhCNElDRnBiWEJ2Y25SaGJuUTdYRzRnSUdobGFXZG9kRG9nTVhCNElDRnBiWEJ2Y25SaGJuUTdYRzRnSUhCaFpHUnBibWM2SURBZ0lXbHRjRzl5ZEdGdWREdGNiaUFnWW05eVpHVnlPaUF3SUNGcGJYQnZjblJoYm5RN1hHNGdJR05zYVhBNklISmxZM1FvTVhCNExDQXhjSGdzSURGd2VDd2dNWEI0S1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXBibXhwYm1VZ2UxeHVJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVWdJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMeW9xWEc0Z0tpQXhMaUJHYVhnZ1ptOXlJRVpwY21WbWIzZ2dZblZuT2lCaGJpQnBiV0ZuWlNCemRIbHNaV1FnWUcxaGVDMTNhV1IwYURveE1EQWxZQ0IzYVhSb2FXNGdZVzVjYmlBcUlHbHViR2x1WlMxaWJHOWpheUIzYVd4c0lHUnBjM0JzWVhrZ1lYUWdhWFJ6SUdSbFptRjFiSFFnYzJsNlpTd2dZVzVrSUc1dmRDQnNhVzFwZENCcGRITWdkMmxrZEdnZ2RHOWNiaUFxSURFd01DVWdiMllnWVc0Z1lXNWpaWE4wY21Gc0lHTnZiblJoYVc1bGNpNWNiaUFxTDF4dVhHNHVkUzFwYm14cGJtVkNiRzlqYXlCN1hHNGdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXlBaGFXMXdiM0owWVc1ME8xeHVJQ0J0WVhndGQybGtkR2c2SURFd01DVTdJQzhxSURFZ0tpOWNibjFjYmx4dUxuVXRkR0ZpYkdVZ2UxeHVJQ0JrYVhOd2JHRjVPaUIwWVdKc1pTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVkUzEwWVdKc1pVTmxiR3dnZTF4dUlDQmthWE53YkdGNU9pQjBZV0pzWlMxalpXeHNJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTUxTFhSaFlteGxVbTkzSUh0Y2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdVdGNtOTNJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNGlMQ0pBYVcxd2IzSjBJQ2R6ZFdsMFkzTnpMWFYwYVd4ekxXUnBjM0JzWVhrbk8xeHVYRzQ2Y205dmRDQjdYRzRnSUMwdGRTMWthWE53YkdGNUxYSm9lWFJvYlRvZ01TNDFjbVZ0TzF4dWZWeHVYRzR2S2lwY2JpQXFJRkp2ZFc1a0lHSnZlRnh1SUNwY2JpQXFJRlZ6WlNCdlppQWxJR2hsY21VZ2QybHNiQ0JrYVhOMGIzSjBJR0p2ZUNCcFppQnBkQ0JwY3lCdWIzUWdjM0YxWVhKbFhHNGdLaTljYmx4dUxuVXRjbTkxYm1RZ2UxeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhNREF3Y0hnZ0lXbHRjRzl5ZEdGdWREdGNiaUFnYjNabGNtWnNiM2M2SUdocFpHUmxiaUFoYVcxd2IzSjBZVzUwTzF4dWZWeHVYRzR1ZFMxeWIzVnVaR2x6YUNCN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklHTmhiR01vZG1GeUtDMHRkUzFrYVhOd2JHRjVMWEpvZVhSb2JTa2dLaUF1TXpjMUtTQWhhVzF3YjNKMFlXNTBPMXh1SUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1SUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYSnZkVzVrWldRZ2UxeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQmpZV3hqS0haaGNpZ3RMWFV0WkdsemNHeGhlUzF5YUhsMGFHMHBJQ29nTGpjMUtTQWhhVzF3YjNKMFlXNTBPMXh1SUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1SUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmtCdFpXUnBZU0FvTFMxemJTMTJhV1YzY0c5eWRDa2dlMXh1SUNBdWRTMXpiUzFvYVdSa1pXNGdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVVnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1ZlZ4dVhHNUFiV1ZrYVdFZ0tDMHRiV1F0ZG1sbGQzQnZjblFwSUh0Y2JpQWdMblV0YldRdGFHbGtaR1Z1SUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bElDRnBiWEJ2Y25SaGJuUTdYRzRnSUgxY2JuMWNibHh1UUcxbFpHbGhJQ2d0TFd4MFpXMWtMWFpwWlhkd2IzSjBLU0I3WEc0Z0lDNTFMV3gwWlcxa0xXaHBaR1JsYmlCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNTlYRzVjYmx4dVFHMWxaR2xoSUNndExXZDBaVzFrTFhacFpYZHdiM0owS1NCN1hHNGdJQzUxTFdkMFpXMWtMV2hwWkdSbGJpQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzU5WEc1Y2JrQnRaV1JwWVNBb0xTMXNaeTEyYVdWM2NHOXlkQ2tnZTF4dUlDQXVkUzFzWnkxb2FXUmtaVzRnZTF4dUlDQWdJR1JwYzNCc1lYazZJRzV2Ym1VZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dWZWeHVYRzVBYldWa2FXRWdLQzB0WjNSbGJHY3RkbWxsZDNCdmNuUXBJSHRjYmlBZ0xuVXRaM1JsYkdjdGFHbGtaR1Z1SUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bElDRnBiWEJ2Y25SaGJuUTdYRzRnSUgxY2JuMWNiaUlzSWpweWIyOTBJSHRjYmlBZ0xTMTFMV3hwYzNRdGNtaDVkR2h0T2lBeExqVnlaVzA3WEc1OVhHNWNiaThxS2x4dUlDb2dSR1ZtYVc1cGRHbHZiaUJzYVhOMGMxeHVJQ3BjYmlBcUlGSmxiVzkyWlNCa1pXWmhkV3gwSUhOMGVXeHBibWRjYmlBcUwxeHVYRzR1ZFMxa2JGVnVjM1I1YkdWa0lENGdaR1FnZTF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nTUR0Y2JuMWNibHh1THlvcVhHNGdLaUJFYVhOd2JHRjVJR1JsWm1sdWFYUnBiMjRnYkdsemRITWdhVzVzYVc1bFhHNGdLaTljYmx4dUxuVXRaR3hKYm14cGJtVWdaSFFzWEc0dWRTMWtiRWx1YkdsdVpTQmtaQ0I3WEc0Z0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ2JXRnlaMmx1TFhKcFoyaDBPaUJqWVd4aktIWmhjaWd0TFhVdGJHbHpkQzF5YUhsMGFHMHBJQ29nTGpFeU5TazdYRzRnSUcxaGNtZHBiaTFzWldaME9pQXdPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGTjBZVzVrWVhKa0lHeHBjM1J6WEc0Z0tseHVJQ29nVW1WdGIzWmxJR1JsWm1GMWJIUWdjM1I1YkdsdVoxeHVJQ292WEc1Y2JpNTFMV3hwYzNSVmJuTjBlV3hsWkNCN1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklEQTdYRzRnSUhCaFpHUnBibWN0YkdWbWREb2dNRHRjYmlBZ2JHbHpkQzF6ZEhsc1pUb2dibTl1WlR0Y2JuMWNibHh1TG5VdGJHbHpkRlZ1YzNSNWJHVmtJRDRnYkdrZ2UxeHVJQ0J0WVhKbmFXNHRiR1ZtZERvZ01EdGNiaUFnYkdsemRDMXpkSGxzWlRvZ2JtOXVaVHRjYm4xY2JseHVMeW9xWEc0Z0tpQkVhWE53YkdGNUlHeHBjM1FnYVhSbGJYTWdhVzVzYVc1bFhHNGdLaTljYmx4dUxuVXRiR2x6ZEVsdWJHbHVaU0I3WEc0Z0lHMWhjbWRwYmkxc1pXWjBPaUJqWVd4aktIWmhjaWd0TFhVdGJHbHpkQzF5YUhsMGFHMHBJQ29nTFM0eE1qVXBPMXh1SUNCd1lXUmthVzVuTFd4bFpuUTZJREE3WEc0Z0lHeHBjM1F0YzNSNWJHVTZJRzV2Ym1VN1hHNTlYRzVjYmk1MUxXeHBjM1JKYm14cGJtVWdQaUJzYVNCN1hHNGdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ1kyRnNZeWgyWVhJb0xTMTFMV3hwYzNRdGNtaDVkR2h0S1NBcUlDNHhNalVwTzF4dUlDQndZV1JrYVc1bkxXeGxablE2SUdOaGJHTW9kbUZ5S0MwdGRTMXNhWE4wTFhKb2VYUm9iU2tnS2lBdU1USTFLVHRjYm4xY2JseHVMeW9xWEc0Z0tpQkVhWE53YkdGNUlHeHBjM1FnYVhSbGJYTWdhVzVzYVc1bFhHNGdLaTljYmx4dUxuVXRiR2x6ZEVodmNtbDZiMjUwWVd3Z2UxeHVJQ0F2S2lCU1pXMXZkbVVnWlhoMGNtRWdjM0JoWTJsdVp5QnBibXhwYm1VdFlteHZZMnNnWVdSa2N5QXFMMXh1SUNCbWIyNTBMWE5wZW1VNklEQTdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc1OVhHNWNiaTUxTFd4cGMzUkliM0pwZW05dWRHRnNJRDRnYkdrZ2UxeHVJQ0F2S2lCU1pYUjFjbTRnWm05dWRDQjBieUJ1YjNKdFlXd2djMmw2WlNBcUwxeHVJQ0JtYjI1MExYTnBlbVU2SURGeVpXMDdYRzRnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnZG1WeWRHbGpZV3d0WVd4cFoyNDZJSFJ2Y0R0Y2JuMWNiaUlzSWk1MUxYQnZjMEZpYzI5c2RYUmxJSHRjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1VHbHVjeUIwYnlCaGJHd2dZMjl5Ym1WeWN5QmllU0JrWldaaGRXeDBMaUJDZFhRZ2QyaGxiaUJoSUhkcFpIUm9JR0Z1WkM5dmNpQm9aV2xuYUhRZ1lYSmxYRzRnS2lCd2NtOTJhV1JsWkN3Z2RHaGxJR1ZzWlcxbGJuUWdkMmxzYkNCaVpTQmpaVzUwWlhKbFpDQnBiaUJwZEhNZ2JtVmhjbVZ6ZENCeVpXeGhkR2wyWld4NUxYQnZjMmwwYVc5dVpXUmNiaUFxSUdGdVkyVnpkRzl5TGx4dUlDb3ZYRzVjYmk1MUxYQnZjMEZpYzI5c2RYUmxRMlZ1ZEdWeUlIdGNiaUFnWW05MGRHOXRPaUF3SUNGcGJYQnZjblJoYm5RN1hHNGdJR3hsWm5RNklEQWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ2JXRnlaMmx1T2lCaGRYUnZJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpTQWhhVzF3YjNKMFlXNTBPMXh1SUNCeWFXZG9kRG9nTUNBaGFXMXdiM0owWVc1ME8xeHVJQ0IwYjNBNklEQWdJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMeW9xWEc0Z0tpQXhMaUJOWVd0bElITjFjbVVnWm1sNFpXUWdaV3hsYldWdWRITWdZWEpsSUhCeWIyMXZkR1ZrSUdsdWRHOGdZU0J1WlhjZ2JHRjVaWElzSUdadmNpQndaWEptYjNKdFlXNWpaVnh1SUNvZ0lDQWdjbVZoYzI5dWN5NWNiaUFxTDF4dVhHNHVkUzF3YjNOR2FYaGxaQ0I3WEc0Z0lIQnZjMmwwYVc5dU9pQm1hWGhsWkNBaGFXMXdiM0owWVc1ME8xeHVJQ0JpWVdOclptRmpaUzEyYVhOcFltbHNhWFI1T2lCb2FXUmtaVzQ3SUM4cUlERWdLaTljYm4xY2JseHVMblV0Y0c5elVtVnNZWFJwZG1VZ2UxeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVVnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGNHOXpVM1JoZEdsaklIdGNiaUFnY0c5emFYUnBiMjQ2SUhOMFlYUnBZeUFoYVcxd2IzSjBZVzUwTzF4dWZWeHVJaXdpUUdsdGNHOXlkQ0FuYzNWcGRHTnpjeTExZEdsc2N5MXdiM05wZEdsdmJpYzdYRzVjYmk1MUxYQnZjMEZpYzI5c2RYUmxUR1ZtZENCN1hHNGdJR0p2ZEhSdmJUb2dNQ0FoYVcxd2IzSjBZVzUwTzF4dUlDQnNaV1owT2lBd0lDRnBiWEJ2Y25SaGJuUTdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlNBaGFXMXdiM0owWVc1ME8xeHVJQ0IwYjNBNklEQWdJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMblV0Y0c5elFXSnpiMngxZEdWU2FXZG9kQ0I3WEc0Z0lHSnZkSFJ2YlRvZ01DQWhhVzF3YjNKMFlXNTBPMXh1SUNCeWFXZG9kRG9nTUNBaGFXMXdiM0owWVc1ME8xeHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdkRzl3T2lBd0lDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMWEJ2YzBObGJuUmxja05sYm5SbGNpQjdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdkRzl3T2lBMU1DVTdYRzRnSUd4bFpuUTZJRFV3SlR0Y2JpQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTFRVd0pTd2dMVFV3SlNrN1hHNTlYRzRpTENJdktpcGNiaUFxSUZOcGVtbHVaeUIxZEdsc2FYUnBaWE5jYmlBcUwxeHVYRzR2S2lCSmJuUnlhVzV6YVdNZ2QybGtkR2h6WEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLaXBjYmlBcUlFMWhhMlVnWVc0Z1pXeGxiV1Z1ZENCemFISnBibXNnZDNKaGNDQnBkSE1nWTI5dWRHVnVkQzVjYmlBcUwxeHVYRzR1ZFMxemFYcGxSbWwwTEZ4dUxuVXRjMmw2WlVacGRFRnNkQ0I3WEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5ySUNGcGJYQnZjblJoYm5RN1hHNGdJR1pzYjJGME9pQnNaV1owSUNGcGJYQnZjblJoYm5RN1hHNGdJSGRwWkhSb09pQmhkWFJ2SUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTnBlbVZHYVhSQmJIUWdlMXh1SUNCbWJHOWhkRG9nY21sbmFIUWdJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMeW9xWEc0Z0tpQk5ZV3RsSUdGdUlHVnNaVzFsYm5RZ1ptbHNiQ0IwYUdVZ2NtVnRZV2x1YVc1bklITndZV05sTGx4dUlDb2dUaTVDTGlCVWFHbHpJSGRwYkd3Z2FHbGtaU0J2ZG1WeVpteHZkeTVjYmlBcUwxeHVYRzR1ZFMxemFYcGxSbWxzYkNCN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOcklDRnBiWEJ2Y25SaGJuUTdYRzRnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzRnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdkMmxrZEdnNklHRjFkRzhnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1THlvcVhHNGdLaUJCYmlCaGJIUmxjbTVoZEdsMlpTQnRaWFJvYjJRZ2RHOGdiV0ZyWlNCaGJpQmxiR1Z0Wlc1MElHWnBiR3dnZEdobElISmxiV0ZwYm1sdVp5QnpjR0ZqWlM1Y2JpQXFJRTR1UWk0Z1JHOGdibTkwSUhWelpTQnBaaUJqYUdsc1pDQmxiR1Z0Wlc1MGN5QnRhV2RvZENCaVpTQjNhV1JsY2lCMGFHRnVJSFJvWlNCeVpXMWhhVzVwYm1jZ2MzQmhZMlV1WEc0Z0tpQkpiaUJEYUhKdmJXVXNJRk5oWm1GeWFTd2dZVzVrSUVacGNtVm1iM2dnYVhRZ2NtVnpkV3gwY3lCcGJpQjFibVJsYzJseVpXUWdiR0Y1YjNWMExseHVJQ292WEc1Y2JpNTFMWE5wZW1WR2FXeHNRV3gwSUh0Y2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdVdFkyVnNiQ0FoYVcxd2IzSjBZVzUwTzF4dUlDQnRZWGd0ZDJsa2RHZzZJREV3TUNVZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZDJsa2RHZzZJREV3TURBd2NIZ2dJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMeW9xWEc0Z0tpQk5ZV3RsSUdGdUlHVnNaVzFsYm5RZ2RHaGxJSGRwWkhSb0lHOW1JR2wwY3lCd1lYSmxiblF1WEc0Z0tpOWNibHh1TG5VdGMybDZaVVoxYkd3Z2UxeHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NElDRnBiWEJ2Y25SaGJuUTdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIZHBaSFJvT2lBeE1EQWxJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaThxSUZCeWIzQnZjblJwYjI1aGJDQjNhV1IwYUhOY2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaThxS2x4dUlDb2dVM0JsWTJsbWVTQjBhR1VnY0hKdmNHOXlkR2x2Ym1Gc0lIZHBaSFJvSUc5bUlHRnVJRzlpYW1WamRDNWNiaUFxSUVsdWRHVnVkR2x2Ym1Gc0lISmxaSFZ1WkdGdVkza2dZblZwYkdRZ2FXNTBieUJsWVdOb0lITmxkQ0J2WmlCMWJtbDBJR05zWVhOelpYTXVYRzRnS2lCVGRYQndiM0owY3pvZ01pd2dNeXdnTkN3Z05Td2dOaXdnT0N3Z01UQXNJREV5SUhCaGNuUmNiaUFxTDF4dVhHNHVkUzF6YVhwbE1XOW1NVElnZTF4dUlDQjNhV1IwYURvZ1kyRnNZeWd4TURBbElDb2dNU0F2SURFeUtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVkUzF6YVhwbE1XOW1NVEFnZTF4dUlDQjNhV1IwYURvZ01UQWxJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTUxTFhOcGVtVXhiMlk0SUh0Y2JpQWdkMmxrZEdnNklERXlMalVsSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTnBlbVV4YjJZMkxGeHVMblV0YzJsNlpUSnZaakV5SUh0Y2JpQWdkMmxrZEdnNklHTmhiR01vTVRBd0pTQXFJREVnTHlBMktTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVkUzF6YVhwbE1XOW1OU3hjYmk1MUxYTnBlbVV5YjJZeE1DQjdYRzRnSUhkcFpIUm9PaUF5TUNVZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMmw2WlRGdlpqUXNYRzR1ZFMxemFYcGxNbTltT0N4Y2JpNTFMWE5wZW1VemIyWXhNaUI3WEc0Z0lIZHBaSFJvT2lBeU5TVWdJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMblV0YzJsNlpUTnZaakV3SUh0Y2JpQWdkMmxrZEdnNklETXdKU0FoYVcxd2IzSjBZVzUwTzF4dWZWeHVYRzR1ZFMxemFYcGxNVzltTXl4Y2JpNTFMWE5wZW1VeWIyWTJMRnh1TG5VdGMybDZaVFJ2WmpFeUlIdGNiaUFnZDJsa2RHZzZJR05oYkdNb01UQXdKU0FxSURFZ0x5QXpLU0FoYVcxd2IzSjBZVzUwTzF4dWZWeHVYRzR1ZFMxemFYcGxNMjltT0NCN1hHNGdJSGRwWkhSb09pQXpOeTQxSlNBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXphWHBsTW05bU5TeGNiaTUxTFhOcGVtVTBiMll4TUNCN1hHNGdJSGRwWkhSb09pQTBNQ1VnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMybDZaVFZ2WmpFeUlIdGNiaUFnZDJsa2RHZzZJR05oYkdNb01UQXdKU0FxSURVZ0x5QXhNaWtnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMybDZaVEZ2WmpJc1hHNHVkUzF6YVhwbE1tOW1OQ3hjYmk1MUxYTnBlbVV6YjJZMkxGeHVMblV0YzJsNlpUUnZaamdzWEc0dWRTMXphWHBsTlc5bU1UQXNYRzR1ZFMxemFYcGxObTltTVRJZ2UxeHVJQ0IzYVdSMGFEb2dOVEFsSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTnBlbVUzYjJZeE1pQjdYRzRnSUhkcFpIUm9PaUJqWVd4aktERXdNQ1VnS2lBM0lDOGdNVElwSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTnBlbVV6YjJZMUxGeHVMblV0YzJsNlpUWnZaakV3SUh0Y2JpQWdkMmxrZEdnNklEWXdKU0FoYVcxd2IzSjBZVzUwTzF4dWZWeHVYRzR1ZFMxemFYcGxOVzltT0NCN1hHNGdJSGRwWkhSb09pQTJNaTQxSlNBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXphWHBsTW05bU15eGNiaTUxTFhOcGVtVTBiMlkyTEZ4dUxuVXRjMmw2WlRodlpqRXlJSHRjYmlBZ2QybGtkR2c2SUdOaGJHTW9NVEF3SlNBcUlESWdMeUF6S1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXphWHBsTjI5bU1UQWdlMXh1SUNCM2FXUjBhRG9nTnpBbElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMWE5wZW1VemIyWTBMRnh1TG5VdGMybDZaVFp2Wmpnc1hHNHVkUzF6YVhwbE9XOW1NVElnZTF4dUlDQjNhV1IwYURvZ056VWxJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTUxTFhOcGVtVTBiMlkxTEZ4dUxuVXRjMmw2WlRodlpqRXdJSHRjYmlBZ2QybGtkR2c2SURnd0pTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVkUzF6YVhwbE5XOW1OaXhjYmk1MUxYTnBlbVV4TUc5bU1USWdlMXh1SUNCM2FXUjBhRG9nWTJGc1l5Z3hNREFsSUNvZ05TQXZJRFlwSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTnBlbVUzYjJZNElIdGNiaUFnZDJsa2RHZzZJRGczTGpVbElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMWE5wZW1VNWIyWXhNQ0I3WEc0Z0lIZHBaSFJvT2lBNU1DVWdJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMblV0YzJsNlpURXhiMll4TWlCN1hHNGdJSGRwWkhSb09pQmpZV3hqS0RFd01DVWdLaUF4TVNBdklERXlLU0FoYVcxd2IzSjBZVzUwTzF4dWZWeHVJaXdpTHlvcVhHNGdLaUJUYVhwbE9pQmljbVZoYTNCdmFXNTBJREVnS0hOdFlXeHNLVnh1SUNvdlhHNWNia0J0WldScFlTQW9MUzF6YlMxMmFXVjNjRzl5ZENrZ2UxeHVYRzRnSUM4cUtseHVJQ0FnS2lCTllXdGxJR0Z1SUdWc1pXMWxiblFnYzJoeWFXNXJJSGR5WVhBZ2FYUnpJR052Ym5SbGJuUXVYRzRnSUNBcUwxeHVYRzRnSUM1MUxYTnRMWE5wZW1WR2FYUXNYRzRnSUM1MUxYTnRMWE5wZW1WR2FYUkJiSFFnZTF4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOcklDRnBiWEJ2Y25SaGJuUTdYRzRnSUNBZ1pteHZZWFE2SUd4bFpuUWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ0lDQjNhV1IwYURvZ1lYVjBieUFoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ0xuVXRjMjB0YzJsNlpVWnBkRUZzZENCN1hHNGdJQ0FnWm14dllYUTZJSEpwWjJoMElDRnBiWEJ2Y25SaGJuUTdYRzRnSUgxY2JseHVJQ0F2S2lwY2JpQWdJQ29nVFdGclpTQmhiaUJsYkdWdFpXNTBJR1pwYkd3Z2RHaGxJSEpsYldGcGJtbHVaeUJ6Y0dGalpTNWNiaUFnSUNvZ1RpNUNMaUJVYUdseklIZHBiR3dnYUdsa1pTQnZkbVZ5Wm14dmR5NWNiaUFnSUNvdlhHNWNiaUFnTG5VdGMyMHRjMmw2WlVacGJHd2dlMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5ySUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxiaUFoYVcxd2IzSjBZVzUwTzF4dUlDQWdJSGRwWkhSb09pQmhkWFJ2SUNGcGJYQnZjblJoYm5RN1hHNGdJSDFjYmx4dUlDQXZLaXBjYmlBZ0lDb2dRVzRnWVd4MFpYSnVZWFJwZG1VZ2JXVjBhRzlrSUhSdklHMWhhMlVnWVc0Z1pXeGxiV1Z1ZENCbWFXeHNJSFJvWlNCeVpXMWhhVzVwYm1jZ2MzQmhZMlV1WEc0Z0lDQXFJRTR1UWk0Z1JHOGdibTkwSUhWelpTQnBaaUJqYUdsc1pDQmxiR1Z0Wlc1MGN5QnRhV2RvZENCaVpTQjNhV1JsY2lCMGFHRnVJSFJvWlNCeVpXMWhhVzVwYm1jZ2MzQmhZMlV1WEc0Z0lDQXFJRWx1SUVOb2NtOXRaU3dnVTJGbVlYSnBMQ0JoYm1RZ1JtbHlaV1p2ZUNCcGRDQnlaWE4xYkhSeklHbHVJSFZ1WkdWemFYSmxaQ0JzWVhsdmRYUXVYRzRnSUNBcUwxeHVYRzRnSUM1MUxYTnRMWE5wZW1WR2FXeHNRV3gwSUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUIwWVdKc1pTMWpaV3hzSUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnYldGNExYZHBaSFJvT2lBeE1EQWxJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdkMmxrZEdnNklERXdNREF3Y0hnZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzhxS2x4dUlDQWdLaUJOWVd0bElHRnVJR1ZzWlcxbGJuUWdkR2hsSUhkcFpIUm9JRzltSUdsMGN5QndZWEpsYm5RdVhHNGdJQ0FxTDF4dVhHNGdJQzUxTFhOdExYTnBlbVZHZFd4c0lIdGNiaUFnSUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzZ0lXbHRjRzl5ZEdGdWREdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNiaUFnTHlvZ1VISnZjRzl5ZEdsdmJtRnNJSGRwWkhSb2N6b2dZbkpsWVd0d2IybHVkQ0F4SUNoemJXRnNiQ2xjYmlBZ0lDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVJQ0F2S2lwY2JpQWdJQ29nVTNCbFkybG1lU0IwYUdVZ2NISnZjRzl5ZEdsdmJtRnNJSGRwWkhSb0lHOW1JR0Z1SUc5aWFtVmpkQzVjYmlBZ0lDb2dTVzUwWlc1MGFXOXVZV3dnY21Wa2RXNWtZVzVqZVNCaWRXbHNaQ0JwYm5SdklHVmhZMmdnYzJWMElHOW1JSFZ1YVhRZ1kyeGhjM05sY3k1Y2JpQWdJQ29nVTNWd2NHOXlkSE02SURJc0lETXNJRFFzSURVc0lEWXNJRGdzSURFd0xDQXhNaUJ3WVhKMFhHNGdJQ0FxTDF4dVhHNGdJQzUxTFhOdExYTnBlbVV4YjJZeE1pQjdYRzRnSUNBZ2QybGtkR2c2SUdOaGJHTW9NVEF3SlNBcUlERWdMeUF4TWlrZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzUxTFhOdExYTnBlbVV4YjJZeE1DQjdYRzRnSUNBZ2QybGtkR2c2SURFd0pTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNiaUFnTG5VdGMyMHRjMmw2WlRGdlpqZ2dlMXh1SUNBZ0lIZHBaSFJvT2lBeE1pNDFKU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ0xuVXRjMjB0YzJsNlpURnZaallzWEc0Z0lDNTFMWE50TFhOcGVtVXliMll4TWlCN1hHNGdJQ0FnZDJsa2RHZzZJR05oYkdNb01UQXdKU0FxSURFZ0x5QTJLU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ0xuVXRjMjB0YzJsNlpURnZaalVzWEc0Z0lDNTFMWE50TFhOcGVtVXliMll4TUNCN1hHNGdJQ0FnZDJsa2RHZzZJREl3SlNBaGFXMXdiM0owWVc1ME8xeHVJQ0I5WEc1Y2JpQWdMblV0YzIwdGMybDZaVEZ2WmpRc1hHNGdJQzUxTFhOdExYTnBlbVV5YjJZNExGeHVJQ0F1ZFMxemJTMXphWHBsTTI5bU1USWdlMXh1SUNBZ0lIZHBaSFJvT2lBeU5TVWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ2ZWeHVYRzRnSUM1MUxYTnRMWE5wZW1VemIyWXhNQ0I3WEc0Z0lDQWdkMmxrZEdnNklETXdKU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ0xuVXRjMjB0YzJsNlpURnZaak1zWEc0Z0lDNTFMWE50TFhOcGVtVXliMlkyTEZ4dUlDQXVkUzF6YlMxemFYcGxORzltTVRJZ2UxeHVJQ0FnSUhkcFpIUm9PaUJqWVd4aktERXdNQ1VnS2lBeElDOGdNeWtnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lDNTFMWE50TFhOcGVtVXpiMlk0SUh0Y2JpQWdJQ0IzYVdSMGFEb2dNemN1TlNVZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzUxTFhOdExYTnBlbVV5YjJZMUxGeHVJQ0F1ZFMxemJTMXphWHBsTkc5bU1UQWdlMXh1SUNBZ0lIZHBaSFJvT2lBME1DVWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ2ZWeHVYRzRnSUM1MUxYTnRMWE5wZW1VMWIyWXhNaUI3WEc0Z0lDQWdkMmxrZEdnNklHTmhiR01vTVRBd0pTQXFJRFVnTHlBeE1pa2dJV2x0Y0c5eWRHRnVkRHRjYmlBZ2ZWeHVYRzRnSUM1MUxYTnRMWE5wZW1VeGIyWXlMRnh1SUNBdWRTMXpiUzF6YVhwbE1tOW1OQ3hjYmlBZ0xuVXRjMjB0YzJsNlpUTnZaallzWEc0Z0lDNTFMWE50TFhOcGVtVTBiMlk0TEZ4dUlDQXVkUzF6YlMxemFYcGxOVzltTVRBc1hHNGdJQzUxTFhOdExYTnBlbVUyYjJZeE1pQjdYRzRnSUNBZ2QybGtkR2c2SURVd0pTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNiaUFnTG5VdGMyMHRjMmw2WlRkdlpqRXlJSHRjYmlBZ0lDQjNhV1IwYURvZ1kyRnNZeWd4TURBbElDb2dOeUF2SURFeUtTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNiaUFnTG5VdGMyMHRjMmw2WlROdlpqVXNYRzRnSUM1MUxYTnRMWE5wZW1VMmIyWXhNQ0I3WEc0Z0lDQWdkMmxrZEdnNklEWXdKU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ0xuVXRjMjB0YzJsNlpUVnZaamdnZTF4dUlDQWdJSGRwWkhSb09pQTJNaTQxSlNBaGFXMXdiM0owWVc1ME8xeHVJQ0I5WEc1Y2JpQWdMblV0YzIwdGMybDZaVEp2WmpNc1hHNGdJQzUxTFhOdExYTnBlbVUwYjJZMkxGeHVJQ0F1ZFMxemJTMXphWHBsT0c5bU1USWdlMXh1SUNBZ0lIZHBaSFJvT2lCallXeGpLREV3TUNVZ0tpQXlJQzhnTXlrZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzUxTFhOdExYTnBlbVUzYjJZeE1DQjdYRzRnSUNBZ2QybGtkR2c2SURjd0pTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNiaUFnTG5VdGMyMHRjMmw2WlROdlpqUXNYRzRnSUM1MUxYTnRMWE5wZW1VMmIyWTRMRnh1SUNBdWRTMXpiUzF6YVhwbE9XOW1NVElnZTF4dUlDQWdJSGRwWkhSb09pQTNOU1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lDNTFMWE50TFhOcGVtVTBiMlkxTEZ4dUlDQXVkUzF6YlMxemFYcGxPRzltTVRBZ2UxeHVJQ0FnSUhkcFpIUm9PaUE0TUNVZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzUxTFhOdExYTnBlbVUxYjJZMkxGeHVJQ0F1ZFMxemJTMXphWHBsTVRCdlpqRXlJSHRjYmlBZ0lDQjNhV1IwYURvZ1kyRnNZeWd4TURBbElDb2dOU0F2SURZcElDRnBiWEJ2Y25SaGJuUTdYRzRnSUgxY2JseHVJQ0F1ZFMxemJTMXphWHBsTjI5bU9DQjdYRzRnSUNBZ2QybGtkR2c2SURnM0xqVWxJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIMWNibHh1SUNBdWRTMXpiUzF6YVhwbE9XOW1NVEFnZTF4dUlDQWdJSGRwWkhSb09pQTVNQ1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lDNTFMWE50TFhOcGVtVXhNVzltTVRJZ2UxeHVJQ0FnSUhkcFpIUm9PaUJqWVd4aktERXdNQ1VnS2lBeE1TQXZJREV5S1NBaGFXMXdiM0owWVc1ME8xeHVJQ0I5WEc1Y2JuMWNiaUlzSWk4cUtseHVJQ29nVTJsNlpUb2dZbkpsWVd0d2IybHVkQ0F5SUNodFpXUnBkVzBwWEc0Z0tpOWNibHh1UUcxbFpHbGhJQ2d0TFcxa0xYWnBaWGR3YjNKMEtTQjdYRzVjYmlBZ0x5b3FYRzRnSUNBcUlFMWhhMlVnWVc0Z1pXeGxiV1Z1ZENCemFISnBibXNnZDNKaGNDQnBkSE1nWTI5dWRHVnVkQzVjYmlBZ0lDb3ZYRzVjYmlBZ0xuVXRiV1F0YzJsNlpVWnBkQ3hjYmlBZ0xuVXRiV1F0YzJsNlpVWnBkRUZzZENCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyc2dJV2x0Y0c5eWRHRnVkRHRjYmlBZ0lDQm1iRzloZERvZ2JHVm1kQ0FoYVcxd2IzSjBZVzUwTzF4dUlDQWdJSGRwWkhSb09pQmhkWFJ2SUNGcGJYQnZjblJoYm5RN1hHNGdJSDFjYmx4dUlDQXVkUzF0WkMxemFYcGxSbWwwUVd4MElIdGNiaUFnSUNCbWJHOWhkRG9nY21sbmFIUWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ2ZWeHVYRzRnSUM4cUtseHVJQ0FnS2lCTllXdGxJR0Z1SUdWc1pXMWxiblFnWm1sc2JDQjBhR1VnY21WdFlXbHVhVzVuSUhOd1lXTmxMbHh1SUNBZ0tpQk9Ma0l1SUZSb2FYTWdkMmxzYkNCb2FXUmxJRzkyWlhKbWJHOTNMbHh1SUNBZ0tpOWNibHh1SUNBdWRTMXRaQzF6YVhwbFJtbHNiQ0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzZ0lXbHRjRzl5ZEdGdWREdGNiaUFnSUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1SUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnZDJsa2RHZzZJR0YxZEc4Z0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzhxS2x4dUlDQWdLaUJCYmlCaGJIUmxjbTVoZEdsMlpTQnRaWFJvYjJRZ2RHOGdiV0ZyWlNCaGJpQmxiR1Z0Wlc1MElHWnBiR3dnZEdobElISmxiV0ZwYm1sdVp5QnpjR0ZqWlM1Y2JpQWdJQ29nVGk1Q0xpQkVieUJ1YjNRZ2RYTmxJR2xtSUdOb2FXeGtJR1ZzWlcxbGJuUnpJRzFwWjJoMElHSmxJSGRwWkdWeUlIUm9ZVzRnZEdobElISmxiV0ZwYm1sdVp5QnpjR0ZqWlM1Y2JpQWdJQ29nU1c0Z1EyaHliMjFsTENCVFlXWmhjbWtzSUdGdVpDQkdhWEpsWm05NElHbDBJSEpsYzNWc2RITWdhVzRnZFc1a1pYTnBjbVZrSUd4aGVXOTFkQzVjYmlBZ0lDb3ZYRzVjYmlBZ0xuVXRiV1F0YzJsNlpVWnBiR3hCYkhRZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUhSaFlteGxMV05sYkd3Z0lXbHRjRzl5ZEdGdWREdGNiaUFnSUNCdFlYZ3RkMmxrZEdnNklERXdNQ1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3TURCd2VDQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNiaUFnTHlvcVhHNGdJQ0FxSUUxaGEyVWdZVzRnWld4bGJXVnVkQ0IwYUdVZ2QybGtkR2dnYjJZZ2FYUnpJSEJoY21WdWRDNWNiaUFnSUNvdlhHNWNiaUFnTG5VdGJXUXRjMmw2WlVaMWJHd2dlMXh1SUNBZ0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2dnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF5QWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIMWNibHh1SUNBdktpQlFjbTl3YjNKMGFXOXVZV3dnZDJsa2RHaHpPaUJpY21WaGEzQnZhVzUwSURJZ0tHMWxaR2wxYlNsY2JpQWdJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1SUNBdktpcGNiaUFnSUNvZ1UzQmxZMmxtZVNCMGFHVWdjSEp2Y0c5eWRHbHZibUZzSUhkcFpIUm9JRzltSUdGdUlHOWlhbVZqZEM1Y2JpQWdJQ29nU1c1MFpXNTBhVzl1WVd3Z2NtVmtkVzVrWVc1amVTQmlkV2xzWkNCcGJuUnZJR1ZoWTJnZ2MyVjBJRzltSUhWdWFYUWdZMnhoYzNObGN5NWNiaUFnSUNvZ1UzVndjRzl5ZEhNNklESXNJRE1zSURRc0lEVXNJRFlzSURnc0lERXdMQ0F4TWlCd1lYSjBYRzRnSUNBcUwxeHVYRzRnSUM1MUxXMWtMWE5wZW1VeGIyWXhNaUI3WEc0Z0lDQWdkMmxrZEdnNklHTmhiR01vTVRBd0pTQXFJREVnTHlBeE1pa2dJV2x0Y0c5eWRHRnVkRHRjYmlBZ2ZWeHVYRzRnSUM1MUxXMWtMWE5wZW1VeGIyWXhNQ0I3WEc0Z0lDQWdkMmxrZEdnNklERXdKU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ0xuVXRiV1F0YzJsNlpURnZaamdnZTF4dUlDQWdJSGRwWkhSb09pQXhNaTQxSlNBaGFXMXdiM0owWVc1ME8xeHVJQ0I5WEc1Y2JpQWdMblV0YldRdGMybDZaVEZ2WmpZc1hHNGdJQzUxTFcxa0xYTnBlbVV5YjJZeE1pQjdYRzRnSUNBZ2QybGtkR2c2SUdOaGJHTW9NVEF3SlNBcUlERWdMeUEyS1NBaGFXMXdiM0owWVc1ME8xeHVJQ0I5WEc1Y2JpQWdMblV0YldRdGMybDZaVEZ2WmpVc1hHNGdJQzUxTFcxa0xYTnBlbVV5YjJZeE1DQjdYRzRnSUNBZ2QybGtkR2c2SURJd0pTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNiaUFnTG5VdGJXUXRjMmw2WlRGdlpqUXNYRzRnSUM1MUxXMWtMWE5wZW1VeWIyWTRMRnh1SUNBdWRTMXRaQzF6YVhwbE0yOW1NVElnZTF4dUlDQWdJSGRwWkhSb09pQXlOU1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lDNTFMVzFrTFhOcGVtVXpiMll4TUNCN1hHNGdJQ0FnZDJsa2RHZzZJRE13SlNBaGFXMXdiM0owWVc1ME8xeHVJQ0I5WEc1Y2JpQWdMblV0YldRdGMybDZaVEZ2WmpNc1hHNGdJQzUxTFcxa0xYTnBlbVV5YjJZMkxGeHVJQ0F1ZFMxdFpDMXphWHBsTkc5bU1USWdlMXh1SUNBZ0lIZHBaSFJvT2lCallXeGpLREV3TUNVZ0tpQXhJQzhnTXlrZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzUxTFcxa0xYTnBlbVV6YjJZNElIdGNiaUFnSUNCM2FXUjBhRG9nTXpjdU5TVWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ2ZWeHVYRzRnSUM1MUxXMWtMWE5wZW1VeWIyWTFMRnh1SUNBdWRTMXRaQzF6YVhwbE5HOW1NVEFnZTF4dUlDQWdJSGRwWkhSb09pQTBNQ1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lDNTFMVzFrTFhOcGVtVTFiMll4TWlCN1hHNGdJQ0FnZDJsa2RHZzZJR05oYkdNb01UQXdKU0FxSURVZ0x5QXhNaWtnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lDNTFMVzFrTFhOcGVtVXhiMll5TEZ4dUlDQXVkUzF0WkMxemFYcGxNbTltTkN4Y2JpQWdMblV0YldRdGMybDZaVE52WmpZc1hHNGdJQzUxTFcxa0xYTnBlbVUwYjJZNExGeHVJQ0F1ZFMxdFpDMXphWHBsTlc5bU1UQXNYRzRnSUM1MUxXMWtMWE5wZW1VMmIyWXhNaUI3WEc0Z0lDQWdkMmxrZEdnNklEVXdKU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ0xuVXRiV1F0YzJsNlpUZHZaakV5SUh0Y2JpQWdJQ0IzYVdSMGFEb2dZMkZzWXlneE1EQWxJQ29nTnlBdklERXlLU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ0xuVXRiV1F0YzJsNlpUTnZaalVzWEc0Z0lDNTFMVzFrTFhOcGVtVTJiMll4TUNCN1hHNGdJQ0FnZDJsa2RHZzZJRFl3SlNBaGFXMXdiM0owWVc1ME8xeHVJQ0I5WEc1Y2JpQWdMblV0YldRdGMybDZaVFZ2WmpnZ2UxeHVJQ0FnSUhkcFpIUm9PaUEyTWk0MUpTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNiaUFnTG5VdGJXUXRjMmw2WlRKdlpqTXNYRzRnSUM1MUxXMWtMWE5wZW1VMGIyWTJMRnh1SUNBdWRTMXRaQzF6YVhwbE9HOW1NVElnZTF4dUlDQWdJSGRwWkhSb09pQmpZV3hqS0RFd01DVWdLaUF5SUM4Z015a2dJV2x0Y0c5eWRHRnVkRHRjYmlBZ2ZWeHVYRzRnSUM1MUxXMWtMWE5wZW1VM2IyWXhNQ0I3WEc0Z0lDQWdkMmxrZEdnNklEY3dKU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ0xuVXRiV1F0YzJsNlpUTnZaalFzWEc0Z0lDNTFMVzFrTFhOcGVtVTJiMlk0TEZ4dUlDQXVkUzF0WkMxemFYcGxPVzltTVRJZ2UxeHVJQ0FnSUhkcFpIUm9PaUEzTlNVZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzUxTFcxa0xYTnBlbVUwYjJZMUxGeHVJQ0F1ZFMxdFpDMXphWHBsT0c5bU1UQWdlMXh1SUNBZ0lIZHBaSFJvT2lBNE1DVWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ2ZWeHVYRzRnSUM1MUxXMWtMWE5wZW1VMWIyWTJMRnh1SUNBdWRTMXRaQzF6YVhwbE1UQnZaakV5SUh0Y2JpQWdJQ0IzYVdSMGFEb2dZMkZzWXlneE1EQWxJQ29nTlNBdklEWXBJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIMWNibHh1SUNBdWRTMXRaQzF6YVhwbE4yOW1PQ0I3WEc0Z0lDQWdkMmxrZEdnNklEZzNMalVsSUNGcGJYQnZjblJoYm5RN1hHNGdJSDFjYmx4dUlDQXVkUzF0WkMxemFYcGxPVzltTVRBZ2UxeHVJQ0FnSUhkcFpIUm9PaUE1TUNVZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzUxTFcxa0xYTnBlbVV4TVc5bU1USWdlMXh1SUNBZ0lIZHBaSFJvT2lCallXeGpLREV3TUNVZ0tpQXhNU0F2SURFeUtTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNibjFjYmlJc0lpOHFLbHh1SUNvZ1UybDZaVG9nWW5KbFlXdHdiMmx1ZENBeklDaHNZWEpuWlNsY2JpQXFMMXh1WEc1QWJXVmthV0VnS0MwdGJHY3RkbWxsZDNCdmNuUXBJSHRjYmx4dUlDQXZLaXBjYmlBZ0lDb2dUV0ZyWlNCaGJpQmxiR1Z0Wlc1MElITm9jbWx1YXlCM2NtRndJR2wwY3lCamIyNTBaVzUwTGx4dUlDQWdLaTljYmx4dUlDQXVkUzFzWnkxemFYcGxSbWwwTEZ4dUlDQXVkUzFzWnkxemFYcGxSbWwwUVd4MElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWpheUFoYVcxd2IzSjBZVzUwTzF4dUlDQWdJR1pzYjJGME9pQnNaV1owSUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnZDJsa2RHZzZJR0YxZEc4Z0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzUxTFd4bkxYTnBlbVZHYVhSQmJIUWdlMXh1SUNBZ0lHWnNiMkYwT2lCeWFXZG9kQ0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ0x5b3FYRzRnSUNBcUlFMWhhMlVnWVc0Z1pXeGxiV1Z1ZENCbWFXeHNJSFJvWlNCeVpXMWhhVzVwYm1jZ2MzQmhZMlV1WEc0Z0lDQXFJRTR1UWk0Z1ZHaHBjeUIzYVd4c0lHaHBaR1VnYjNabGNtWnNiM2N1WEc0Z0lDQXFMMXh1WEc0Z0lDNTFMV3huTFhOcGVtVkdhV3hzSUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF5QWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lHOTJaWEptYkc5M09pQm9hV1JrWlc0Z0lXbHRjRzl5ZEdGdWREdGNiaUFnSUNCM2FXUjBhRG9nWVhWMGJ5QWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNiaUFnTHlvcVhHNGdJQ0FxSUVGdUlHRnNkR1Z5Ym1GMGFYWmxJRzFsZEdodlpDQjBieUJ0WVd0bElHRnVJR1ZzWlcxbGJuUWdabWxzYkNCMGFHVWdjbVZ0WVdsdWFXNW5JSE53WVdObExseHVJQ0FnS2lCT0xrSXVJRVJ2SUc1dmRDQjFjMlVnYVdZZ1kyaHBiR1FnWld4bGJXVnVkSE1nYldsbmFIUWdZbVVnZDJsa1pYSWdkR2hoYmlCMGFHVWdjbVZ0WVdsdWFXNW5JSE53WVdObExseHVJQ0FnS2lCSmJpQkRhSEp2YldVc0lGTmhabUZ5YVN3Z1lXNWtJRVpwY21WbWIzZ2dhWFFnY21WemRXeDBjeUJwYmlCMWJtUmxjMmx5WldRZ2JHRjViM1YwTGx4dUlDQWdLaTljYmx4dUlDQXVkUzFzWnkxemFYcGxSbWxzYkVGc2RDQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2RHRmliR1V0WTJWc2JDQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lHMWhlQzEzYVdSMGFEb2dNVEF3SlNBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUhkcFpIUm9PaUF4TURBd01IQjRJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIMWNibHh1SUNBdktpcGNiaUFnSUNvZ1RXRnJaU0JoYmlCbGJHVnRaVzUwSUhSb1pTQjNhV1IwYUNCdlppQnBkSE1nY0dGeVpXNTBMbHh1SUNBZ0tpOWNibHh1SUNBdWRTMXNaeTF6YVhwbFJuVnNiQ0I3WEc0Z0lDQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUNBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lDOHFJRkJ5YjNCdmNuUnBiMjVoYkNCM2FXUjBhSE02SUdKeVpXRnJjRzlwYm5RZ015QW9iR0Z5WjJVcFhHNGdJQ0FnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmlBZ0x5b3FYRzRnSUNBcUlGTndaV05wWm5rZ2RHaGxJSEJ5YjNCdmNuUnBiMjVoYkNCM2FXUjBhQ0J2WmlCaGJpQnZZbXBsWTNRdVhHNGdJQ0FxSUVsdWRHVnVkR2x2Ym1Gc0lISmxaSFZ1WkdGdVkza2dZblZwYkdRZ2FXNTBieUJsWVdOb0lITmxkQ0J2WmlCMWJtbDBJR05zWVhOelpYTXVYRzRnSUNBcUlGTjFjSEJ2Y25Sek9pQXlMQ0F6TENBMExDQTFMQ0EyTENBNExDQXhNQ3dnTVRJZ2NHRnlkRnh1SUNBZ0tpOWNibHh1SUNBdWRTMXNaeTF6YVhwbE1XOW1NVElnZTF4dUlDQWdJSGRwWkhSb09pQmpZV3hqS0RFd01DVWdLaUF4SUM4Z01USXBJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIMWNibHh1SUNBdWRTMXNaeTF6YVhwbE1XOW1NVEFnZTF4dUlDQWdJSGRwWkhSb09pQXhNQ1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lDNTFMV3huTFhOcGVtVXhiMlk0SUh0Y2JpQWdJQ0IzYVdSMGFEb2dNVEl1TlNVZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzUxTFd4bkxYTnBlbVV4YjJZMkxGeHVJQ0F1ZFMxc1p5MXphWHBsTW05bU1USWdlMXh1SUNBZ0lIZHBaSFJvT2lCallXeGpLREV3TUNVZ0tpQXhJQzhnTmlrZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzUxTFd4bkxYTnBlbVV4YjJZMUxGeHVJQ0F1ZFMxc1p5MXphWHBsTW05bU1UQWdlMXh1SUNBZ0lIZHBaSFJvT2lBeU1DVWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ2ZWeHVYRzRnSUM1MUxXeG5MWE5wZW1VeGIyWTBMRnh1SUNBdWRTMXNaeTF6YVhwbE1tOW1PQ3hjYmlBZ0xuVXRiR2N0YzJsNlpUTnZaakV5SUh0Y2JpQWdJQ0IzYVdSMGFEb2dNalVsSUNGcGJYQnZjblJoYm5RN1hHNGdJSDFjYmx4dUlDQXVkUzFzWnkxemFYcGxNMjltTVRBZ2UxeHVJQ0FnSUhkcFpIUm9PaUF6TUNVZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzUxTFd4bkxYTnBlbVV4YjJZekxGeHVJQ0F1ZFMxc1p5MXphWHBsTW05bU5peGNiaUFnTG5VdGJHY3RjMmw2WlRSdlpqRXlJSHRjYmlBZ0lDQjNhV1IwYURvZ1kyRnNZeWd4TURBbElDb2dNU0F2SURNcElDRnBiWEJ2Y25SaGJuUTdYRzRnSUgxY2JseHVJQ0F1ZFMxc1p5MXphWHBsTTI5bU9DQjdYRzRnSUNBZ2QybGtkR2c2SURNM0xqVWxJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIMWNibHh1SUNBdWRTMXNaeTF6YVhwbE1tOW1OU3hjYmlBZ0xuVXRiR2N0YzJsNlpUUnZaakV3SUh0Y2JpQWdJQ0IzYVdSMGFEb2dOREFsSUNGcGJYQnZjblJoYm5RN1hHNGdJSDFjYmx4dUlDQXVkUzFzWnkxemFYcGxOVzltTVRJZ2UxeHVJQ0FnSUhkcFpIUm9PaUJqWVd4aktERXdNQ1VnS2lBMUlDOGdNVElwSUNGcGJYQnZjblJoYm5RN1hHNGdJSDFjYmx4dUlDQXVkUzFzWnkxemFYcGxNVzltTWl4Y2JpQWdMblV0YkdjdGMybDZaVEp2WmpRc1hHNGdJQzUxTFd4bkxYTnBlbVV6YjJZMkxGeHVJQ0F1ZFMxc1p5MXphWHBsTkc5bU9DeGNiaUFnTG5VdGJHY3RjMmw2WlRWdlpqRXdMRnh1SUNBdWRTMXNaeTF6YVhwbE5tOW1NVElnZTF4dUlDQWdJSGRwWkhSb09pQTFNQ1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lDNTFMV3huTFhOcGVtVTNiMll4TWlCN1hHNGdJQ0FnZDJsa2RHZzZJR05oYkdNb01UQXdKU0FxSURjZ0x5QXhNaWtnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lDNTFMV3huTFhOcGVtVXpiMlkxTEZ4dUlDQXVkUzFzWnkxemFYcGxObTltTVRBZ2UxeHVJQ0FnSUhkcFpIUm9PaUEyTUNVZ0lXbHRjRzl5ZEdGdWREdGNiaUFnZlZ4dVhHNGdJQzUxTFd4bkxYTnBlbVUxYjJZNElIdGNiaUFnSUNCM2FXUjBhRG9nTmpJdU5TVWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ2ZWeHVYRzRnSUM1MUxXeG5MWE5wZW1VeWIyWXpMRnh1SUNBdWRTMXNaeTF6YVhwbE5HOW1OaXhjYmlBZ0xuVXRiR2N0YzJsNlpUaHZaakV5SUh0Y2JpQWdJQ0IzYVdSMGFEb2dZMkZzWXlneE1EQWxJQ29nTWlBdklETXBJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIMWNibHh1SUNBdWRTMXNaeTF6YVhwbE4yOW1NVEFnZTF4dUlDQWdJSGRwWkhSb09pQTNNQ1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lDNTFMV3huTFhOcGVtVXpiMlkwTEZ4dUlDQXVkUzFzWnkxemFYcGxObTltT0N4Y2JpQWdMblV0YkdjdGMybDZaVGx2WmpFeUlIdGNiaUFnSUNCM2FXUjBhRG9nTnpVbElDRnBiWEJ2Y25SaGJuUTdYRzRnSUgxY2JseHVJQ0F1ZFMxc1p5MXphWHBsTkc5bU5TeGNiaUFnTG5VdGJHY3RjMmw2WlRodlpqRXdJSHRjYmlBZ0lDQjNhV1IwYURvZ09EQWxJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIMWNibHh1SUNBdWRTMXNaeTF6YVhwbE5XOW1OaXhjYmlBZ0xuVXRiR2N0YzJsNlpURXdiMll4TWlCN1hHNGdJQ0FnZDJsa2RHZzZJR05oYkdNb01UQXdKU0FxSURVZ0x5QTJLU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ0xuVXRiR2N0YzJsNlpUZHZaamdnZTF4dUlDQWdJSGRwWkhSb09pQTROeTQxSlNBaGFXMXdiM0owWVc1ME8xeHVJQ0I5WEc1Y2JpQWdMblV0YkdjdGMybDZaVGx2WmpFd0lIdGNiaUFnSUNCM2FXUjBhRG9nT1RBbElDRnBiWEJ2Y25SaGJuUTdYRzRnSUgxY2JseHVJQ0F1ZFMxc1p5MXphWHBsTVRGdlpqRXlJSHRjYmlBZ0lDQjNhV1IwYURvZ1kyRnNZeWd4TURBbElDb2dNVEVnTHlBeE1pa2dJV2x0Y0c5eWRHRnVkRHRjYmlBZ2ZWeHVYRzU5WEc0aUxDSkFhVzF3YjNKMElDZHpkV2wwWTNOekxYVjBhV3h6TFhOcGVtVW5PMXh1WEc0NmNtOXZkQ0I3WEc0Z0lDMHRkUzF6YVhwbExYSm9lWFJvYlRvZ01TNDFjbVZ0TzF4dWZWeHVYRzR2S2lCWGFXUjBhQ0FxTDF4dVhHNHVkUzF6YVhwbFYybGtkR2d0TVMwMElIdGNiaUFnZDJsa2RHZzZJR05oYkdNb2RtRnlLQzB0ZFMxemFYcGxMWEpvZVhSb2JTa2dLaUF1TWpVcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMWE5wZW1WWGFXUjBhQzB4TFRJZ2UxeHVJQ0IzYVdSMGFEb2dZMkZzWXloMllYSW9MUzExTFhOcGVtVXRjbWg1ZEdodEtTQXFJQzQxS1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXphWHBsVjJsa2RHZ3RNeTAwSUh0Y2JpQWdkMmxrZEdnNklHTmhiR01vZG1GeUtDMHRkUzF6YVhwbExYSm9lWFJvYlNrZ0tpQXVOelVwSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTnBlbVZYYVdSMGFDMHhJSHRjYmlBZ2QybGtkR2c2SUhaaGNpZ3RMWFV0YzJsNlpTMXlhSGwwYUcwcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMWE5wZW1WWGFXUjBhQzB4WHpFdE1pQjdYRzRnSUhkcFpIUm9PaUJqWVd4aktIWmhjaWd0TFhVdGMybDZaUzF5YUhsMGFHMHBJQ29nTVM0MUtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVkUzF6YVhwbFYybGtkR2d0TWlCN1hHNGdJSGRwWkhSb09pQmpZV3hqS0haaGNpZ3RMWFV0YzJsNlpTMXlhSGwwYUcwcElDb2dNaWtnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMybDZaVmRwWkhSb0xUWWdlMXh1SUNCM2FXUjBhRG9nWTJGc1l5aDJZWElvTFMxMUxYTnBlbVV0Y21oNWRHaHRLU0FxSURZcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpOHFJRWhsYVdkb2RDQXFMMXh1WEc0dWRTMXphWHBsU0dWcFoyaDBMVEV0TkNCN1hHNGdJR2hsYVdkb2REb2dZMkZzWXloMllYSW9MUzExTFhOcGVtVXRjbWg1ZEdodEtTQXFJQzR5TlNrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMmw2WlVobGFXZG9kQzB4TFRJZ2UxeHVJQ0JvWldsbmFIUTZJR05oYkdNb2RtRnlLQzB0ZFMxemFYcGxMWEpvZVhSb2JTa2dLaUF1TlNrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMmw2WlVobGFXZG9kQzB6TFRRZ2UxeHVJQ0JvWldsbmFIUTZJR05oYkdNb2RtRnlLQzB0ZFMxemFYcGxMWEpvZVhSb2JTa2dLaUF1TnpVcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMWE5wZW1WSVpXbG5hSFF0TVNCN1hHNGdJR2hsYVdkb2REb2dkbUZ5S0MwdGRTMXphWHBsTFhKb2VYUm9iU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMybDZaVWhsYVdkb2RDMHhYekV0TkNCN1hHNGdJR2hsYVdkb2REb2dZMkZzWXloMllYSW9MUzExTFhOcGVtVXRjbWg1ZEdodEtTQXFJREV1TWpVcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMWE5wZW1WSVpXbG5hSFF0TVY4eExUSWdlMXh1SUNCb1pXbG5hSFE2SUdOaGJHTW9kbUZ5S0MwdGRTMXphWHBsTFhKb2VYUm9iU2tnS2lBeExqVXBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTUxTFhOcGVtVklaV2xuYUhRdE1pQjdYRzRnSUdobGFXZG9kRG9nWTJGc1l5aDJZWElvTFMxMUxYTnBlbVV0Y21oNWRHaHRLU0FxSURJcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpOHFJRXhwYm1VZ1NHVnBaMmgwSUNvdlhHNWNiaTUxTFhOcGVtVk1hVzVsU0dWcFoyaDBMVEV0TkNCN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lCallXeGpLSFpoY2lndExYVXRjMmw2WlMxeWFIbDBhRzBwSUNvZ0xqSTFLU0FoYVcxd2IzSjBZVzUwTzF4dWZWeHVYRzR1ZFMxemFYcGxUR2x1WlVobGFXZG9kQzB4TFRJZ2UxeHVJQ0JzYVc1bExXaGxhV2RvZERvZ1kyRnNZeWgyWVhJb0xTMTFMWE5wZW1VdGNtaDVkR2h0S1NBcUlDNDFLU0FoYVcxd2IzSjBZVzUwTzF4dWZWeHVYRzR1ZFMxemFYcGxUR2x1WlVobGFXZG9kQzB6TFRRZ2UxeHVJQ0JzYVc1bExXaGxhV2RvZERvZ1kyRnNZeWgyWVhJb0xTMTFMWE5wZW1VdGNtaDVkR2h0S1NBcUlDNDNOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMybDZaVXhwYm1WSVpXbG5hSFF0TVNCN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lCMllYSW9MUzExTFhOcGVtVXRjbWg1ZEdodEtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVkUzF6YVhwbFRHbHVaVWhsYVdkb2RDMHhYekV0TkNCN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lCallXeGpLSFpoY2lndExYVXRjMmw2WlMxeWFIbDBhRzBwSUNvZ01TNHlOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMybDZaVXhwYm1WSVpXbG5hSFF0TVY4eExUSWdlMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dZMkZzWXloMllYSW9MUzExTFhOcGVtVXRjbWg1ZEdodEtTQXFJREV1TlNrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMmw2WlV4cGJtVklaV2xuYUhRdE1pQjdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQmpZV3hqS0haaGNpZ3RMWFV0YzJsNlpTMXlhSGwwYUcwcElDb2dNaWtnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNiaUlzSWpweWIyOTBJSHRjYmlBZ0xTMTFMWE53WVdObExYSm9lWFJvYlRvZ01TNDFjbVZ0TzF4dWZWeHVYRzR2S2lwY2JpQXFJRlYwYVd4eklDMGdVM0JoWTJWY2JpQXFYRzRnS2lCTllYSm5hVzRnWVc1a0lGQmhaR1JwYm1kY2JpQXFJRk5wZW1Wek9pQXhMelFzSURFdk1pd2dNeTgwTENBeExDQXhJREV2TWl3Z01seHVJQ29nVTJsa1pYTTZJR0ZzYkN3Z2RHOXdMQ0J5YVdkb2RDd2dZbTkwZEc5dExDQnNaV1owTENCMlpYSjBhV05oYkN3Z2FHOXlhWHB2Ym5SaGJEdGNiaUFxTDF4dVhHNHZLaXBjYmlBcUlFMWhjbWRwYmx4dUlDcGNiaUFxSUhVdGMwMWNiaUFxTDF4dVhHNGdMeW9nUVd4c0lDb3ZYRzVjYmlBdWRTMXpUUzB4TFRnZ2UxeHVJQ0FnYldGeVoybHVPaUJqWVd4aktIWmhjaWd0TFhVdGMzQmhZMlV0Y21oNWRHaHRLU0FxSUM0eE1qVXBJQ0ZwYlhCdmNuUmhiblE3WEc0Z2ZWeHVYRzRnTG5VdGMwMHRNUzAwSUh0Y2JpQWdJRzFoY21kcGJqb2dZMkZzWXloMllYSW9MUzExTFhOd1lXTmxMWEpvZVhSb2JTa2dLaUF1TWpVcElDRnBiWEJ2Y25SaGJuUTdYRzRnZlZ4dVhHNGdMblV0YzAwdE1TMHlJSHRjYmlBZ0lHMWhjbWRwYmpvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXVOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JpQjlYRzVjYmlBdWRTMXpUUzB6TFRRZ2UxeHVJQ0FnYldGeVoybHVPaUJqWVd4aktIWmhjaWd0TFhVdGMzQmhZMlV0Y21oNWRHaHRLU0FxSUM0M05Ta2dJV2x0Y0c5eWRHRnVkRHRjYmlCOVhHNWNiaUF1ZFMxelRTMHhJSHRjYmlBZ0lHMWhjbWRwYmpvZ2RtRnlLQzB0ZFMxemNHRmpaUzF5YUhsMGFHMHBJQ0ZwYlhCdmNuUmhiblE3WEc0Z2ZWeHVYRzRnTG5VdGMwMHRNVjh4TFRJZ2UxeHVJQ0FnYldGeVoybHVPaUJqWVd4aktIWmhjaWd0TFhVdGMzQmhZMlV0Y21oNWRHaHRLU0FxSURFdU5Ta2dJV2x0Y0c5eWRHRnVkRHRjYmlCOVhHNWNiaUF1ZFMxelRTMHlJSHRjYmlBZ0lHMWhjbWRwYmpvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXlLU0FoYVcxd2IzSjBZVzUwTzF4dUlIMWNibHh1THlvZ1ZHOXdJQ292WEc1Y2JpNTFMWE5OVkMweExUZ2dlMXh1SUNCdFlYSm5hVzR0ZEc5d09pQmpZV3hqS0haaGNpZ3RMWFV0YzNCaFkyVXRjbWg1ZEdodEtTQXFJQzR4TWpVcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMWE5OVkMweExUUWdlMXh1SUNCdFlYSm5hVzR0ZEc5d09pQmpZV3hqS0haaGNpZ3RMWFV0YzNCaFkyVXRjbWg1ZEdodEtTQXFJQzR5TlNrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMDFVTFRFdE1pQjdYRzRnSUcxaGNtZHBiaTEwYjNBNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMalVwSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTk5WQzB6TFRRZ2UxeHVJQ0J0WVhKbmFXNHRkRzl3T2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlDNDNOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMwMVVMVEVnZTF4dUlDQnRZWEpuYVc0dGRHOXdPaUIyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMDFVTFRGZk1TMHlJSHRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dZMkZzWXloMllYSW9MUzExTFhOd1lXTmxMWEpvZVhSb2JTa2dLaUF4TGpVcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMWE5OVkMweUlIdGNiaUFnYldGeVoybHVMWFJ2Y0RvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXlLU0FoYVcxd2IzSjBZVzUwTzF4dWZWeHVYRzR2S2lCU2FXZG9kQ0FxTDF4dVhHNHVkUzF6VFZJdE1TMDBJSHRjYmlBZ2JXRnlaMmx1TFhKcFoyaDBPaUJqWVd4aktIWmhjaWd0TFhVdGMzQmhZMlV0Y21oNWRHaHRLU0FxSUM0eU5Ta2dJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMblV0YzAxU0xURXRNaUI3WEc0Z0lHMWhjbWRwYmkxeWFXZG9kRG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBdU5Ta2dJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMblV0YzAxU0xUTXROQ0I3WEc0Z0lHMWhjbWRwYmkxeWFXZG9kRG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBdU56VXBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTUxTFhOTlVpMHhJSHRjYmlBZ2JXRnlaMmx1TFhKcFoyaDBPaUIyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMDFTTFRGZk1TMHlJSHRjYmlBZ2JXRnlaMmx1TFhKcFoyaDBPaUJqWVd4aktIWmhjaWd0TFhVdGMzQmhZMlV0Y21oNWRHaHRLU0FxSURFdU5Ta2dJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMblV0YzAxU0xUSWdlMXh1SUNCdFlYSm5hVzR0Y21sbmFIUTZJR05oYkdNb2RtRnlLQzB0ZFMxemNHRmpaUzF5YUhsMGFHMHBJQ29nTWlrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUx5b2dRbTkwZEc5dElDb3ZYRzVjYmk1MUxYTk5RaTB4TFRRZ2UxeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQmpZV3hqS0haaGNpZ3RMWFV0YzNCaFkyVXRjbWg1ZEdodEtTQXFJQzR5TlNrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMDFDTFRFdE1pQjdYRzRnSUcxaGNtZHBiaTFpYjNSMGIyMDZJR05oYkdNb2RtRnlLQzB0ZFMxemNHRmpaUzF5YUhsMGFHMHBJQ29nTGpVcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMWE5OUWkwekxUUWdlMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUJqWVd4aktIWmhjaWd0TFhVdGMzQmhZMlV0Y21oNWRHaHRLU0FxSUM0M05Ta2dJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMblV0YzAxQ0xURWdlMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUIyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMDFDTFRGZk1TMHlJSHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBeExqVXBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTUxTFhOTlFpMHlJSHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBeUtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHZLaUJNWldaMElDb3ZYRzVjYmk1MUxYTk5UQzB4TFRnZ2UxeHVJQ0J0WVhKbmFXNHRiR1ZtZERvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXVNVEkxS1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXpUVXd0TVMwMElIdGNiaUFnYldGeVoybHVMV3hsWm5RNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMakkxS1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXpUVXd0TVMweUlIdGNiaUFnYldGeVoybHVMV3hsWm5RNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMalVwSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTk5UQzB6TFRRZ2UxeHVJQ0J0WVhKbmFXNHRiR1ZtZERvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXVOelVwSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTk5UQzB4SUh0Y2JpQWdiV0Z5WjJsdUxXeGxablE2SUhaaGNpZ3RMWFV0YzNCaFkyVXRjbWg1ZEdodEtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVkUzF6VFV3dE1WOHhMVElnZTF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBeExqVXBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTUxTFhOTlRDMHlJSHRjYmlBZ2JXRnlaMmx1TFd4bFpuUTZJR05oYkdNb2RtRnlLQzB0ZFMxemNHRmpaUzF5YUhsMGFHMHBJQ29nTWlrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUx5b2dWbVZ5ZEdsallXd2dLaTljYmx4dUxuVXRjMDFXTFRFdE5DQjdYRzRnSUcxaGNtZHBiaTEwYjNBNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMakkxS1NBaGFXMXdiM0owWVc1ME8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQmpZV3hqS0haaGNpZ3RMWFV0YzNCaFkyVXRjbWg1ZEdodEtTQXFJQzR5TlNrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMDFXTFRFdE1pQjdYRzRnSUcxaGNtZHBiaTEwYjNBNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMalVwSUNGcGJYQnZjblJoYm5RN1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMalVwSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTk5WaTB6TFRRZ2UxeHVJQ0J0WVhKbmFXNHRkRzl3T2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlDNDNOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXVOelVwSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTk5WaTB4SUh0Y2JpQWdiV0Z5WjJsdUxYUnZjRG9nZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDRnBiWEJ2Y25SaGJuUTdYRzRnSUcxaGNtZHBiaTFpYjNSMGIyMDZJSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXpUVll0TVY4eExUSWdlMXh1SUNCdFlYSm5hVzR0ZEc5d09pQmpZV3hqS0haaGNpZ3RMWFV0YzNCaFkyVXRjbWg1ZEdodEtTQXFJREV1TlNrZ0lXbHRjRzl5ZEdGdWREdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dZMkZzWXloMllYSW9MUzExTFhOd1lXTmxMWEpvZVhSb2JTa2dLaUF4TGpVcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMWE5OVmkweUlIdGNiaUFnYldGeVoybHVMWFJ2Y0RvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXlLU0FoYVcxd2IzSjBZVzUwTzF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlESXBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaThxSUVodmNtbDZiMjUwWVd3Z0tpOWNibHh1TG5VdGMwMUlMVEV0TkNCN1hHNGdJRzFoY21kcGJpMXNaV1owT2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlDNHlOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdiV0Z5WjJsdUxYSnBaMmgwT2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlDNHlOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMwMUlMVEV0TWlCN1hHNGdJRzFoY21kcGJpMXNaV1owT2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlDNDFLU0FoYVcxd2IzSjBZVzUwTzF4dUlDQnRZWEpuYVc0dGNtbG5hSFE2SUdOaGJHTW9kbUZ5S0MwdGRTMXpjR0ZqWlMxeWFIbDBhRzBwSUNvZ0xqVXBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTUxTFhOTlNDMHpMVFFnZTF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBdU56VXBJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lHMWhjbWRwYmkxeWFXZG9kRG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBdU56VXBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTUxTFhOTlNDMHhJSHRjYmlBZ2JXRnlaMmx1TFd4bFpuUTZJSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBaGFXMXdiM0owWVc1ME8xeHVJQ0J0WVhKbmFXNHRjbWxuYUhRNklIWmhjaWd0TFhVdGMzQmhZMlV0Y21oNWRHaHRLU0FoYVcxd2IzSjBZVzUwTzF4dWZWeHVYRzR1ZFMxelRVZ3RNVjh4TFRJZ2UxeHVJQ0J0WVhKbmFXNHRiR1ZtZERvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXhMalVwSUNGcGJYQnZjblJoYm5RN1hHNGdJRzFoY21kcGJpMXlhV2RvZERvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXhMalVwSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTk5TQzB5SUh0Y2JpQWdiV0Z5WjJsdUxXeGxablE2SUdOaGJHTW9kbUZ5S0MwdGRTMXpjR0ZqWlMxeWFIbDBhRzBwSUNvZ01pa2dJV2x0Y0c5eWRHRnVkRHRjYmlBZ2JXRnlaMmx1TFhKcFoyaDBPaUJqWVd4aktIWmhjaWd0TFhVdGMzQmhZMlV0Y21oNWRHaHRLU0FxSURJcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1VHRmtaR2x1WjF4dUlDcGNiaUFxSUhVdGMxQmNiaUFxTDF4dVhHNGdMeW9nUVd4c0lDb3ZYRzVjYmlBdWRTMXpVQzB4TFRRZ2UxeHVJQ0FnY0dGa1pHbHVaem9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBdU1qVXBJQ0ZwYlhCdmNuUmhiblE3WEc0Z2ZWeHVYRzRnTG5VdGMxQXRNUzB5SUh0Y2JpQWdJSEJoWkdScGJtYzZJR05oYkdNb2RtRnlLQzB0ZFMxemNHRmpaUzF5YUhsMGFHMHBJQ29nTGpVcElDRnBiWEJ2Y25SaGJuUTdYRzRnZlZ4dVhHNGdMblV0YzFBdE15MDBJSHRjYmlBZ0lIQmhaR1JwYm1jNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMamMxS1NBaGFXMXdiM0owWVc1ME8xeHVJSDFjYmx4dUlDNTFMWE5RTFRFZ2UxeHVJQ0FnY0dGa1pHbHVaem9nZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDRnBiWEJ2Y25SaGJuUTdYRzRnZlZ4dVhHNGdMblV0YzFBdE1WOHhMVElnZTF4dUlDQWdjR0ZrWkdsdVp6b2dZMkZzWXloMllYSW9MUzExTFhOd1lXTmxMWEpvZVhSb2JTa2dLaUF4TGpVcElDRnBiWEJ2Y25SaGJuUTdYRzRnZlZ4dVhHNGdMblV0YzFBdE1pQjdYRzRnSUNCd1lXUmthVzVuT2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlESXBJQ0ZwYlhCdmNuUmhiblE3WEc0Z2ZWeHVYRzR2S2lCVWIzQWdLaTljYmx4dUxuVXRjMUJVTFRFdE5DQjdYRzRnSUhCaFpHUnBibWN0ZEc5d09pQmpZV3hqS0haaGNpZ3RMWFV0YzNCaFkyVXRjbWg1ZEdodEtTQXFJQzR5TlNrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMUJVTFRFdE1pQjdYRzRnSUhCaFpHUnBibWN0ZEc5d09pQmpZV3hqS0haaGNpZ3RMWFV0YzNCaFkyVXRjbWg1ZEdodEtTQXFJQzQxS1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXpVRlF0TXkwMElIdGNiaUFnY0dGa1pHbHVaeTEwYjNBNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMamMxS1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXpVRlF0TVNCN1hHNGdJSEJoWkdScGJtY3RkRzl3T2lCMllYSW9MUzExTFhOd1lXTmxMWEpvZVhSb2JTa2dJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMblV0YzFCVUxURmZNUzB5SUh0Y2JpQWdjR0ZrWkdsdVp5MTBiM0E2SUdOaGJHTW9kbUZ5S0MwdGRTMXpjR0ZqWlMxeWFIbDBhRzBwSUNvZ01TNDFLU0FoYVcxd2IzSjBZVzUwTzF4dWZWeHVYRzR1ZFMxelVGUXRNaUI3WEc0Z0lIQmhaR1JwYm1jdGRHOXdPaUJqWVd4aktIWmhjaWd0TFhVdGMzQmhZMlV0Y21oNWRHaHRLU0FxSURJcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpOHFJRkpwWjJoMElDb3ZYRzVjYmk1MUxYTlFVaTB4TFRRZ2UxeHVJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQmpZV3hqS0haaGNpZ3RMWFV0YzNCaFkyVXRjbWg1ZEdodEtTQXFJQzR5TlNrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMUJTTFRFdE1pQjdYRzRnSUhCaFpHUnBibWN0Y21sbmFIUTZJR05oYkdNb2RtRnlLQzB0ZFMxemNHRmpaUzF5YUhsMGFHMHBJQ29nTGpVcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNTFMWE5RVWkwekxUUWdlMXh1SUNCd1lXUmthVzVuTFhKcFoyaDBPaUJqWVd4aktIWmhjaWd0TFhVdGMzQmhZMlV0Y21oNWRHaHRLU0FxSUM0M05Ta2dJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMblV0YzFCU0xURWdlMXh1SUNCd1lXUmthVzVuTFhKcFoyaDBPaUIyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUxuVXRjMUJTTFRGZk1TMHlJSHRjYmlBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBeExqVXBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTUxTFhOUVVpMHlJSHRjYmlBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBeUtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHZLaUJDYjNSMGIyMGdLaTljYmx4dUxuVXRjMUJDTFRFdE5DQjdYRzRnSUhCaFpHUnBibWN0WW05MGRHOXRPaUJqWVd4aktIWmhjaWd0TFhVdGMzQmhZMlV0Y21oNWRHaHRLU0FxSUM0eU5Ta2dJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMblV0YzFCQ0xURXRNaUI3WEc0Z0lIQmhaR1JwYm1jdFltOTBkRzl0T2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlDNDFLU0FoYVcxd2IzSjBZVzUwTzF4dWZWeHVYRzR1ZFMxelVFSXRNeTAwSUh0Y2JpQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMamMxS1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXpVRUl0TVNCN1hHNGdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQjJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMxQkNMVEZmTVMweUlIdGNiaUFnY0dGa1pHbHVaeTFpYjNSMGIyMDZJR05oYkdNb2RtRnlLQzB0ZFMxemNHRmpaUzF5YUhsMGFHMHBJQ29nTVM0MUtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVkUzF6VUVJdE1pQjdYRzRnSUhCaFpHUnBibWN0WW05MGRHOXRPaUJqWVd4aktIWmhjaWd0TFhVdGMzQmhZMlV0Y21oNWRHaHRLU0FxSURJcElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpOHFJRXhsWm5RZ0tpOWNibHh1TG5VdGMxQk1MVEV0TkNCN1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXVNalVwSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTlFUQzB4TFRJZ2UxeHVJQ0J3WVdSa2FXNW5MV3hsWm5RNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMalVwSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTlFUQzB6TFRRZ2UxeHVJQ0J3WVdSa2FXNW5MV3hsWm5RNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMamMxS1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXpVRXd0TVNCN1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ2RtRnlLQzB0ZFMxemNHRmpaUzF5YUhsMGFHMHBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTUxTFhOUVRDMHhYekV0TWlCN1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXhMalVwSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1MUxYTlFUQzB5SUh0Y2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlESXBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaThxSUZabGNuUnBZMkZzSUNvdlhHNWNiaTUxTFhOUVZpMHhMVFFnZTF4dUlDQndZV1JrYVc1bkxYUnZjRG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBdU1qVXBJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIQmhaR1JwYm1jdFltOTBkRzl0T2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlDNHlOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMxQldMVEV0TWlCN1hHNGdJSEJoWkdScGJtY3RkRzl3T2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlDNDFLU0FoYVcxd2IzSjBZVzUwTzF4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXVOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMxQldMVE10TkNCN1hHNGdJSEJoWkdScGJtY3RkRzl3T2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlDNDNOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMamMxS1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXpVRll0TVNCN1hHNGdJSEJoWkdScGJtY3RkRzl3T2lCMllYSW9MUzExTFhOd1lXTmxMWEpvZVhSb2JTa2dJV2x0Y0c5eWRHRnVkRHRjYmlBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SUhaaGNpZ3RMWFV0YzNCaFkyVXRjbWg1ZEdodEtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVkUzF6VUZZdE1WOHhMVElnZTF4dUlDQndZV1JrYVc1bkxYUnZjRG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBeExqVXBJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIQmhaR1JwYm1jdFltOTBkRzl0T2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlERXVOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMxQldMVElnZTF4dUlDQndZV1JrYVc1bkxYUnZjRG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBeUtTQWhhVzF3YjNKMFlXNTBPMXh1SUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBeUtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHZLaUJJYjNKcGVtOXVkR0ZzSUNvdlhHNWNiaTUxTFhOUVNDMHhMVFFnZTF4dUlDQndZV1JrYVc1bkxXeGxablE2SUdOaGJHTW9kbUZ5S0MwdGRTMXpjR0ZqWlMxeWFIbDBhRzBwSUNvZ0xqSTFLU0FoYVcxd2IzSjBZVzUwTzF4dUlDQndZV1JrYVc1bkxYSnBaMmgwT2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlDNHlOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMxQklMVEV0TWlCN1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXVOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXVOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMxQklMVE10TkNCN1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ1kyRnNZeWgyWVhJb0xTMTFMWE53WVdObExYSm9lWFJvYlNrZ0tpQXVOelVwSUNGcGJYQnZjblJoYm5RN1hHNGdJSEJoWkdScGJtY3RjbWxuYUhRNklHTmhiR01vZG1GeUtDMHRkUzF6Y0dGalpTMXlhSGwwYUcwcElDb2dMamMxS1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dWRTMXpVRWd0TVNCN1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ2RtRnlLQzB0ZFMxemNHRmpaUzF5YUhsMGFHMHBJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SUhaaGNpZ3RMWFV0YzNCaFkyVXRjbWg1ZEdodEtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVkUzF6VUVndE1WOHhMVElnZTF4dUlDQndZV1JrYVc1bkxXeGxablE2SUdOaGJHTW9kbUZ5S0MwdGRTMXpjR0ZqWlMxeWFIbDBhRzBwSUNvZ01TNDFLU0FoYVcxd2IzSjBZVzUwTzF4dUlDQndZV1JrYVc1bkxYSnBaMmgwT2lCallXeGpLSFpoY2lndExYVXRjM0JoWTJVdGNtaDVkR2h0S1NBcUlERXVOU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGMxQklMVElnZTF4dUlDQndZV1JrYVc1bkxXeGxablE2SUdOaGJHTW9kbUZ5S0MwdGRTMXpjR0ZqWlMxeWFIbDBhRzBwSUNvZ01pa2dJV2x0Y0c5eWRHRnVkRHRjYmlBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nWTJGc1l5aDJZWElvTFMxMUxYTndZV05sTFhKb2VYUm9iU2tnS2lBeUtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dUlpd2lMeW9xWEc0Z0tpQlhiM0prSUdKeVpXRnJhVzVuWEc0Z0tseHVJQ29nUW5KbFlXc2djM1J5YVc1bmN5QjNhR1Z1SUhSb1pXbHlJR3hsYm1kMGFDQmxlR05sWldSeklIUm9aU0IzYVdSMGFDQnZaaUIwYUdWcGNpQmpiMjUwWVdsdVpYSXVYRzRnS2k5Y2JseHVMblV0ZEdWNGRFSnlaV0ZySUh0Y2JpQWdkMjl5WkMxM2NtRndPaUJpY21WaGF5MTNiM0prSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk4cUtseHVJQ29nU0c5eWFYcHZiblJoYkNCMFpYaDBJR0ZzYVdkdWJXVnVkRnh1SUNvdlhHNWNiaTUxTFhSbGVIUkRaVzUwWlhJZ2UxeHVJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWElnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5VdGRHVjRkRXhsWm5RZ2UxeHVJQ0IwWlhoMExXRnNhV2R1T2lCc1pXWjBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTUxTFhSbGVIUlNhV2RvZENCN1hHNGdJSFJsZUhRdFlXeHBaMjQ2SUhKcFoyaDBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaThxS2x4dUlDb2dTVzVvWlhKcGRDQjBhR1VnWVc1alpYTjBiM0luY3lCMFpYaDBJR052Ykc5eUxseHVJQ292WEc1Y2JpNTFMWFJsZUhSSmJtaGxjbWwwUTI5c2IzSWdlMXh1SUNCamIyeHZjam9nYVc1b1pYSnBkQ0FoYVcxd2IzSjBZVzUwTzF4dWZWeHVYRzR2S2lwY2JpQXFJRVZ1WVdKc1pYTWdabTl1ZENCclpYSnVhVzVuSUdsdUlHRnNiQ0JpY205M2MyVnljeTVjYmlBcUlHaDBkSEE2THk5aWJHOW5MblI1Y0dWcmFYUXVZMjl0THpJd01UUXZNREl2TURVdmEyVnlibWx1WnkxdmJpMTBhR1V0ZDJWaUwxeHVJQ3BjYmlBcUlERXVJRU5vY205dFpTQW9ibTkwSUZkcGJtUnZkM01wTENCR2FYSmxabTk0TENCVFlXWmhjbWtnTmlzc0lHbFBVeXdnUVc1a2NtOXBaRnh1SUNvZ01pNGdRMmh5YjIxbElDaHViM1FnVjJsdVpHOTNjeWtzSUVacGNtVm1iM2dzSUVsRklERXdLMXh1SUNvZ015NGdVMkZtWVhKcElEY2dZVzVrSUdaMWRIVnlaU0JpY205M2MyVnljMXh1SUNvdlhHNWNiaTUxTFhSbGVIUkxaWEp1SUh0Y2JpQWdkR1Y0ZEMxeVpXNWtaWEpwYm1jNklHOXdkR2x0YVhwbFRHVm5hV0pwYkdsMGVUc2dMeW9nTVNBcUwxeHVJQ0JtYjI1MExXWmxZWFIxY21VdGMyVjBkR2x1WjNNNklGd2lhMlZ5Ymx3aUlERTdJQzhxSURJZ0tpOWNiaUFnWm05dWRDMXJaWEp1YVc1bk9pQnViM0p0WVd3N0lDOHFJRE1nS2k5Y2JuMWNibHh1THlvcVhHNGdLaUJRY21WMlpXNTBJSGRvYVhSbGMzQmhZMlVnZDNKaGNIQnBibWRjYmlBcUwxeHVYRzR1ZFMxMFpYaDBUbTlYY21Gd0lIdGNiaUFnZDJocGRHVXRjM0JoWTJVNklHNXZkM0poY0NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dktpcGNiaUFxSUZSbGVIUWdkSEoxYm1OaGRHbHZibHh1SUNwY2JpQXFJRkJ5WlhabGJuUWdkR1Y0ZENCbWNtOXRJSGR5WVhCd2FXNW5JRzl1ZEc4Z2JYVnNkR2x3YkdVZ2JHbHVaWE1zSUdGdVpDQjBjblZ1WTJGMFpTQjNhWFJvSUdGdVhHNGdLaUJsYkd4cGNITnBjeTVjYmlBcVhHNGdLaUF4TGlCRmJuTjFjbVVnZEdoaGRDQjBhR1VnYm05a1pTQm9ZWE1nWVNCdFlYaHBiWFZ0SUhkcFpIUm9JR0ZtZEdWeUlIZG9hV05vSUhSeWRXNWpZWFJwYjI0Z1kyRnVYRzRnS2lBZ0lDQnZZMk4xY2k1Y2JpQXFJREl1SUVacGVDQm1iM0lnU1VVZ09DODVJR2xtSUdCM2IzSmtMWGR5WVhBNklHSnlaV0ZyTFhkdmNtUmdJR2x6SUdsdUlHVm1abVZqZENCdmJpQmhibU5sYzNSdmNseHVJQ29nSUNBZ2JtOWtaWE11WEc0Z0tpOWNibHh1TG5VdGRHVjRkRlJ5ZFc1allYUmxJSHRjYmlBZ2JXRjRMWGRwWkhSb09pQXhNREFsT3lBdktpQXhJQ292WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0Z0lXbHRjRzl5ZEdGdWREdGNiaUFnZEdWNGRDMXZkbVZ5Wm14dmR6b2daV3hzYVhCemFYTWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNDQWhhVzF3YjNKMFlXNTBPMXh1SUNCM2IzSmtMWGR5WVhBNklHNXZjbTFoYkNBaGFXMXdiM0owWVc1ME95QXZLaUF5SUNvdlhHNTlYRzRpTENKQWFXMXdiM0owSUNkemRXbDBZM056TFhWMGFXeHpMWFJsZUhRbk8xeHVYRzQ2Y205dmRDQjdYRzRnSUMwdGRTMTBaWGgwTFdOdmJHOXlMV2x1ZG1WeWREb2dJMlptWmp0Y2JpQWdMUzExTFhSbGVIUXRZMjlzYjNJdGNISnBiV0Z5ZVRvZ0l6UmxPV1prWkR0Y2JpQWdMUzExTFhSbGVIUXRZMjlzYjNJdGMyVmpiMjVrWVhKNU9pQWpOREUyT1RnNE8xeHVJQ0F0TFhVdGRHVjRkQzFqYjJ4dmNpMW9hV2RvYkdsbmFIUTZJQ00wWlRsbVpHUTdYRzRnSUMwdGRTMTBaWGgwTFdOdmJHOXlMWE4xWTJObGMzTTZJQ00zTUdFNU9HSTdYRzRnSUMwdGRTMTBaWGgwTFdOdmJHOXlMWFZ1YzNWeVpUb2dJMlV3WXpNMU1EdGNiaUFnTFMxMUxYUmxlSFF0WTI5c2IzSXRibVYxZEhKaGJEb2dZMjlzYjNJb0l6UXhOams0T0NCMGFXNTBLRFl3SlNrcE8xeHVJQ0F0TFhVdGRHVjRkQzFqYjJ4dmNpMTNZWEp1YVc1bk9pQWpaVE00TWpSbE8xeHVJQ0F0TFhVdGRHVjRkQzFqYjJ4dmNpMWtZVzVuWlhJNklDTmxNRFUzTldJN1hHNGdJQzB0ZFMxMFpYaDBMV052Ykc5eUxXVnRjSFI1T2lCamIyeHZjaWgyWVhJb0xTMTFMWFJsZUhRdFkyOXNiM0l0YzJWamIyNWtZWEo1S1NCMGFXNTBLRFV3SlNrcE8xeHVJQ0F0TFhVdGRHVjRkQzF0ZFhSbFpDMXZjR0ZqYVhSNU9pQXVOVHRjYmlBZ0xTMTFMWFJsZUhRdGNtaDVkR2h0T2lBeExqVnlaVzA3WEc1OVhHNWNiaTUxTFhSbGVIUlZjSEJsY2lCN1hHNGdJSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYRzU5WEc1Y2JpNTFMWFJsZUhSTWIzZGxjaUI3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCc2IzZGxjbU5oYzJVN1hHNTlYRzVjYmk1MUxYUmxlSFJEWVhCcGRHRnNhWHBsSUh0Y2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklHTmhjR2wwWVd4cGVtVTdYRzU5WEc1Y2JpNTFMWFJsZUhSSmJuWmxjblFnZTF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0ZFMxMFpYaDBMV052Ykc5eUxXbHVkbVZ5ZENrN1hHNTlYRzVjYmk1MUxYUmxlSFJOZFhSbFpDQjdYRzRnSUc5d1lXTnBkSGs2SUhaaGNpZ3RMWFV0ZEdWNGRDMXRkWFJsWkMxdmNHRmphWFI1S1R0Y2JuMWNibHh1TG5VdGRHVjRkRVZ0Y0hSNUlIdGNiaUFnWTI5c2IzSTZJSFpoY2lndExYVXRkR1Y0ZEMxamIyeHZjaTFsYlhCMGVTazdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTJNREE3WEc1OVhHNWNiaTUxTFhSbGVIUk5hV055YnlCN1hHNGdJR1p2Ym5RdGMybDZaVG9nWTJGc1l5Z3hNaTh4TmlBcUlERnlaVzBwTzF4dWZWeHVYRzR1ZFMxMFpYaDBUV2x1YVNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nWTJGc1l5Z3hOQzh4TmlBcUlERnlaVzBwTzF4dWZWeHVYRzR1ZFMxMFpYaDBUV1YwWVNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nWTJGc1l5Z3hOQzh4TmlBcUlERnlaVzBwTzF4dUlDQmpiMnh2Y2pvZ1kyOXNiM0lvZG1GeUtDMHRkUzEwWlhoMExXTnZiRzl5TFhObFkyOXVaR0Z5ZVNrZ2RHbHVkQ2cxTUNVcEtUdGNibjFjYmx4dUxuVXRkR1Y0ZEV4bFlXUWdlMXh1SUNCbWIyNTBMWE5wZW1VNklHTmhiR01vTWpRdk1UWWdLaUF4Y21WdEtUdGNiaUFnWm05dWRDMTNaV2xuYUhRNklETXdNRHRjYm4xY2JseHVMblV0ZEdWNGRGQnlhVzFoY25rZ2UxeHVJQ0JqYjJ4dmNqb2dkbUZ5S0MwdGRTMTBaWGgwTFdOdmJHOXlMWEJ5YVcxaGNua3BPMXh1ZlZ4dVhHNHVkUzEwWlhoMFUyVmpiMjVrWVhKNUlIdGNiaUFnWTI5c2IzSTZJSFpoY2lndExYVXRkR1Y0ZEMxamIyeHZjaTF6WldOdmJtUmhjbmtwTzF4dWZWeHVYRzR1ZFMxMFpYaDBTR2xuYUd4cFoyaDBJSHRjYmlBZ1kyOXNiM0k2SUhaaGNpZ3RMWFV0ZEdWNGRDMWpiMnh2Y2kxb2FXZG9iR2xuYUhRcE8xeHVmVnh1WEc0dWRTMTBaWGgwVTNWalkyVnpjeUI3WEc0Z0lHTnZiRzl5T2lCMllYSW9MUzExTFhSbGVIUXRZMjlzYjNJdGMzVmpZMlZ6Y3lrN1hHNTlYRzVjYmk1MUxYUmxlSFJWYm5OMWNtVWdlMXh1SUNCamIyeHZjam9nZG1GeUtDMHRkUzEwWlhoMExXTnZiRzl5TFhWdWMzVnlaU2s3WEc1OVhHNWNiaTUxTFhSbGVIUk9aWFYwY21Gc0lIdGNiaUFnWTI5c2IzSTZJSFpoY2lndExYVXRkR1Y0ZEMxamIyeHZjaTF1WlhWMGNtRnNLVHRjYm4xY2JseHVMblV0ZEdWNGRGZGhjbTVwYm1jZ2UxeHVJQ0JqYjJ4dmNqb2dkbUZ5S0MwdGRTMTBaWGgwTFdOdmJHOXlMWGRoY201cGJtY3BPMXh1ZlZ4dVhHNHVkUzEwWlhoMFJHRnVaMlZ5SUh0Y2JpQWdZMjlzYjNJNklIWmhjaWd0TFhVdGRHVjRkQzFqYjJ4dmNpMWtZVzVuWlhJcE8xeHVmVnh1WEc0dWRTMTBaWGgwVUdsc1kzSnZkenBpWldadmNtVWdlMXh1SUNCamIyNTBaVzUwT2lBblhGd3dNR0kySnp0Y2JpQWdZMjlzYjNJNklIWmhjaWd0TFhVdGRHVjRkQzFqYjJ4dmNpMXVaWFYwY21Gc0tUdGNiaUFnY0dGa1pHbHVaem9nTUNCallXeGpLSFpoY2lndExYVXRkR1Y0ZEMxeWFIbDBhRzBwSUNvZ01DNHhNalVwTzF4dWZWeHVYRzR1ZFMxMFpYaDBWR0ZpSUh0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUhkcFpIUm9PaUF4TGpKbGJUdGNiaUFnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dWZWeHVYRzR1ZFMxMFpYaDBWR0ZpT21KbFptOXlaU0I3WEc0Z0lHTnZiblJsYm5RNklDZGNYREl4UlRVbk8xeHVJQ0JqYjJ4dmNqb2dkbUZ5S0MwdGRTMTBaWGgwTFdOdmJHOXlMVzVsZFhSeVlXd3BPMXh1ZlZ4dVhHNHVkUzEwWlhoMFUzQmhZMlVnZTF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzU5WEc0dWRTMTBaWGgwVTNCaFkyVTZZbVZtYjNKbElIdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQmpiMjUwWlc1ME9pQW5MaWM3WEc0Z0lHTnZiRzl5T2lCMllYSW9MUzExTFhSbGVIUXRZMjlzYjNJdGJtVjFkSEpoYkNrN1hHNTlYRzVjYmk1MUxYUmxlSFJPYjFObGJHVmpkQ0I3WEc0Z0lIVnpaWEl0YzJWc1pXTjBPaUJ1YjI1bE8xeHVmU0lzSWk4cUtpQkFaR1ZtYVc1bElFZHlhV1E3SUhWelpTQnpkSEpwWTNRZ0tpOWNibHh1T25KdmIzUWdlMXh1SUNBdExVZHlhV1F0Wm05dWRDMXphWHBsT2lBeGNtVnRPMXh1SUNBdExVZHlhV1F0WjNWMGRHVnlMWE5wZW1VNklESXdjSGc3WEc1OVhHNWNiaThxS2x4dUlDb2dRMjl5WlNCbmNtbGtJR052YlhCdmJtVnVkRnh1SUNwY2JpQXFJRVJQSUU1UFZDQmhjSEJzZVNCa2FXMWxibk5wYjI0Z2IzSWdiMlptYzJWMElIVjBhV3hwZEdsbGN5QjBieUIwYUdVZ1lFZHlhV1JnSUdWc1pXMWxiblF1SUVGc2JDQmpaV3hzWEc0Z0tpQjNhV1IwYUhNZ1lXNWtJRzltWm5ObGRITWdjMmh2ZFd4a0lHSmxJR0Z3Y0d4cFpXUWdkRzhnWTJocGJHUWdaM0pwWkNCalpXeHNjeTVjYmlBcUwxeHVYRzR2S2lCSGNtbGtJR052Ym5SaGFXNWxjbHh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b3FYRzRnS2lCQmJHd2dZMjl1ZEdWdWRDQnRkWE4wSUdKbElHTnZiblJoYVc1bFpDQjNhWFJvYVc0Z1kyaHBiR1FnWUVkeWFXUXRZMlZzYkdBZ1pXeGxiV1Z1ZEhNdVhHNGdLbHh1SUNvZ01TNGdRV05qYjNWdWRDQm1iM0lnWW5KdmQzTmxjaUJrWldaaGRXeDBjeUJ2WmlCbGJHVnRaVzUwY3lCMGFHRjBJRzFwWjJoMElHSmxJSFJvWlNCeWIyOTBJRzV2WkdVZ2IyWmNiaUFxSUNBZ0lIUm9aU0JqYjIxd2IyNWxiblF1WEc0Z0tpQXlMaUJTWlcxdmRtVWdhVzUwWlhJdFkyVnNiQ0IzYUdsMFpYTndZV05sSUhSb1lYUWdZWEJ3WldGeWN5QmlaWFIzWldWdUlHQnBibXhwYm1VdFlteHZZMnRnSUdOb2FXeGtYRzRnS2lBZ0lDQmxiR1Z0Wlc1MGN5NWNiaUFxSURNdUlFVnVjM1Z5WlNCamIyNXphWE4wWlc1MElHUmxabUYxYkhRZ1lXeHBaMjV0Wlc1MExseHVJQ292WEc1Y2JpNUhjbWxrSUh0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN0lDOHFJREVnS2k5Y2JpQWdabTl1ZEMxemFYcGxPaUF3T3lBdktpQXlJQ292WEc0Z0lHMWhjbWRwYmpvZ01Ec2dMeW9nTVNBcUwxeHVJQ0J3WVdSa2FXNW5PaUF3T3lBdktpQXhJQ292WEc0Z0lIUmxlSFF0WVd4cFoyNDZJR3hsWm5RN0lDOHFJRE1nS2k5Y2JuMWNibHh1THlvcVhHNGdLaUJOYjJScFptbGxjam9nWTJWdWRHVnlJR0ZzYVdkdUlHRnNiQ0JuY21sa0lHTmxiR3h6WEc0Z0tpOWNibHh1TGtkeWFXUXRMV0ZzYVdkdVEyVnVkR1Z5SUh0Y2JpQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFMXZaR2xtYVdWeU9pQnlhV2RvZENCaGJHbG5iaUJoYkd3Z1ozSnBaQ0JqWld4c2MxeHVJQ292WEc1Y2JpNUhjbWxrTFMxaGJHbG5ibEpwWjJoMElIdGNiaUFnZEdWNGRDMWhiR2xuYmpvZ2NtbG5hSFE3WEc1OVhHNWNiaThxS2x4dUlDb2dUVzlrYVdacFpYSTZJRzFwWkdSc1pTMWhiR2xuYmlCbmNtbGtJR05sYkd4elhHNGdLaTljYmx4dUxrZHlhV1F0TFdGc2FXZHVUV2xrWkd4bElENGdMa2R5YVdRdFkyVnNiQ0I3WEc0Z0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCdGFXUmtiR1U3WEc1OVhHNWNiaThxS2x4dUlDb2dUVzlrYVdacFpYSTZJR0p2ZEhSdmJTMWhiR2xuYmlCbmNtbGtJR05sYkd4elhHNGdLaTljYmx4dUxrZHlhV1F0TFdGc2FXZHVRbTkwZEc5dElENGdMa2R5YVdRdFkyVnNiQ0I3WEc0Z0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCaWIzUjBiMjA3WEc1OVhHNWNiaThxS2x4dUlDb2dUVzlrYVdacFpYSTZJR2QxZEhSbGNuTmNiaUFxWEc0Z0tpQk9UMVJGT2lCMGFHbHpJR05oYmlCMGNtbG5aMlZ5SUdFZ2FHOXlhWHB2Ym5SaGJDQnpZM0p2Ykd4aVlYSWdhV1lnZEdobElHTnZiWEJ2Ym1WdWRDQnBjeUJoY3lCM2FXUmxJR0Z6WEc0Z0tpQjBhR1VnZG1sbGQzQnZjblF1SUZWelpTQndZV1JrYVc1bklHOXVJR0VnWTI5dWRHRnBibVZ5TENCdmNpQmdiM1psY21ac2IzY3RlRHBvYVdSa1pXNWdJSFJ2SUhCeWIzUmxZM1JjYmlBcUlHRm5ZV2x1YzNRZ2FYUXVYRzRnS2k5Y2JseHVMa2R5YVdRdExYZHBkR2hIZFhSMFpYSWdlMXh1SUNCdFlYSm5hVzQ2SURBZ1kyRnNZeWd0TUM0MUlDb2dkbUZ5S0MwdFIzSnBaQzFuZFhSMFpYSXRjMmw2WlNrcE8xeHVmVnh1WEc0dVIzSnBaQzB0ZDJsMGFFZDFkSFJsY2lBK0lDNUhjbWxrTFdObGJHd2dlMXh1SUNCd1lXUmthVzVuT2lBd0lHTmhiR01vTUM0MUlDb2dkbUZ5S0MwdFIzSnBaQzFuZFhSMFpYSXRjMmw2WlNrcE8xeHVmVnh1WEc0dktpQkhjbWxrSUdObGJHeGNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4cUtseHVJQ29nVG04Z1pYaHdiR2xqYVhRZ2QybGtkR2dnWW5rZ1pHVm1ZWFZzZEM0Z1VtVnNlU0J2YmlCamIyMWlhVzVwYm1jZ1lFZHlhV1F0WTJWc2JHQWdkMmwwYUNCaElHUnBiV1Z1YzJsdmJseHVJQ29nZFhScGJHbDBlU0J2Y2lCaElHTnZiWEJ2Ym1WdWRDQmpiR0Z6Y3lCMGFHRjBJR1Y0ZEdWdVpITWdKMmR5YVdRbkxseHVJQ3BjYmlBcUlERXVJRVoxYm1SaGJXVnVkR0ZzY3lCdlppQjBhR1VnYm05dUxXWnNiMkYwSUdkeWFXUWdiR0Y1YjNWMExseHVJQ29nTWk0Z1VtVnpaWFFnWm05dWRDQnphWHBsSUdOb1lXNW5aU0J0WVdSbElHbHVJR0JIY21sa1lDNWNiaUFxSURNdUlFdGxaWEJ6SUdOdmJuUmxiblFnWTI5eWNtVmpkR3g1SUdGc2FXZHVaV1FnZDJsMGFDQjBhR1VnWjNKcFpDQmthWEpsWTNScGIyNHVYRzRnS2lBMExpQkRiMjUwY205c2N5QjJaWEowYVdOaGJDQndiM05wZEdsdmJtbHVaeUJ2WmlCMWJtbDBjeTVjYmlBcUlEVXVJRTFoYTJVZ1kyVnNiSE1nWm5Wc2JDMTNhV1IwYUNCaWVTQmtaV1poZFd4MExseHVJQ292WEc1Y2JpNUhjbWxrTFdObGJHd2dlMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1SUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdJQzhxSURFZ0tpOWNiaUFnWm05dWRDMXphWHBsT2lCMllYSW9MUzFIY21sa0xXWnZiblF0YzJsNlpTazdJQzhxSURJZ0tpOWNiaUFnYldGeVoybHVPaUF3TzF4dUlDQndZV1JrYVc1bk9pQXdPMXh1SUNCMFpYaDBMV0ZzYVdkdU9pQnNaV1owT3lBdktpQXpJQ292WEc0Z0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCMGIzQTdJQzhxSURRZ0tpOWNiaUFnZDJsa2RHZzZJREV3TUNVN0lDOHFJRFVnS2k5Y2JuMWNibHh1THlvcVhHNGdLaUJOYjJScFptbGxjam9nYUc5eWFYcHZiblJoYkd4NUlHTmxiblJsY2lCdmJtVWdkVzVwZEZ4dUlDb2dVMlYwSUdFZ2MzQmxZMmxtYVdNZ2RXNXBkQ0IwYnlCaVpTQm9iM0pwZW05dWRHRnNiSGtnWTJWdWRHVnlaV1F1SUVSdlpYTnVKM1FnWVdabVpXTjBYRzRnS2lCaGJua2diM1JvWlhJZ2RXNXBkSE11SUVOaGJpQnpkR2xzYkNCamIyNTBZV2x1SUdFZ1kyaHBiR1FnWUVkeWFXUmdJRzlpYW1WamRDNWNiaUFxTDF4dVhHNHVSM0pwWkMxalpXeHNMUzFqWlc1MFpYSWdlMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ2JXRnlaMmx1T2lBd0lHRjFkRzg3WEc1OVhHNGlMQ0l2S2lFZ2JtOXliV0ZzYVhwbExtTnpjeUIyTXk0d0xqTWdmQ0JOU1ZRZ1RHbGpaVzV6WlNCOElHZHBkR2gxWWk1amIyMHZibVZqYjJ4aGN5OXViM0p0WVd4cGVtVXVZM056SUNvdlhHNWNiaThxS2x4dUlDb2dNUzRnVTJWMElHUmxabUYxYkhRZ1ptOXVkQ0JtWVcxcGJIa2dkRzhnYzJGdWN5MXpaWEpwWmk1Y2JpQXFJREl1SUZCeVpYWmxiblFnYVU5VElHRnVaQ0JKUlNCMFpYaDBJSE5wZW1VZ1lXUnFkWE4wSUdGbWRHVnlJR1JsZG1salpTQnZjbWxsYm5SaGRHbHZiaUJqYUdGdVoyVXNYRzRnS2lBZ0lDQjNhWFJvYjNWMElHUnBjMkZpYkdsdVp5QjFjMlZ5SUhwdmIyMHVYRzRnS2k5Y2JseHVhSFJ0YkNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCellXNXpMWE5sY21sbU95QXZLaUF4SUNvdlhHNGdJQzF0Y3kxMFpYaDBMWE5wZW1VdFlXUnFkWE4wT2lBeE1EQWxPeUF2S2lBeUlDb3ZYRzRnSUMxM1pXSnJhWFF0ZEdWNGRDMXphWHBsTFdGa2FuVnpkRG9nTVRBd0pUc2dMeW9nTWlBcUwxeHVmVnh1WEc0dktpcGNiaUFxSUZKbGJXOTJaU0JrWldaaGRXeDBJRzFoY21kcGJpNWNiaUFxTDF4dVhHNWliMlI1SUh0Y2JpQWdiV0Z5WjJsdU9pQXdPMXh1ZlZ4dVhHNHZLaUJJVkUxTU5TQmthWE53YkdGNUlHUmxabWx1YVhScGIyNXpYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpcGNiaUFxSUVOdmNuSmxZM1FnWUdKc2IyTnJZQ0JrYVhOd2JHRjVJRzV2ZENCa1pXWnBibVZrSUdadmNpQmhibmtnU0ZSTlREVWdaV3hsYldWdWRDQnBiaUJKUlNBNEx6a3VYRzRnS2lCRGIzSnlaV04wSUdCaWJHOWphMkFnWkdsemNHeGhlU0J1YjNRZ1pHVm1hVzVsWkNCbWIzSWdZR1JsZEdGcGJITmdJRzl5SUdCemRXMXRZWEo1WUNCcGJpQkpSU0F4TUM4eE1WeHVJQ29nWVc1a0lFWnBjbVZtYjNndVhHNGdLaUJEYjNKeVpXTjBJR0JpYkc5amEyQWdaR2x6Y0d4aGVTQnViM1FnWkdWbWFXNWxaQ0JtYjNJZ1lHMWhhVzVnSUdsdUlFbEZJREV4TGx4dUlDb3ZYRzVjYm1GeWRHbGpiR1VzWEc1aGMybGtaU3hjYm1SbGRHRnBiSE1zWEc1bWFXZGpZWEIwYVc5dUxGeHVabWxuZFhKbExGeHVabTl2ZEdWeUxGeHVhR1ZoWkdWeUxGeHVhR2R5YjNWd0xGeHViV0ZwYml4Y2JtMWxiblVzWEc1dVlYWXNYRzV6WldOMGFXOXVMRnh1YzNWdGJXRnllU0I3WEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dWZWeHVYRzR2S2lwY2JpQXFJREV1SUVOdmNuSmxZM1FnWUdsdWJHbHVaUzFpYkc5amEyQWdaR2x6Y0d4aGVTQnViM1FnWkdWbWFXNWxaQ0JwYmlCSlJTQTRMemt1WEc0Z0tpQXlMaUJPYjNKdFlXeHBlbVVnZG1WeWRHbGpZV3dnWVd4cFoyNXRaVzUwSUc5bUlHQndjbTluY21WemMyQWdhVzRnUTJoeWIyMWxMQ0JHYVhKbFptOTRMQ0JoYm1RZ1QzQmxjbUV1WEc0Z0tpOWNibHh1WVhWa2FXOHNYRzVqWVc1MllYTXNYRzV3Y205bmNtVnpjeXhjYm5acFpHVnZJSHRjYmlBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPeUF2S2lBeElDb3ZYRzRnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJpWVhObGJHbHVaVHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGQnlaWFpsYm5RZ2JXOWtaWEp1SUdKeWIzZHpaWEp6SUdaeWIyMGdaR2x6Y0d4aGVXbHVaeUJnWVhWa2FXOWdJSGRwZEdodmRYUWdZMjl1ZEhKdmJITXVYRzRnS2lCU1pXMXZkbVVnWlhoalpYTnpJR2hsYVdkb2RDQnBiaUJwVDFNZ05TQmtaWFpwWTJWekxseHVJQ292WEc1Y2JtRjFaR2x2T201dmRDaGJZMjl1ZEhKdmJITmRLU0I3WEc0Z0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lHaGxhV2RvZERvZ01EdGNibjFjYmx4dUx5b3FYRzRnS2lCQlpHUnlaWE56SUdCYmFHbGtaR1Z1WFdBZ2MzUjViR2x1WnlCdWIzUWdjSEpsYzJWdWRDQnBiaUJKUlNBNEx6a3ZNVEF1WEc0Z0tpQklhV1JsSUhSb1pTQmdkR1Z0Y0d4aGRHVmdJR1ZzWlcxbGJuUWdhVzRnU1VVZ09DODVMekV3THpFeExDQlRZV1poY21rc0lHRnVaQ0JHYVhKbFptOTRJRHdnTWpJdVhHNGdLaTljYmx4dVcyaHBaR1JsYmwwc1hHNTBaVzF3YkdGMFpTQjdYRzRnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzU5WEc1Y2JpOHFJRXhwYm10elhHNGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzR2S2lwY2JpQXFJRkpsYlc5MlpTQjBhR1VnWjNKaGVTQmlZV05yWjNKdmRXNWtJR052Ykc5eUlHWnliMjBnWVdOMGFYWmxJR3hwYm10eklHbHVJRWxGSURFd0xseHVJQ292WEc1Y2JtRWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNibjFjYmx4dUx5b3FYRzRnS2lCSmJYQnliM1psSUhKbFlXUmhZbWxzYVhSNUlHOW1JR1p2WTNWelpXUWdaV3hsYldWdWRITWdkMmhsYmlCMGFHVjVJR0Z5WlNCaGJITnZJR2x1SUdGdVhHNGdLaUJoWTNScGRtVXZhRzkyWlhJZ2MzUmhkR1V1WEc0Z0tpOWNibHh1WVRwaFkzUnBkbVVzWEc1aE9taHZkbVZ5SUh0Y2JpQWdiM1YwYkdsdVpUb2dNRHRjYm4xY2JseHVMeW9nVkdWNGRDMXNaWFpsYkNCelpXMWhiblJwWTNOY2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaThxS2x4dUlDb2dRV1JrY21WemN5QnpkSGxzYVc1bklHNXZkQ0J3Y21WelpXNTBJR2x1SUVsRklEZ3ZPUzh4TUM4eE1Td2dVMkZtWVhKcExDQmhibVFnUTJoeWIyMWxMbHh1SUNvdlhHNWNibUZpWW5KYmRHbDBiR1ZkSUh0Y2JpQWdZbTl5WkdWeUxXSnZkSFJ2YlRvZ01YQjRJR1J2ZEhSbFpEdGNibjFjYmx4dUx5b3FYRzRnS2lCQlpHUnlaWE56SUhOMGVXeGxJSE5sZENCMGJ5QmdZbTlzWkdWeVlDQnBiaUJHYVhKbFptOTRJRFFyTENCVFlXWmhjbWtzSUdGdVpDQkRhSEp2YldVdVhHNGdLaTljYmx4dVlpeGNibk4wY205dVp5QjdYRzRnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrTzF4dWZWeHVYRzR2S2lwY2JpQXFJRUZrWkhKbGMzTWdjM1I1YkdsdVp5QnViM1FnY0hKbGMyVnVkQ0JwYmlCVFlXWmhjbWtnWVc1a0lFTm9jbTl0WlM1Y2JpQXFMMXh1WEc1a1ptNGdlMXh1SUNCbWIyNTBMWE4wZVd4bE9pQnBkR0ZzYVdNN1hHNTlYRzVjYmk4cUtseHVJQ29nUVdSa2NtVnpjeUIyWVhKcFlXSnNaU0JnYURGZ0lHWnZiblF0YzJsNlpTQmhibVFnYldGeVoybHVJSGRwZEdocGJpQmdjMlZqZEdsdmJtQWdZVzVrSUdCaGNuUnBZMnhsWUZ4dUlDb2dZMjl1ZEdWNGRITWdhVzRnUm1seVpXWnZlQ0EwS3l3Z1UyRm1ZWEpwTENCaGJtUWdRMmh5YjIxbExseHVJQ292WEc1Y2JtZ3hJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXlaVzA3WEc0Z0lHMWhjbWRwYmpvZ01DNDJOMlZ0SURBN1hHNTlYRzVjYmk4cUtseHVJQ29nUVdSa2NtVnpjeUJ6ZEhsc2FXNW5JRzV2ZENCd2NtVnpaVzUwSUdsdUlFbEZJRGd2T1M1Y2JpQXFMMXh1WEc1dFlYSnJJSHRjYmlBZ1ltRmphMmR5YjNWdVpEb2dJMlptTUR0Y2JpQWdZMjlzYjNJNklDTXdNREE3WEc1OVhHNWNiaThxS2x4dUlDb2dRV1JrY21WemN5QnBibU52Ym5OcGMzUmxiblFnWVc1a0lIWmhjbWxoWW14bElHWnZiblFnYzJsNlpTQnBiaUJoYkd3Z1luSnZkM05sY25NdVhHNGdLaTljYmx4dWMyMWhiR3dnZTF4dUlDQm1iMjUwTFhOcGVtVTZJRGd3SlR0Y2JuMWNibHh1THlvcVhHNGdLaUJRY21WMlpXNTBJR0J6ZFdKZ0lHRnVaQ0JnYzNWd1lDQmhabVpsWTNScGJtY2dZR3hwYm1VdGFHVnBaMmgwWUNCcGJpQmhiR3dnWW5KdmQzTmxjbk11WEc0Z0tpOWNibHh1YzNWaUxGeHVjM1Z3SUh0Y2JpQWdabTl1ZEMxemFYcGxPaUEzTlNVN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBd08xeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCaVlYTmxiR2x1WlR0Y2JuMWNibHh1YzNWd0lIdGNiaUFnZEc5d09pQXRNQzQxWlcwN1hHNTlYRzVjYm5OMVlpQjdYRzRnSUdKdmRIUnZiVG9nTFRBdU1qVmxiVHRjYm4xY2JseHVMeW9nUlcxaVpXUmtaV1FnWTI5dWRHVnVkRnh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b3FYRzRnS2lCU1pXMXZkbVVnWW05eVpHVnlJSGRvWlc0Z2FXNXphV1JsSUdCaFlDQmxiR1Z0Wlc1MElHbHVJRWxGSURndk9TOHhNQzVjYmlBcUwxeHVYRzVwYldjZ2UxeHVJQ0JpYjNKa1pYSTZJREE3WEc1OVhHNWNiaThxS2x4dUlDb2dRMjl5Y21WamRDQnZkbVZ5Wm14dmR5QnViM1FnYUdsa1pHVnVJR2x1SUVsRklEa3ZNVEF2TVRFdVhHNGdLaTljYmx4dWMzWm5PbTV2ZENnNmNtOXZkQ2tnZTF4dUlDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVmVnh1WEc0dktpQkhjbTkxY0dsdVp5QmpiMjUwWlc1MFhHNGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzR2S2lwY2JpQXFJRUZrWkhKbGMzTWdiV0Z5WjJsdUlHNXZkQ0J3Y21WelpXNTBJR2x1SUVsRklEZ3ZPU0JoYm1RZ1UyRm1ZWEpwTGx4dUlDb3ZYRzVjYm1acFozVnlaU0I3WEc0Z0lHMWhjbWRwYmpvZ01XVnRJRFF3Y0hnN1hHNTlYRzVjYmk4cUtseHVJQ29nUVdSa2NtVnpjeUJrYVdabVpYSmxibU5sY3lCaVpYUjNaV1Z1SUVacGNtVm1iM2dnWVc1a0lHOTBhR1Z5SUdKeWIzZHpaWEp6TGx4dUlDb3ZYRzVjYm1oeUlIdGNiaUFnWW05NExYTnBlbWx1WnpvZ1kyOXVkR1Z1ZEMxaWIzZzdYRzRnSUdobGFXZG9kRG9nTUR0Y2JuMWNibHh1THlvcVhHNGdLaUJEYjI1MFlXbHVJRzkyWlhKbWJHOTNJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNiaUFxTDF4dVhHNXdjbVVnZTF4dUlDQnZkbVZ5Wm14dmR6b2dZWFYwYnp0Y2JuMWNibHh1THlvcVhHNGdLaUJCWkdSeVpYTnpJRzlrWkNCZ1pXMWdMWFZ1YVhRZ1ptOXVkQ0J6YVhwbElISmxibVJsY21sdVp5QnBiaUJoYkd3Z1luSnZkM05sY25NdVhHNGdLaTljYmx4dVkyOWtaU3hjYm10aVpDeGNibkJ5WlN4Y2JuTmhiWEFnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nYlc5dWIzTndZV05sTENCdGIyNXZjM0JoWTJVN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVdWdE8xeHVmVnh1WEc0dktpQkdiM0p0YzF4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMeW9xWEc0Z0tpQkxibTkzYmlCc2FXMXBkR0YwYVc5dU9pQmllU0JrWldaaGRXeDBMQ0JEYUhKdmJXVWdZVzVrSUZOaFptRnlhU0J2YmlCUFV5QllJR0ZzYkc5M0lIWmxjbmtnYkdsdGFYUmxaRnh1SUNvZ2MzUjViR2x1WnlCdlppQmdjMlZzWldOMFlDd2dkVzVzWlhOeklHRWdZR0p2Y21SbGNtQWdjSEp2Y0dWeWRIa2dhWE1nYzJWMExseHVJQ292WEc1Y2JpOHFLbHh1SUNvZ01TNGdRMjl5Y21WamRDQmpiMnh2Y2lCdWIzUWdZbVZwYm1jZ2FXNW9aWEpwZEdWa0xseHVJQ29nSUNBZ1MyNXZkMjRnYVhOemRXVTZJR0ZtWm1WamRITWdZMjlzYjNJZ2IyWWdaR2x6WVdKc1pXUWdaV3hsYldWdWRITXVYRzRnS2lBeUxpQkRiM0p5WldOMElHWnZiblFnY0hKdmNHVnlkR2xsY3lCdWIzUWdZbVZwYm1jZ2FXNW9aWEpwZEdWa0xseHVJQ29nTXk0Z1FXUmtjbVZ6Y3lCdFlYSm5hVzV6SUhObGRDQmthV1ptWlhKbGJuUnNlU0JwYmlCR2FYSmxabTk0SURRckxDQlRZV1poY21rc0lHRnVaQ0JEYUhKdmJXVXVYRzRnS2k5Y2JseHVZblYwZEc5dUxGeHVhVzV3ZFhRc1hHNXZjSFJuY205MWNDeGNibk5sYkdWamRDeGNiblJsZUhSaGNtVmhJSHRjYmlBZ1kyOXNiM0k2SUdsdWFHVnlhWFE3SUM4cUlERWdLaTljYmlBZ1ptOXVkRG9nYVc1b1pYSnBkRHNnTHlvZ01pQXFMMXh1SUNCdFlYSm5hVzQ2SURBN0lDOHFJRE1nS2k5Y2JuMWNibHh1THlvcVhHNGdLaUJCWkdSeVpYTnpJR0J2ZG1WeVpteHZkMkFnYzJWMElIUnZJR0JvYVdSa1pXNWdJR2x1SUVsRklEZ3ZPUzh4TUM4eE1TNWNiaUFxTDF4dVhHNWlkWFIwYjI0Z2UxeHVJQ0J2ZG1WeVpteHZkem9nZG1semFXSnNaVHRjYm4xY2JseHVMeW9xWEc0Z0tpQkJaR1J5WlhOeklHbHVZMjl1YzJsemRHVnVkQ0JnZEdWNGRDMTBjbUZ1YzJadmNtMWdJR2x1YUdWeWFYUmhibU5sSUdadmNpQmdZblYwZEc5dVlDQmhibVFnWUhObGJHVmpkR0F1WEc0Z0tpQkJiR3dnYjNSb1pYSWdabTl5YlNCamIyNTBjbTlzSUdWc1pXMWxiblJ6SUdSdklHNXZkQ0JwYm1obGNtbDBJR0IwWlhoMExYUnlZVzV6Wm05eWJXQWdkbUZzZFdWekxseHVJQ29nUTI5eWNtVmpkQ0JnWW5WMGRHOXVZQ0J6ZEhsc1pTQnBibWhsY21sMFlXNWpaU0JwYmlCR2FYSmxabTk0TENCSlJTQTRMemt2TVRBdk1URXNJR0Z1WkNCUGNHVnlZUzVjYmlBcUlFTnZjbkpsWTNRZ1lITmxiR1ZqZEdBZ2MzUjViR1VnYVc1b1pYSnBkR0Z1WTJVZ2FXNGdSbWx5WldadmVDNWNiaUFxTDF4dVhHNWlkWFIwYjI0c1hHNXpaV3hsWTNRZ2UxeHVJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dibTl1WlR0Y2JuMWNibHh1THlvcVhHNGdLaUF4TGlCQmRtOXBaQ0IwYUdVZ1YyVmlTMmwwSUdKMVp5QnBiaUJCYm1SeWIybGtJRFF1TUM0cUlIZG9aWEpsSUNneUtTQmtaWE4wY205NWN5QnVZWFJwZG1VZ1lHRjFaR2x2WUZ4dUlDb2dJQ0FnWVc1a0lHQjJhV1JsYjJBZ1kyOXVkSEp2YkhNdVhHNGdLaUF5TGlCRGIzSnlaV04wSUdsdVlXSnBiR2wwZVNCMGJ5QnpkSGxzWlNCamJHbGphMkZpYkdVZ1lHbHVjSFYwWUNCMGVYQmxjeUJwYmlCcFQxTXVYRzRnS2lBekxpQkpiWEJ5YjNabElIVnpZV0pwYkdsMGVTQmhibVFnWTI5dWMybHpkR1Z1WTNrZ2IyWWdZM1Z5YzI5eUlITjBlV3hsSUdKbGRIZGxaVzRnYVcxaFoyVXRkSGx3WlZ4dUlDb2dJQ0FnWUdsdWNIVjBZQ0JoYm1RZ2IzUm9aWEp6TGx4dUlDb3ZYRzVjYm1KMWRIUnZiaXhjYm1oMGJXd2dhVzV3ZFhSYmRIbHdaVDFjSW1KMWRIUnZibHdpWFN3Z0x5b2dNU0FxTDF4dWFXNXdkWFJiZEhsd1pUMWNJbkpsYzJWMFhDSmRMRnh1YVc1d2RYUmJkSGx3WlQxY0luTjFZbTFwZEZ3aVhTQjdYRzRnSUMxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRvZ1luVjBkRzl1T3lBdktpQXlJQ292WEc0Z0lHTjFjbk52Y2pvZ2NHOXBiblJsY2pzZ0x5b2dNeUFxTDF4dWZWeHVYRzR2S2lwY2JpQXFJRkpsTFhObGRDQmtaV1poZFd4MElHTjFjbk52Y2lCbWIzSWdaR2x6WVdKc1pXUWdaV3hsYldWdWRITXVYRzRnS2k5Y2JseHVZblYwZEc5dVcyUnBjMkZpYkdWa1hTeGNibWgwYld3Z2FXNXdkWFJiWkdsellXSnNaV1JkSUh0Y2JpQWdZM1Z5YzI5eU9pQmtaV1poZFd4ME8xeHVmVnh1WEc0dktpcGNiaUFxSUZKbGJXOTJaU0JwYm01bGNpQndZV1JrYVc1bklHRnVaQ0JpYjNKa1pYSWdhVzRnUm1seVpXWnZlQ0EwS3k1Y2JpQXFMMXh1WEc1aWRYUjBiMjQ2T2kxdGIzb3RabTlqZFhNdGFXNXVaWElzWEc1cGJuQjFkRG82TFcxdmVpMW1iMk4xY3kxcGJtNWxjaUI3WEc0Z0lHSnZjbVJsY2pvZ01EdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JuMWNibHh1THlvcVhHNGdLaUJCWkdSeVpYTnpJRVpwY21WbWIzZ2dOQ3NnYzJWMGRHbHVaeUJnYkdsdVpTMW9aV2xuYUhSZ0lHOXVJR0JwYm5CMWRHQWdkWE5wYm1jZ1lDRnBiWEJ2Y25SaGJuUmdJR2x1WEc0Z0tpQjBhR1VnVlVFZ2MzUjViR1Z6YUdWbGRDNWNiaUFxTDF4dVhHNXBibkIxZENCN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lCdWIzSnRZV3c3WEc1OVhHNWNiaThxS2x4dUlDb2dTWFFuY3lCeVpXTnZiVzFsYm1SbFpDQjBhR0YwSUhsdmRTQmtiMjRuZENCaGRIUmxiWEIwSUhSdklITjBlV3hsSUhSb1pYTmxJR1ZzWlcxbGJuUnpMbHh1SUNvZ1JtbHlaV1p2ZUNkeklHbHRjR3hsYldWdWRHRjBhVzl1SUdSdlpYTnVKM1FnY21WemNHVmpkQ0JpYjNndGMybDZhVzVuTENCd1lXUmthVzVuTENCdmNpQjNhV1IwYUM1Y2JpQXFYRzRnS2lBeExpQkJaR1J5WlhOeklHSnZlQ0J6YVhwcGJtY2djMlYwSUhSdklHQmpiMjUwWlc1MExXSnZlR0FnYVc0Z1NVVWdPQzg1THpFd0xseHVJQ29nTWk0Z1VtVnRiM1psSUdWNFkyVnpjeUJ3WVdSa2FXNW5JR2x1SUVsRklEZ3ZPUzh4TUM1Y2JpQXFMMXh1WEc1cGJuQjFkRnQwZVhCbFBWd2lZMmhsWTJ0aWIzaGNJbDBzWEc1cGJuQjFkRnQwZVhCbFBWd2ljbUZrYVc5Y0lsMGdlMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPeUF2S2lBeElDb3ZYRzRnSUhCaFpHUnBibWM2SURBN0lDOHFJRElnS2k5Y2JuMWNibHh1THlvcVhHNGdLaUJHYVhnZ2RHaGxJR04xY25OdmNpQnpkSGxzWlNCbWIzSWdRMmh5YjIxbEozTWdhVzVqY21WdFpXNTBMMlJsWTNKbGJXVnVkQ0JpZFhSMGIyNXpMaUJHYjNJZ1kyVnlkR0ZwYmx4dUlDb2dZR1p2Ym5RdGMybDZaV0FnZG1Gc2RXVnpJRzltSUhSb1pTQmdhVzV3ZFhSZ0xDQnBkQ0JqWVhWelpYTWdkR2hsSUdOMWNuTnZjaUJ6ZEhsc1pTQnZaaUIwYUdWY2JpQXFJR1JsWTNKbGJXVnVkQ0JpZFhSMGIyNGdkRzhnWTJoaGJtZGxJR1p5YjIwZ1lHUmxabUYxYkhSZ0lIUnZJR0IwWlhoMFlDNWNiaUFxTDF4dVhHNXBibkIxZEZ0MGVYQmxQVndpYm5WdFltVnlYQ0pkT2pvdGQyVmlhMmwwTFdsdWJtVnlMWE53YVc0dFluVjBkRzl1TEZ4dWFXNXdkWFJiZEhsd1pUMWNJbTUxYldKbGNsd2lYVG82TFhkbFltdHBkQzF2ZFhSbGNpMXpjR2x1TFdKMWRIUnZiaUI3WEc0Z0lHaGxhV2RvZERvZ1lYVjBienRjYm4xY2JseHVMeW9xWEc0Z0tpQXhMaUJCWkdSeVpYTnpJR0JoY0hCbFlYSmhibU5sWUNCelpYUWdkRzhnWUhObFlYSmphR1pwWld4a1lDQnBiaUJUWVdaaGNta2dZVzVrSUVOb2NtOXRaUzVjYmlBcUlESXVJRUZrWkhKbGMzTWdZR0p2ZUMxemFYcHBibWRnSUhObGRDQjBieUJnWW05eVpHVnlMV0p2ZUdBZ2FXNGdVMkZtWVhKcElHRnVaQ0JEYUhKdmJXVXVYRzRnS2k5Y2JseHVhVzV3ZFhSYmRIbHdaVDFjSW5ObFlYSmphRndpWFNCN1hHNGdJQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVG9nZEdWNGRHWnBaV3hrT3lBdktpQXhJQ292WEc0Z0lHSnZlQzF6YVhwcGJtYzZJR052Ym5SbGJuUXRZbTk0T3lBdktpQXlJQ292WEc1OVhHNWNiaThxS2x4dUlDb2dVbVZ0YjNabElHbHVibVZ5SUhCaFpHUnBibWNnWVc1a0lITmxZWEpqYUNCallXNWpaV3dnWW5WMGRHOXVJR2x1SUZOaFptRnlhU0JoYm1RZ1EyaHliMjFsSUc5dUlFOVRJRmd1WEc0Z0tpQlRZV1poY21rZ0tHSjFkQ0J1YjNRZ1EyaHliMjFsS1NCamJHbHdjeUIwYUdVZ1kyRnVZMlZzSUdKMWRIUnZiaUIzYUdWdUlIUm9aU0J6WldGeVkyZ2dhVzV3ZFhRZ2FHRnpYRzRnS2lCd1lXUmthVzVuSUNoaGJtUWdZSFJsZUhSbWFXVnNaR0FnWVhCd1pXRnlZVzVqWlNrdVhHNGdLaTljYmx4dWFXNXdkWFJiZEhsd1pUMWNJbk5sWVhKamFGd2lYVG82TFhkbFltdHBkQzF6WldGeVkyZ3RZMkZ1WTJWc0xXSjFkSFJ2Yml4Y2JtbHVjSFYwVzNSNWNHVTlYQ0p6WldGeVkyaGNJbDA2T2kxM1pXSnJhWFF0YzJWaGNtTm9MV1JsWTI5eVlYUnBiMjRnZTF4dUlDQXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJRzV2Ym1VN1hHNTlYRzVjYmk4cUtseHVJQ29nUkdWbWFXNWxJR052Ym5OcGMzUmxiblFnWW05eVpHVnlMQ0J0WVhKbmFXNHNJR0Z1WkNCd1lXUmthVzVuTGx4dUlDb3ZYRzVjYm1acFpXeGtjMlYwSUh0Y2JpQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdJMk13WXpCak1EdGNiaUFnYldGeVoybHVPaUF3SURKd2VEdGNiaUFnY0dGa1pHbHVaem9nTUM0ek5XVnRJREF1TmpJMVpXMGdNQzQzTldWdE8xeHVmVnh1WEc0dktpcGNiaUFxSURFdUlFTnZjbkpsWTNRZ1lHTnZiRzl5WUNCdWIzUWdZbVZwYm1jZ2FXNW9aWEpwZEdWa0lHbHVJRWxGSURndk9TOHhNQzh4TVM1Y2JpQXFJREl1SUZKbGJXOTJaU0J3WVdSa2FXNW5JSE52SUhCbGIzQnNaU0JoY21WdUozUWdZMkYxWjJoMElHOTFkQ0JwWmlCMGFHVjVJSHBsY204Z2IzVjBJR1pwWld4a2MyVjBjeTVjYmlBcUwxeHVYRzVzWldkbGJtUWdlMXh1SUNCaWIzSmtaWEk2SURBN0lDOHFJREVnS2k5Y2JpQWdjR0ZrWkdsdVp6b2dNRHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCa1pXWmhkV3gwSUhabGNuUnBZMkZzSUhOamNtOXNiR0poY2lCcGJpQkpSU0E0THprdk1UQXZNVEV1WEc0Z0tpOWNibHh1ZEdWNGRHRnlaV0VnZTF4dUlDQnZkbVZ5Wm14dmR6b2dZWFYwYnp0Y2JuMWNibHh1THlvcVhHNGdLaUJFYjI0bmRDQnBibWhsY21sMElIUm9aU0JnWm05dWRDMTNaV2xuYUhSZ0lDaGhjSEJzYVdWa0lHSjVJR0VnY25Wc1pTQmhZbTkyWlNrdVhHNGdLaUJPVDFSRk9pQjBhR1VnWkdWbVlYVnNkQ0JqWVc1dWIzUWdjMkZtWld4NUlHSmxJR05vWVc1blpXUWdhVzRnUTJoeWIyMWxJR0Z1WkNCVFlXWmhjbWtnYjI0Z1QxTWdXQzVjYmlBcUwxeHVYRzV2Y0hSbmNtOTFjQ0I3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a08xeHVmVnh1WEc0dktpQlVZV0pzWlhOY2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaThxS2x4dUlDb2dVbVZ0YjNabElHMXZjM1FnYzNCaFkybHVaeUJpWlhSM1pXVnVJSFJoWW14bElHTmxiR3h6TGx4dUlDb3ZYRzVjYm5SaFlteGxJSHRjYmlBZ1ltOXlaR1Z5TFdOdmJHeGhjSE5sT2lCamIyeHNZWEJ6WlR0Y2JpQWdZbTl5WkdWeUxYTndZV05wYm1jNklEQTdYRzU5WEc1Y2JuUmtMRnh1ZEdnZ2UxeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dWZWeHVJaXdpT25KdmIzUWdlMXh1SUNBdExXSmhjMlV0Wm05eWJTMWpiMnh2Y2kxd2JHRmpaV2h2YkdSbGNqb2dJems1T1R0Y2JuMWNibHh1T2pvdGQyVmlhMmwwTFdsdWNIVjBMWEJzWVdObGFHOXNaR1Z5SUh0Y2JpQWdMeW9nVjJWaVMybDBJR0p5YjNkelpYSnpJQ292WEc0Z0lHTnZiRzl5T2lCMllYSW9MUzFpWVhObExXWnZjbTB0WTI5c2IzSXRjR3hoWTJWb2IyeGtaWElwTzF4dWZWeHVPaTF0YjNvdGNHeGhZMlZvYjJ4a1pYSWdlMXh1SUNBdktpQk5iM3BwYkd4aElFWnBjbVZtYjNnZ05DQjBieUF4T0NBcUwxeHVJQ0JqYjJ4dmNqb2dkbUZ5S0MwdFltRnpaUzFtYjNKdExXTnZiRzl5TFhCc1lXTmxhRzlzWkdWeUtUdGNibjFjYmpvNkxXMXZlaTF3YkdGalpXaHZiR1JsY2lCN1hHNGdJQzhxSUUxdmVtbHNiR0VnUm1seVpXWnZlQ0F4T1NzZ0tpOWNiaUFnWTI5c2IzSTZJSFpoY2lndExXSmhjMlV0Wm05eWJTMWpiMnh2Y2kxd2JHRmpaV2h2YkdSbGNpazdYRzU5WEc0NkxXMXpMV2x1Y0hWMExYQnNZV05sYUc5c1pHVnlJSHRjYmlBZ0x5b2dTVzUwWlhKdVpYUWdSWGh3Ykc5eVpYSWdNVEFySUNvdlhHNGdJR052Ykc5eU9pQjJZWElvTFMxaVlYTmxMV1p2Y20wdFkyOXNiM0l0Y0d4aFkyVm9iMnhrWlhJcE8xeHVmVnh1WEc1aWRYUjBiMjRzWEc1b2RHMXNJR2x1Y0hWMFczUjVjR1U5WENKaWRYUjBiMjVjSWwwc1hHNXBibkIxZEZ0MGVYQmxQVndpY21WelpYUmNJbDBzWEc1cGJuQjFkRnQwZVhCbFBWd2ljM1ZpYldsMFhDSmRJSHRjYmlBZ0xYZGxZbXRwZEMxaGNIQmxZWEpoYm1ObE9pQnViMjVsTzF4dWZWeHVYRzR2S2lCU1pYTmxkQ0JpZFhSMGIyNXpJSE52SUhSb1pYa2dZMkZ1SUdKbElIVnpaV1FnYkdsclpTQnNhVzVyY3lBcUwxeHVZblYwZEc5dUlIdGNiaUFnWW1GamEyZHliM1Z1WkRvZ2RISmhibk53WVhKbGJuUTdYRzRnSUdKdmNtUmxjam9nTUR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2dhVzVvWlhKcGREdGNibjFjYmx4dUx5b3FYRzRnS2lCWGIzSnJJR0Z5YjNWdVpDQmhJRVpwY21WbWIzZ3ZTVVVnWW5WbklIZG9aWEpsSUhSb1pTQjBjbUZ1YzNCaGNtVnVkQ0JnWW5WMGRHOXVZQ0JpWVdOclozSnZkVzVrWEc0Z0tpQnlaWE4xYkhSeklHbHVJR0VnYkc5emN5QnZaaUIwYUdVZ1pHVm1ZWFZzZENCZ1luVjBkRzl1WUNCbWIyTjFjeUJ6ZEhsc1pYTXVYRzRnS2k5Y2JseHVZblYwZEc5dU9tWnZZM1Z6SUh0Y2JpQWdiM1YwYkdsdVpUb2dNWEI0SUdSdmRIUmxaRHRjYmlBZ2IzVjBiR2x1WlRvZ05YQjRJR0YxZEc4Z0xYZGxZbXRwZEMxbWIyTjFjeTF5YVc1bkxXTnZiRzl5TzF4dWZWeHVYRzVpZFhSMGIyNDZhRzkyWlhJc1hHNWlkWFIwYjI0NllXTjBhWFpsSUh0Y2JpQWdiM1YwYkdsdVpUb2dibTl1WlR0Y2JuMWNibHh1Wm1sbGJHUnpaWFFnZTF4dUlDQmliM0prWlhJNklEQTdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYm4xY2JseHVhVzV3ZFhSYmRIbHdaVDFjSW5SbGVIUmNJbDBzWEc1cGJuQjFkRnQwZVhCbFBWd2ljR0Z6YzNkdmNtUmNJbDBzWEc1cGJuQjFkRnQwZVhCbFBWd2laR0YwWlZ3aVhTeGNibWx1Y0hWMFczUjVjR1U5WENKa1lYUmxkR2x0WlZ3aVhTeGNibWx1Y0hWMFczUjVjR1U5WENKbGJXRnBiRndpWFN4Y2JtbHVjSFYwVzNSNWNHVTlYQ0p1ZFcxaVpYSmNJbDBzWEc1cGJuQjFkRnQwZVhCbFBWd2ljMlZoY21Ob1hDSmRMRnh1YVc1d2RYUmJkSGx3WlQxY0luUmxiRndpWFN4Y2JtbHVjSFYwVzNSNWNHVTlYQ0owYVcxbFhDSmRMRnh1YVc1d2RYUmJkSGx3WlQxY0luVnliRndpWFN4Y2JuUmxlSFJoY21WaElIdGNiaUFnTFhkbFltdHBkQzFoY0hCbFlYSmhibU5sT2lCdWIyNWxPMXh1SUNCdmRYUnNhVzVsT2lCdWIyNWxPMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1ZlZ4dUlpd2lPbkp2YjNRZ2UxeHVJQ0F0TFdKaGMyVXRabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHVJQ0F0TFdKaGMyVXRabTl1ZEMxbVlXMXBiSGs2SUNkSVpXeDJaWFJwWTJFZ1RtVjFaU2NzSUVobGJIWmxkR2xqWVU1bGRXVXNJRWhsYkhabGRHbGpZU3dnUVhKcFlXd3NJSE5oYm5NdGMyVnlhV1k3WEc0Z0lDMHRZbUZ6WlMxamIyeHZjaTFtYjI1ME9pQWpORFEwWXpVME8xeHVJQ0F0TFdKaGMyVXRiR2x1WlMxb1pXbG5hSFE2SURFdU5UdGNiaUFnTFMxaVlYTmxMV0puTFdOdmJHOXlPaUFqWldWbE8xeHVmVnh1WEc1QVkyaGhjbk5sZENBblZWUkdMVGduTzF4dVhHNUFMVzF6TFhacFpYZHdiM0owSUh0Y2JpQWdkMmxrZEdnNklHUmxkbWxqWlMxM2FXUjBhRHRjYm4xY2JseHVRSFpwWlhkd2IzSjBJSHRjYmlBZ2QybGtkR2c2SUdSbGRtbGpaUzEzYVdSMGFEdGNibjFjYmx4dWFIUnRiQ0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUIyWVhJb0xTMWlZWE5sTFdadmJuUXRabUZ0YVd4NUtUdGNiaUFnWm05dWRDMXphWHBsT2lCMllYSW9MUzFpWVhObExXWnZiblF0YzJsNlpTazdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQjJZWElvTFMxaVlYTmxMV3hwYm1VdGFHVnBaMmgwS1R0Y2JpQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JpQWdZMjlzYjNJNklIWmhjaWd0TFdKaGMyVXRZMjlzYjNJdFptOXVkQ2s3WEc1OVhHNWNiaW9zWEc0cU9tSmxabTl5WlN4Y2JpbzZZV1owWlhJZ2UxeHVJQ0JpYjNndGMybDZhVzVuT2lCcGJtaGxjbWwwTzF4dWZWeHVYRzVpYjJSNUlIdGNiaUFnYldsdUxYZHBaSFJvT2lBek1qQndlRHRjYmlBZ1ltRmphMmR5YjNWdVpEb2dkbUZ5S0MwdFltRnpaUzFpWnkxamIyeHZjaWs3WEc1OVhHNWNianBoWTNScGRtVXNYRzQ2YUc5MlpYSWdlMXh1SUNCdmRYUnNhVzVsT2lCdWIyNWxPMXh1ZlZ4dUlpd2lPbkp2YjNRZ2UxeHVJQ0F0TFdKaGMyVXRhR1ZoWkdsdVp5MXphWHBsT2lBeE5uQjRPMXh1SUNBdExXSmhjMlV0YUdWaFpHbHVaeTFqYjJ4dmNqb2dJelF4TmprNE9EdGNibjFjYmx4dVhHNHZLaXBjYmlBcUlFaGxZV1JwYm1kelhHNGdLbHh1SUNvZ1VtVnpaWFFnZEc4Z1pHVm1ZWFZzZENCbWIyNTBJSE5wZW1VZ2RHOGdZV3hzYjNjZ1pXRnplU0J5WlhWelpWeHVJQ29nVlhObElHVjRkSEpoSUdOc1lYTnpaWE1nWm05eUlITjBlV3hwYm1kY2JpQXFMMXh1WEc1b01TeGNibWd5TEZ4dWFETXNYRzVvTkN4Y2JtZzFMRnh1YURZZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SUhaaGNpZ3RMV0poYzJVdGFHVmhaR2x1WnkxemFYcGxLVHRjYmlBZ2JXRnlaMmx1T2lBd08xeHVJQ0JqYjJ4dmNqb2dkbUZ5S0MwdFltRnpaUzFvWldGa2FXNW5MV052Ykc5eUtUdGNibjFjYmlJc0lqcHliMjkwSUh0Y2JpQWdMUzFpWVhObExXeHBibXN0WTI5c2IzSTZJQ00wWlRsbVpHUTdYRzRnSUMwdFltRnpaUzFzYVc1ckxXTnZiRzl5TFdodmRtVnlPaUJqYjJ4dmNpaDJZWElvTFMxaVlYTmxMV3hwYm1zdFkyOXNiM0lwSUhOb1lXUmxLREV3SlNrcE8xeHVJQ0F0TFdKaGMyVXRiR2x1YXkxamIyeHZjaTFoWTNScGRtVTZJR052Ykc5eUtIWmhjaWd0TFdKaGMyVXRiR2x1YXkxamIyeHZjaWtnYzJoaFpHVW9NakFsS1NrN1hHNTlYRzVjYm1FZ2UxeHVJQ0JqYjJ4dmNqb2dkbUZ5S0MwdFltRnpaUzFzYVc1ckxXTnZiRzl5S1R0Y2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dUlDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNTlYRzVjYm1FNmFHOTJaWElnZTF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0WW1GelpTMXNhVzVyTFdOdmJHOXlMV2h2ZG1WeUtUdGNibjFjYmx4dVlUcGhZM1JwZG1VZ2UxeHVJQ0JqYjJ4dmNqb2dkbUZ5S0MwdFltRnpaUzFzYVc1ckxXTnZiRzl5TFdGamRHbDJaU2s3WEc1OVhHNGlMQ0k2Y205dmRDQjdYRzRnSUMwdFltRnpaUzFzYVhOMExYSm9lWFJvYlRvZ01TNDFjbVZ0TzF4dWZWeHVYRzV2YkN4Y2JuVnNJSHRjYmlBZ2JHbHpkQzF6ZEhsc1pUb2dibTl1WlR0Y2JpQWdiV0Z5WjJsdU9pQXdPMXh1SUNCd1lXUmthVzVuT2lBd08xeHVmVnh1WEc1MWJEcGxiWEIwZVN4Y2JtOXNPbVZ0Y0hSNUlIdGNiaUFnTHlvZ1NHbGtaU0JsYlhCMGVTQnNhWE4wY3lBcUwxeHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVmVnh1WEc1a1pDQjdYRzRnSUcxaGNtZHBiam9nTUR0Y2JuMWNiaUlzSWpweWIyOTBJSHRjYmlBZ0xTMXRaV1JwWVMxbWFXZDFjbVV0WTI5c2IzSTZJQ001T1RrN1hHNTlYRzVjYm1sdFp5QjdYRzRnSUcxaGVDMTNhV1IwYURvZ01UQXdKVHRjYm4xY2JseHVjM1puT201dmRDZzZjbTl2ZENrZ2UxeHVJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1ZlZ4dVhHNW1hV2QxY21VZ2UxeHVJQ0J0WVhKbmFXNDZJREE3WEc1OVhHNWNibVpwWjJOaGNIUnBiMjRnZTF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0YldWa2FXRXRabWxuZFhKbExXTnZiRzl5S1R0Y2JuMWNiaUlzSWpweWIyOTBJSHRjYmlBZ0xTMWlZWE5sTFcxcGMyTXRhSEl0WW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1E3WEc0Z0lDMHRZbUZ6WlMxdGFYTmpMV2h5TFdKdmNtUmxjaTFqYjJ4dmNqb2dJems1T1R0Y2JuMWNibHh1YUhJZ2UxeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdZbTl5WkdWeU9pQXdPMXh1SUNCaWIzSmtaWEl0WW05MGRHOXRPaUIyWVhJb0xTMWlZWE5sTFcxcGMyTXRhSEl0WW05eVpHVnlLVHRjYmlBZ1ltOXlaR1Z5TFdOdmJHOXlPaUIyWVhJb0xTMWlZWE5sTFcxcGMyTXRhSEl0WW05eVpHVnlMV052Ykc5eUtUdGNiaUFnYldGeVoybHVPaUJ5YUhsMGFHMG9NU2tnTUR0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nZEhKaGJuTndZWEpsYm5RN1hHNTlYRzVjYm1sbWNtRnRaU0I3WEc0Z0lHSnZjbVJsY2pvZ01EdGNibjFjYmx4dUx5b3FYRzRnS2lCVGRYQndjbVZ6Y3lCMGFHVWdabTlqZFhNZ2IzVjBiR2x1WlNCdmJpQnNhVzVyY3lCMGFHRjBJR05oYm01dmRDQmlaU0JoWTJObGMzTmxaQ0IyYVdFZ2EyVjVZbTloY21RdVhHNGdLaUJVYUdseklIQnlaWFpsYm5SeklHRnVJSFZ1ZDJGdWRHVmtJR1p2WTNWeklHOTFkR3hwYm1VZ1puSnZiU0JoY0hCbFlYSnBibWNnWVhKdmRXNWtJR1ZzWlcxbGJuUnpJSFJvWVhSY2JpQXFJRzFwWjJoMElITjBhV3hzSUhKbGMzQnZibVFnZEc4Z2NHOXBiblJsY2lCbGRtVnVkSE11WEc0Z0tpOWNibHh1VzNSaFltbHVaR1Y0UFZ3aUxURmNJbDA2Wm05amRYTWdlMXh1SUNCdmRYUnNhVzVsT2lCdWIyNWxJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNGlMQ0k2Y205dmRDQjdYRzRnSUMwdFltRnpaUzEwWlhoMExXTnZaR1V0Wm05dWRDMW1ZVzFwYkhrNklDZE5iMjVoWTI4bkxDQkRiM1Z5YVdWeUxDQW5RMjkxY21sbGNpQk9aWGNuTENCdGIyNXZjM0JoWTJVN1hHNGdJQzB0WW1GelpTMTBaWGgwTFdOdlpHVXRabTl1ZEMxemFYcGxPaUJqWVd4aktERTBMekUySUNvZ01YSmxiU2s3WEc0Z0lDMHRZbUZ6WlMxMFpYaDBMV052WkdVdFptOXVkQzFqYjJ4dmNqb2dJelUxTlR0Y2JpQWdMUzFpWVhObExYUmxlSFF0WTI5a1pTMW1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0F0TFdKaGMyVXRkR1Y0ZEMxeWFIbDBhRzA2SURFdU5YSmxiVHRjYmlBZ0xTMWlZWE5sTFhSbGVIUXRhMkprTFdKdmNtUmxjam9nTVhCNElITnZiR2xrSUdOdmJHOXlLQ00wTVRZNU9EZ2dZV3h3YUdFb055VXBLVHRjYmlBZ0xTMWlZWE5sTFhSbGVIUXRhMkprTFdKdmNtUmxjaTFpYjNSMGIyMDZJRE53ZUNCemIyeHBaQ0JqYjJ4dmNpZ2pOREUyT1RnNElHRnNjR2hoS0RJd0pTa3BPMXh1SUNBdExXSmhjMlV0ZEdWNGRDMXJZbVF0WTI5c2IzSXRZbWM2SUNObVptWTdYRzU5WEc1Y2JtTnZaR1VzWEc1clltUXNYRzV3Y21Vc1hHNXpZVzF3SUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUhaaGNpZ3RMV0poYzJVdGRHVjRkQzFqYjJSbExXWnZiblF0Wm1GdGFXeDVLVHRjYmlBZ1ptOXVkQzF6YVhwbE9pQjJZWElvTFMxaVlYTmxMWFJsZUhRdFkyOWtaUzFtYjI1MExYTnBlbVVwTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nZG1GeUtDMHRZbUZ6WlMxMFpYaDBMV052WkdVdFptOXVkQzEzWldsbmFIUXBPMXh1SUNCdFlYSm5hVzQ2SURBN1hHNGdJSEJoWkdScGJtYzZJREFnWTJGc1l5aDJZWElvTFMxaVlYTmxMWFJsZUhRdGNtaDVkR2h0S1NBcUlDNHhNalVwTzF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0WW1GelpTMTBaWGgwTFdOdlpHVXRabTl1ZEMxamIyeHZjaWs3WEc1OVhHNWNibUpzYjJOcmNYVnZkR1VzWEc1a2JDeGNibVJrTEZ4dWNDeGNibkJ5WlNCN1hHNGdJRzFoY21kcGJqb2dNRHRjYm4xY2JseHVhMkprSUh0Y2JpQWdiV0Z5WjJsdU9pQXdJR05oYkdNb2RtRnlLQzB0WW1GelpTMTBaWGgwTFhKb2VYUm9iU2tnS2lBdU1USTFLVHRjYmlBZ2NHRmtaR2x1WnpvZ1kyRnNZeWgyWVhJb0xTMWlZWE5sTFhSbGVIUXRjbWg1ZEdodEtTQXFJQzR4TWpVcElHTmhiR01vZG1GeUtDMHRZbUZ6WlMxMFpYaDBMWEpvZVhSb2JTa2dLaUF1TXpjMUtUdGNiaUFnWW05eVpHVnlPaUIyWVhJb0xTMWlZWE5sTFhSbGVIUXRhMkprTFdKdmNtUmxjaWs3WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjA2SUhaaGNpZ3RMV0poYzJVdGRHVjRkQzFyWW1RdFltOXlaR1Z5TFdKdmRIUnZiU2s3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SUdOaGJHTW9kbUZ5S0MwdFltRnpaUzEwWlhoMExYSm9lWFJvYlNrZ0tpQXVNalVwTzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMxaVlYTmxMWFJsZUhRdGEySmtMV052Ykc5eUxXSm5LVHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiR2x3T2lCd1lXUmthVzVuTzF4dUlDQjNhR2wwWlMxemNHRmpaVG9nYm05M2NtRndPMXh1SUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFuVTI5MWNtTmxJRk5oYm5NZ1VISnZKeXdnWENKSVpXeDJaWFJwWTJFZ1RtVjFaVndpTENCSVpXeDJaWFJwWTJGT1pYVmxMQ0JJWld4MlpYUnBZMkVzSUVGeWFXRnNMQ0J6WVc1ekxYTmxjbWxtTzF4dWZWeHVJaXdpTHlvcUlFQmtaV1pwYm1VZ1FuVjBkRzl1UjNKdmRYQTdJSFZ6WlNCemRISnBZM1FnS2k5Y2JseHVRR2x0Y0c5eWRDQW5jM1ZwZEdOemN5MWpiMjF3YjI1bGJuUnpMV0oxZEhSdmJpMW5jbTkxY0NjN1hHNUFhVzF3YjNKMElDZHpkV2wwWTNOekxXTnZiWEJ2Ym1WdWRITXRZblYwZEc5dUxXZHliM1Z3TDJKMWRIUnZiaTFuY205MWNDNXdiSFZuYVc0dVkzTnpKenRjYmx4dU9uSnZiM1FnZTF4dUlDQXZLaUJUWlhRZ2IzVnlJSFpoY25NZ2FXNGdZMjl5Y21WamRDQm1iM0p0WVhRZ0tpOWNiaUFnTFMxQ2RYUjBiMjVIY205MWNDMW1iMjUwTFhOcGVtVTZJREZ5WlcwN1hHNGdJQzB0UW5WMGRHOXVSM0p2ZFhBdFluVjBkRzl1TFdKdmNtUmxjaTEzYVdSMGFEb2dNRHRjYmlBZ0x5b2dSbkp2YlNCemRXbDBZM056TFdOdmJYQnZibVZ1ZEhNdFluVjBkRzl1TFdkeWIzVndJQ292WEc0Z0lDMHRabTl1ZEMxemFYcGxMVUoxZEhSdmJrZHliM1Z3T2lCMllYSW9MUzFDZFhSMGIyNUhjbTkxY0MxbWIyNTBMWE5wZW1VcE8xeHVJQ0F0TFdKdmNtUmxjaTEzYVdSMGFDMUNkWFIwYjI0NklIWmhjaWd0TFVKMWRIUnZia2R5YjNWd0xXSjFkSFJ2YmkxaWIzSmtaWEl0ZDJsa2RHZ3BPMXh1ZlZ4dVhHNHVRblYwZEc5dVIzSnZkWEF0TFdoNklENGdMa0oxZEhSdmJrZHliM1Z3TFdsMFpXMGdlMXh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxPMXh1ZlZ4dVhHNHVRblYwZEc5dVIzSnZkWEF0TFhKdmRXNWtJQzVDZFhSMGIyNUhjbTkxY0MxcGRHVnRPbVpwY25OMExXTm9hV3hrSUM1Q2RYUjBiMjRnZTF4dUlDQmliM0prWlhJdGRHOXdMV3hsWm5RdGNtRmthWFZ6T2lBeE1EQndlRHRjYmlBZ1ltOXlaR1Z5TFdKdmRIUnZiUzFzWldaMExYSmhaR2wxY3pvZ01UQXdjSGc3WEc1OVhHNWNiaTVDZFhSMGIyNUhjbTkxY0MwdGNtOTFibVFnTGtKMWRIUnZia2R5YjNWd0xXbDBaVzA2YkdGemRDMWphR2xzWkNBdVFuVjBkRzl1SUh0Y2JpQWdZbTl5WkdWeUxYUnZjQzF5YVdkb2RDMXlZV1JwZFhNNklERXdNSEI0TzF4dUlDQmliM0prWlhJdFltOTBkRzl0TFhKcFoyaDBMWEpoWkdsMWN6b2dNVEF3Y0hnN1hHNTlYRzRpTENJdktpb2dRR1JsWm1sdVpTQkNkWFIwYjI1SGNtOTFjQ0FxTDF4dVhHNHZLaUVnYzNWcGRDMWlkWFIwYjI0dFozSnZkWEFnZGpJdU1pNHdJSHdnVFVsVUlFeHBZMlZ1YzJVZ2ZDQm5hWFJvZFdJdVkyOXRMM04xYVhSamMzTWdLaTljYmx4dU9uSnZiM1FnZTF4dUlDQXRMV1p2Ym5RdGMybDZaUzFDZFhSMGIyNUhjbTkxY0RvZ01YSmxiVHRjYm4xY2JseHVMeW9xWEc0Z0tpQkRjbVZoZEdVZ1lTQjJhWE4xWVd3Z1kyOXVibVZqZEdsdmJpQmlaWFIzWldWdUlGVkpJR0ZqZEdsdmJuTWdkR2hoZENCaVpXeHZibWNnZEc5blpYUm9aWEl1WEc0Z0tpQk5kWE4wSUc5dWJIa2dZMjl1ZEdGcGJpQmdRblYwZEc5dVIzSnZkWEF0YVhSbGJXQWdiMkpxWldOMGN5QmhjeUJqYUdsc1pISmxiaTVjYmlBcVhHNGdLaUJGZUdGdGNHeGxJRWhVVFV3NlhHNGdLbHh1SUNvZ1BHUnBkaUJqYkdGemN6MWNJa0oxZEhSdmJrZHliM1Z3SUZ0Q2RYUjBiMjVIY205MWNDMHRhSHBkWENJK1hHNGdLaUFnSUR4a2FYWWdZMnhoYzNNOVhDSkNkWFIwYjI1SGNtOTFjQzFwZEdWdFhDSStYRzRnS2lBZ0lDQWdQR0VnWTJ4aGMzTTlYQ0pDZFhSMGIyNWNJaUJvY21WbVBWd2lJMXdpUGtSaGMyaGliMkZ5WkR3dllUNWNiaUFxSUNBZ1BDOWthWFkrWEc0Z0tpQWdJRHhrYVhZZ1kyeGhjM005WENKQ2RYUjBiMjVIY205MWNDMXBkR1Z0WENJK1hHNGdLaUFnSUNBZ1BHRWdZMnhoYzNNOVhDSkNkWFIwYjI1Y0lpQm9jbVZtUFZ3aUkxd2lQa0ZqWTI5MWJuUThMMkUrWEc0Z0tpQWdJRHd2WkdsMlBseHVJQ29nSUNBOFpHbDJJR05zWVhOelBWd2lRblYwZEc5dVIzSnZkWEF0YVhSbGJWd2lQbHh1SUNvZ0lDQWdJRHhoSUdOc1lYTnpQVndpUW5WMGRHOXVYQ0lnYUhKbFpqMWNJaU5jSWo1TWIyZHZkWFE4TDJFK1hHNGdLaUFnSUR3dlpHbDJQbHh1SUNvZ1BDOWthWFkrWEc0Z0tpOWNibHh1THlvcVhHNGdLaUJDZFhSMGIyNGdaM0p2ZFhCY2JpQXFYRzRnS2lBeExpQkZibk4xY21VZ1kyOXRjRzl1Wlc1MElHbHpJR1oxYkd3dGQybGtkR2dnYVdZZ1lYQndiR2xsWkNCMGJ5QmxiR1Z0Wlc1MGN5QjBhR0YwSUdGeVpWeHVJQ29nSUNBZ1lHbHViR2x1WlMxaWJHOWphMkFnWW5rZ1pHVm1ZWFZzZEM1Y2JpQXFJREl1SUVOdmJHeGhjSE5sSUhkb2FYUmxjM0JoWTJVZ1ltVjBkMlZsYmlCamFHbHNaQ0JsYkdWdFpXNTBjeTRnVDI1c2VTQnVaV05sYzNOaGNua2dabTl5SUhSb1pWeHVJQ29nSUNBZ1lFSjFkSFJ2YmtkeWIzVndMUzFvZW1BZ2JXOWthV1pwWlhJZ2QyaHBZMmdnYkdGNWN5QnBkR1Z0Y3lCdmRYUWdZWE1nWUdsdWJHbHVaUzFpYkc5amEyQXNJR0oxZEZ4dUlDb2dJQ0FnYVc1amJIVmtaV1FnYVc0Z2RHaGxJR0poYzJVZ1kyOXRjRzl1Wlc1MElITnZJSFJvWVhRZ1lXWm1aV04wY3lCdmJpQmdabTl1ZEMxemFYcGxZQ0JoY21WY2JpQXFJQ0FnSUdOdmJuTnBjM1JsYm5RdVhHNGdLaUF6TGlCU1pXMXZkbVVnWVc1NUlHUmxabUYxYkhRZ2MzUjViR1Z6SUhSb1lYUWdiV2xuYUhRZ1ltVWdjSEpsYzJWdWRDQjNhR1Z1SUdCdmJHQWdiM0lnWUhWc1lDQmhjbVVnZEdobFhHNGdLaUFnSUNCeWIyOTBJR1ZzWlcxbGJuUXVYRzRnS2k5Y2JseHVMa0oxZEhSdmJrZHliM1Z3SUh0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN0lDOHFJREVnS2k5Y2JpQWdabTl1ZEMxemFYcGxPaUF3T3lBdktpQXlJQ292WEc0Z0lHMWhjbWRwYmpvZ01Ec2dMeW9nTXlBcUwxeHVJQ0JzYVhOMExYTjBlV3hsT2lCdWIyNWxPeUF2S2lBeklDb3ZYRzRnSUhCaFpHUnBibWM2SURBN0lDOHFJRE1nS2k5Y2JuMWNibHh1THlvcVhHNGdLaUJDZFhSMGIyNGdaM0p2ZFhBZ2FYUmxiVnh1SUNwY2JpQXFJREV1SUUxaGEyVWdhWFFnWm5Wc2JDMTNhV1IwYUNCcFppQmhjSEJzYVdWa0lIUnZJR1ZzWlcxbGJuUnpJSFJvWVhRZ1lYSmxJR0JwYm14cGJtVXRZbXh2WTJ0Z0lHSjVYRzRnS2lBZ0lDQmtaV1poZFd4MExseHVJQ29nTWk0Z1VtVnpaWFFnZEdobElHWnZiblFnYzJsNlpTQnZaaUIwYUdVZ1luVjBkRzl1Y3lCMGJ5QjBhR1VnY205dmRDQm1iMjUwSUhOcGVtVXVYRzRnS2k5Y2JseHVMa0oxZEhSdmJrZHliM1Z3TFdsMFpXMGdlMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenNnTHlvZ01TQXFMMXh1SUNCbWIyNTBMWE5wZW1VNklIWmhjaWd0TFdadmJuUXRjMmw2WlMxQ2RYUjBiMjVIY205MWNDazdJQzhxSURJZ0tpOWNibjFjYmx4dUxrSjFkSFJ2YmtkeWIzVndMV2wwWlcwZ1BpQXVRblYwZEc5dUlIdGNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUhkcFpIUm9PaUF4TURBbE8xeHVmVnh1WEc0dktpcGNiaUFxSUVWdWMzVnlaU0IwYUdGMElHbHVkR1Z5WVdOMGFXOXVjeUIzYVhSb0lHRWdZblYwZEc5dUlHMWhhMlVnYVhRZ2MybDBJRzl1SUhSdmNDQnZaaUJ2ZEdobGNpQmlkWFIwYjI1elhHNGdLaUJwYmlCMGFHVWdaM0p2ZFhBdVhHNGdLaTljYmx4dUxrSjFkSFJ2YmtkeWIzVndMV2wwWlcwZ1BpQXVRblYwZEc5dU9taHZkbVZ5TEZ4dUxrSjFkSFJ2YmtkeWIzVndMV2wwWlcwZ1BpQXVRblYwZEc5dU9tWnZZM1Z6TEZ4dUxrSjFkSFJ2YmtkeWIzVndMV2wwWlcwZ1BpQXVRblYwZEc5dU9tRmpkR2wyWlN4Y2JpNUNkWFIwYjI1SGNtOTFjQzFwZEdWdElENGdMa0oxZEhSdmJpNXBjeTF3Y21WemMyVmtJSHRjYmlBZ2VpMXBibVJsZURvZ01UdGNibjFjYmx4dVhHNHZLaUJOYjJScFptbGxjam9nYUc5eWFYcHZiblJoYkNCaWRYUjBiMjV6WEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHVRblYwZEc5dVIzSnZkWEF0TFdoNklENGdMa0oxZEhSdmJrZHliM1Z3TFdsMFpXMGdlMXh1SUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzU5WEc0aUxDSXZLaW9nUUdSbFptbHVaU0JDZFhSMGIyNUhjbTkxY0NBcUwxeHVYRzR2S2lFZ2MzVnBkQzFpZFhSMGIyNHRaM0p2ZFhBZ2RqSXVNaTR3SUh3Z1RVbFVJRXhwWTJWdWMyVWdmQ0JuYVhSb2RXSXVZMjl0TDNOMWFYUmpjM01nS2k5Y2JseHVMeW9nVFc5a2FXWnBaWEk2SUdOdmJHeGhjSE5sSUdKMWRIUnZiaUJpYjNKa1pYSnpYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpcGNiaUFxSUVsdVkyeDFaR1Z6SUdGd2NISnZjSEpwWVhSbElISmxiVzkyWVd3Z2IyWWdZR0p2Y21SbGNpMXlZV1JwZFhOZ0xseHVJQ29nUVd4c0lHSnliM2R6WlhKeklIUm9ZWFFnYzNWd2NHOXlkQ0JnWW05eVpHVnlMWEpoWkdsMWMyQWdZV3h6YnlCemRYQndiM0owSUVOVFV5QXpJSEJ6WlhWa2J5MWpiR0Z6YzJWekxseHVJQ292WEc1Y2JpOHFLbHh1SUNvZ1ZtVnlkR2xqWVd3Z1kyOXNiR0Z3YzJWY2JpQXFMMXh1WEc0dVFuVjBkRzl1UjNKdmRYQXRMV0p2Y21SbGNrTnZiR3hoY0hObE9tNXZkQ2d1UW5WMGRHOXVSM0p2ZFhBdExXaDZLU0ErSUM1Q2RYUjBiMjVIY205MWNDMXBkR1Z0SUh0Y2JpQWdiV0Z5WjJsdUxYUnZjRG9nWTJGc1l5aDJZWElvTFMxaWIzSmtaWEl0ZDJsa2RHZ3RRblYwZEc5dUtTQXFJQzB4Y0hncE8xeHVmVnh1WEc0dVFuVjBkRzl1UjNKdmRYQXRMV0p2Y21SbGNrTnZiR3hoY0hObE9tNXZkQ2d1UW5WMGRHOXVSM0p2ZFhBdExXaDZLU0ErSUM1Q2RYUjBiMjVIY205MWNDMXBkR1Z0T21acGNuTjBMV05vYVd4a0lIdGNiaUFnYldGeVoybHVMWFJ2Y0RvZ01EdGNibjFjYmx4dUxrSjFkSFJ2YmtkeWIzVndMUzFpYjNKa1pYSkRiMnhzWVhCelpUcHViM1FvTGtKMWRIUnZia2R5YjNWd0xTMW9laWtnUGlBdVFuVjBkRzl1UjNKdmRYQXRhWFJsYlRwdWIzUW9PbVpwY25OMExXTm9hV3hrS1RwdWIzUW9PbXhoYzNRdFkyaHBiR1FwSUQ0Z0xrSjFkSFJ2YmlCN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklEQTdYRzU5WEc1Y2JpNUNkWFIwYjI1SGNtOTFjQzB0WW05eVpHVnlRMjlzYkdGd2MyVTZibTkwS0M1Q2RYUjBiMjVIY205MWNDMHRhSG9wSUQ0Z0xrSjFkSFJ2YmtkeWIzVndMV2wwWlcwNlptbHljM1F0WTJocGJHUTZibTkwS0RwdmJteDVMV05vYVd4a0tTQStJQzVDZFhSMGIyNGdlMXh1SUNCaWIzSmtaWEl0WW05MGRHOXRMV3hsWm5RdGNtRmthWFZ6T2lBd08xeHVJQ0JpYjNKa1pYSXRZbTkwZEc5dExYSnBaMmgwTFhKaFpHbDFjem9nTUR0Y2JuMWNibHh1TGtKMWRIUnZia2R5YjNWd0xTMWliM0prWlhKRGIyeHNZWEJ6WlRwdWIzUW9Ma0oxZEhSdmJrZHliM1Z3TFMxb2Vpa2dQaUF1UW5WMGRHOXVSM0p2ZFhBdGFYUmxiVHBzWVhOMExXTm9hV3hrT201dmRDZzZiMjVzZVMxamFHbHNaQ2tnUGlBdVFuVjBkRzl1SUh0Y2JpQWdZbTl5WkdWeUxYUnZjQzFzWldaMExYSmhaR2wxY3pvZ01EdGNiaUFnWW05eVpHVnlMWFJ2Y0MxeWFXZG9kQzF5WVdScGRYTTZJREE3WEc1OVhHNWNiaThxS2x4dUlDb2dTRzl5YVhwdmJuUmhiQ0JqYjJ4c1lYQnpaVnh1SUNvdlhHNWNiaTVDZFhSMGIyNUhjbTkxY0MwdFltOXlaR1Z5UTI5c2JHRndjMlV1UW5WMGRHOXVSM0p2ZFhBdExXaDZJRDRnTGtKMWRIUnZia2R5YjNWd0xXbDBaVzBnZTF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nWTJGc1l5aDJZWElvTFMxaWIzSmtaWEl0ZDJsa2RHZ3RRblYwZEc5dUtTQXFJQzB4Y0hncE8xeHVmVnh1WEc0dVFuVjBkRzl1UjNKdmRYQXRMV0p2Y21SbGNrTnZiR3hoY0hObExrSjFkSFJ2YmtkeWIzVndMUzFvZWlBK0lDNUNkWFIwYjI1SGNtOTFjQzFwZEdWdE9tWnBjbk4wTFdOb2FXeGtJSHRjYmlBZ2JXRnlaMmx1TFd4bFpuUTZJREE3WEc1OVhHNWNiaTVDZFhSMGIyNUhjbTkxY0MwdFltOXlaR1Z5UTI5c2JHRndjMlV1UW5WMGRHOXVSM0p2ZFhBdExXaDZJRDRnTGtKMWRIUnZia2R5YjNWd0xXbDBaVzA2Ym05MEtEcG1hWEp6ZEMxamFHbHNaQ2s2Ym05MEtEcHNZWE4wTFdOb2FXeGtLU0ErSUM1Q2RYUjBiMjRnZTF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lBd08xeHVmVnh1WEc0dVFuVjBkRzl1UjNKdmRYQXRMV0p2Y21SbGNrTnZiR3hoY0hObExrSjFkSFJ2YmtkeWIzVndMUzFvZWlBK0lDNUNkWFIwYjI1SGNtOTFjQzFwZEdWdE9tWnBjbk4wTFdOb2FXeGtPbTV2ZENnNmIyNXNlUzFqYUdsc1pDa2dQaUF1UW5WMGRHOXVJSHRjYmlBZ1ltOXlaR1Z5TFdKdmRIUnZiUzF5YVdkb2RDMXlZV1JwZFhNNklEQTdYRzRnSUdKdmNtUmxjaTEwYjNBdGNtbG5hSFF0Y21Ga2FYVnpPaUF3TzF4dWZWeHVYRzR1UW5WMGRHOXVSM0p2ZFhBdExXSnZjbVJsY2tOdmJHeGhjSE5sTGtKMWRIUnZia2R5YjNWd0xTMW9laUErSUM1Q2RYUjBiMjVIY205MWNDMXBkR1Z0T214aGMzUXRZMmhwYkdRNmJtOTBLRHB2Ym14NUxXTm9hV3hrS1NBK0lDNUNkWFIwYjI0Z2UxeHVJQ0JpYjNKa1pYSXRZbTkwZEc5dExXeGxablF0Y21Ga2FYVnpPaUF3TzF4dUlDQmliM0prWlhJdGRHOXdMV3hsWm5RdGNtRmthWFZ6T2lBd08xeHVmVnh1SWl3aUx5b3FJRUJrWldacGJtVWdRblYwZEc5dU95QjFjMlVnYzNSeWFXTjBJQ292WEc1Y2JrQnBiWEJ2Y25RZ0ozTjFhWFJqYzNNdFkyOXRjRzl1Wlc1MGN5MWlkWFIwYjI0bk8xeHVYRzQ2Y205dmRDQjdYRzRnSUMwdFFuVjBkRzl1TFhKb2VYUm9iVG9nTVM0MWNtVnRPMXh1SUNBdExVSjFkSFJ2YmkxaWIzSmtaWEl0WTI5c2IzSTZJR04xY25KbGJuUmpiMnh2Y2p0Y2JpQWdMUzFDZFhSMGIyNHRZbTl5WkdWeUxYZHBaSFJvT2lBd08xeHVJQ0F0TFVKMWRIUnZiaTFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblE3WEc0Z0lDMHRRblYwZEc5dUxXUnBjMkZpYkdWa0xXOXdZV05wZEhrNklEQXVOanRjYmlBZ0xTMUNkWFIwYjI0dFptOXVkRG9nYVc1b1pYSnBkRHRjYmlBZ0xTMUNkWFIwYjI0dGNHRmtaR2x1WnpvZ0xqTTNOWEpsYlNBdU56VnlaVzA3WEc0Z0lDMHRRblYwZEc5dUxYQmhaR1JwYm1jdGMyNTFaem9nTGpNM05YSmxiVHRjYmlBZ0xTMUNkWFIwYjI0dGNHRmtaR2x1WnkxemJXRnNiRG9nTGpFNE56VnlaVzBnTGpjMWNtVnRPMXh1SUNBdExVSjFkSFJ2YmkxamIyeHZjaTEwWlhoMExXbHVkbVZ5ZERvZ0kyWm1aanRjYmlBZ0xTMUNkWFIwYjI0dFkyOXNiM0l0WkdWbVlYVnNkRG9nWTI5c2IzSW9JelF4TmprNE9DQjBhVzUwS0RnMUpTa3BPMXh1SUNBdExVSjFkSFJ2YmkxamIyeHZjaTF3Y21sdFlYSjVPaUFqTkdVNVptUmtPMXh1SUNBdExVSjFkSFJ2YmkxamIyeHZjaTF6WldOdmJtUmhjbms2SUNNME1UWTVPRGc3WEc0Z0lDMHRRblYwZEc5dUxXTnZiRzl5TFdocFoyaHNhV2RvZERvZ0l6UmxPV1prWkR0Y2JpQWdMUzFDZFhSMGIyNHRZMjlzYjNJdGMzVmpZMlZ6Y3pvZ0l6Y3dZVGs0WWp0Y2JpQWdMUzFDZFhSMGIyNHRZMjlzYjNJdGRXNXpkWEpsT2lBalpUQmpNelV3TzF4dUlDQXRMVUoxZEhSdmJpMWpiMnh2Y2kxdVpYVjBjbUZzT2lCamIyeHZjaWdqTkRFMk9UZzRJSFJwYm5Rb05UQWxLU2s3WEc0Z0lDMHRRblYwZEc5dUxXTnZiRzl5TFhkaGNtNXBibWM2SUNObE16Z3lOR1U3WEc0Z0lDMHRRblYwZEc5dUxXTnZiRzl5TFdSaGJtZGxjam9nSTJVd05UYzFZanRjYmlBZ0xTMUNkWFIwYjI0dGRISmhibk5wZEdsdmJqb2dZV3hzSUM0eU5YTWdZM1ZpYVdNdFltVjZhV1Z5S0M0d056VXNJQzQ0TWpBc0lDNHhOalVzSURFdU1EQXdLVHRjYm4xY2JseHVMa0oxZEhSdmJpQjdYRzRnSUhSeVlXNXphWFJwYjI0NklIWmhjaWd0TFVKMWRIUnZiaTEwY21GdWMybDBhVzl1S1R0Y2JpQWdiV2x1TFdobGFXZG9kRG9nWTJGc1l5aDJZWElvTFMxQ2RYUjBiMjR0Y21oNWRHaHRLU0FxSURFdU1qVXBPMXh1SUNCMFpYaDBMWE5vWVdSdmR6b2dNWEI0SURGd2VDQXdJSEpuWW1Fb01Dd3dMREFzTUM0eE5TazdYRzU5WEc1Y2JpNUNkWFIwYjI0NlpHbHpZV0pzWldRc1hHNHVRblYwZEc5dUxtbHpMV1JwYzJGaWJHVmtJSHRjYmlBZ2NHOXBiblJsY2kxbGRtVnVkSE02SUc1dmJtVTdYRzU5WEc1Y2JpNUNkWFIwYjI0NmFHOTJaWElzWEc0dVFuVjBkRzl1T21GamRHbDJaU3hjYmk1Q2RYUjBiMjR1YVhNdFlXTjBhWFpsSUh0Y2JpQWdiM1YwYkdsdVpUb2dhVzVvWlhKcGREdGNibjFjYmx4dUx5b2dSR1ZtWVhWc2RDQXFMMXh1WEc0dVFuVjBkRzl1TFMxa1pXWmhkV3gwSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkbUZ5S0MwdFFuVjBkRzl1TFdOdmJHOXlMV1JsWm1GMWJIUXBPMXh1ZlZ4dVhHNHVRblYwZEc5dUxTMWtaV1poZFd4ME9taHZkbVZ5SUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dZMjlzYjNJb2RtRnlLQzB0UW5WMGRHOXVMV052Ykc5eUxXUmxabUYxYkhRcElITm9ZV1JsS0RFd0pTa3BPMXh1ZlZ4dVhHNHVRblYwZEc5dUxTMWtaV1poZFd4ME9tRmpkR2wyWlN4Y2JpNUNkWFIwYjI0dExXUmxabUYxYkhRdWFYTXRZV04wYVhabElIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nWTI5c2IzSW9kbUZ5S0MwdFFuVjBkRzl1TFdOdmJHOXlMV1JsWm1GMWJIUXBJSE5vWVdSbEtERTFKU2twTzF4dWZWeHVYRzR2S2lwY2JpQXFJRU52Ykc5eUlFMXZaR2xtYVdWeWMxeHVJQ292WEc1Y2JpOHFJRkJ5YVcxaGNua2dLaTljYmx4dUxrSjFkSFJ2YmkwdGNISnBiV0Z5ZVNCN1hHNGdJR052Ykc5eU9pQjJZWElvTFMxQ2RYUjBiMjR0WTI5c2IzSXRkR1Y0ZEMxcGJuWmxjblFwTzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMxQ2RYUjBiMjR0WTI5c2IzSXRjSEpwYldGeWVTazdYRzU5WEc1Y2JpNUNkWFIwYjI0dExYQnlhVzFoY25rNmFHOTJaWElnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQmpiMnh2Y2loMllYSW9MUzFDZFhSMGIyNHRZMjlzYjNJdGNISnBiV0Z5ZVNrZ2MyaGhaR1VvTVRBbEtTazdYRzU5WEc1Y2JpNUNkWFIwYjI0dExYQnlhVzFoY25rNllXTjBhWFpsTEZ4dUxrSjFkSFJ2YmkwdGNISnBiV0Z5ZVM1cGN5MWhZM1JwZG1VZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJqYjJ4dmNpaDJZWElvTFMxQ2RYUjBiMjR0WTI5c2IzSXRjSEpwYldGeWVTa2djMmhoWkdVb01UVWxLU2s3WEc1OVhHNWNiaThxSUZObFkyOXVaR0Z5ZVNBcUwxeHVYRzR1UW5WMGRHOXVMUzF6WldOdmJtUmhjbmtnZTF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0UW5WMGRHOXVMV052Ykc5eUxYUmxlSFF0YVc1MlpYSjBLVHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0UW5WMGRHOXVMV052Ykc5eUxYTmxZMjl1WkdGeWVTazdYRzU5WEc1Y2JpNUNkWFIwYjI0dExYTmxZMjl1WkdGeWVUcG9iM1psY2lCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJR052Ykc5eUtIWmhjaWd0TFVKMWRIUnZiaTFqYjJ4dmNpMXpaV052Ym1SaGNua3BJSE5vWVdSbEtERXdKU2twTzF4dWZWeHVYRzR1UW5WMGRHOXVMUzF6WldOdmJtUmhjbms2WVdOMGFYWmxMRnh1TGtKMWRIUnZiaTB0YzJWamIyNWtZWEo1TG1sekxXRmpkR2wyWlNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJR052Ykc5eUtIWmhjaWd0TFVKMWRIUnZiaTFqYjJ4dmNpMXpaV052Ym1SaGNua3BJSE5vWVdSbEtERTFKU2twTzF4dWZWeHVYRzR2S2lCSWFXZG9kR3hwWjJoMElDb3ZYRzVjYmk1Q2RYUjBiMjR0TFdocFoyaHNhV2RvZENCN1hHNGdJR052Ykc5eU9pQjJZWElvTFMxQ2RYUjBiMjR0WTI5c2IzSXRkR1Y0ZEMxcGJuWmxjblFwTzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMxQ2RYUjBiMjR0WTI5c2IzSXRhR2xuYUd4cFoyaDBLVHRjYm4xY2JseHVMa0oxZEhSdmJpMHRhR2xuYUd4cFoyaDBPbWh2ZG1WeUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nWTI5c2IzSW9kbUZ5S0MwdFFuVjBkRzl1TFdOdmJHOXlMV2hwWjJoc2FXZG9kQ2tnYzJoaFpHVW9NVEFsS1NrN1hHNTlYRzVjYmk1Q2RYUjBiMjR0TFdocFoyaHNhV2RvZERwaFkzUnBkbVVzWEc0dVFuVjBkRzl1TFMxb2FXZG9iR2xuYUhRdWFYTXRZV04wYVhabElIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nWTI5c2IzSW9kbUZ5S0MwdFFuVjBkRzl1TFdOdmJHOXlMV2hwWjJoc2FXZG9kQ2tnYzJoaFpHVW9NVFVsS1NrN1hHNTlYRzVjYmk4cUlGTjFZMk5sYzNNZ0tpOWNibHh1TGtKMWRIUnZiaTB0YzNWalkyVnpjeUI3WEc0Z0lHTnZiRzl5T2lCMllYSW9MUzFDZFhSMGIyNHRZMjlzYjNJdGRHVjRkQzFwYm5abGNuUXBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzFDZFhSMGIyNHRZMjlzYjNJdGMzVmpZMlZ6Y3lrN1hHNTlYRzVjYmk1Q2RYUjBiMjR0TFhOMVkyTmxjM002YUc5MlpYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCamIyeHZjaWgyWVhJb0xTMUNkWFIwYjI0dFkyOXNiM0l0YzNWalkyVnpjeWtnYzJoaFpHVW9NVEFsS1NrN1hHNTlYRzVjYmk1Q2RYUjBiMjR0TFhOMVkyTmxjM002WVdOMGFYWmxMRnh1TGtKMWRIUnZiaTB0YzNWalkyVnpjeTVwY3kxaFkzUnBkbVVnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQmpiMnh2Y2loMllYSW9MUzFDZFhSMGIyNHRZMjlzYjNJdGMzVmpZMlZ6Y3lrZ2MyaGhaR1VvTVRVbEtTazdYRzU5WEc1Y2JpOHFJRlZ1YzNWeVpTQXFMMXh1WEc0dVFuVjBkRzl1TFMxMWJuTjFjbVVnZTF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0UW5WMGRHOXVMV052Ykc5eUxYUmxlSFF0YVc1MlpYSjBLVHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0UW5WMGRHOXVMV052Ykc5eUxYVnVjM1Z5WlNrN1hHNTlYRzVjYmk1Q2RYUjBiMjR0TFhWdWMzVnlaVHBvYjNabGNpQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUdOdmJHOXlLSFpoY2lndExVSjFkSFJ2YmkxamIyeHZjaTExYm5OMWNtVXBJSE5vWVdSbEtERXdKU2twTzF4dWZWeHVYRzR1UW5WMGRHOXVMUzExYm5OMWNtVTZZV04wYVhabExGeHVMa0oxZEhSdmJpMHRkVzV6ZFhKbExtbHpMV0ZqZEdsMlpTQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUdOdmJHOXlLSFpoY2lndExVSjFkSFJ2YmkxamIyeHZjaTExYm5OMWNtVXBJSE5vWVdSbEtERTFKU2twTzF4dWZWeHVYRzR2S2lCT1pYVjBjbUZzSUNvdlhHNWNiaTVDZFhSMGIyNHRMVzVsZFhSeVlXd2dlMXh1SUNCamIyeHZjam9nZG1GeUtDMHRRblYwZEc5dUxXTnZiRzl5TFhSbGVIUXRhVzUyWlhKMEtUdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZG1GeUtDMHRRblYwZEc5dUxXTnZiRzl5TFc1bGRYUnlZV3dwTzF4dWZWeHVYRzR1UW5WMGRHOXVMUzF1WlhWMGNtRnNPbWh2ZG1WeUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nWTI5c2IzSW9kbUZ5S0MwdFFuVjBkRzl1TFdOdmJHOXlMVzVsZFhSeVlXd3BJSE5vWVdSbEtERXdKU2twTzF4dWZWeHVYRzR1UW5WMGRHOXVMUzF1WlhWMGNtRnNPbUZqZEdsMlpTeGNiaTVDZFhSMGIyNHRMVzVsZFhSeVlXd3VhWE10WVdOMGFYWmxJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ1kyOXNiM0lvZG1GeUtDMHRRblYwZEc5dUxXTnZiRzl5TFc1bGRYUnlZV3dwSUhOb1lXUmxLREUxSlNrcE8xeHVmVnh1WEc0dktpQlhZWEp1YVc1bklDb3ZYRzVjYmk1Q2RYUjBiMjR0TFhkaGNtNXBibWNnZTF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0UW5WMGRHOXVMV052Ykc5eUxYUmxlSFF0YVc1MlpYSjBLVHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0UW5WMGRHOXVMV052Ykc5eUxYZGhjbTVwYm1jcE8xeHVmVnh1WEc0dVFuVjBkRzl1TFMxM1lYSnVhVzVuT21odmRtVnlJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ1kyOXNiM0lvZG1GeUtDMHRRblYwZEc5dUxXTnZiRzl5TFhkaGNtNXBibWNwSUhOb1lXUmxLREV3SlNrcE8xeHVmVnh1WEc0dVFuVjBkRzl1TFMxM1lYSnVhVzVuT21GamRHbDJaU3hjYmk1Q2RYUjBiMjR0TFhkaGNtNXBibWN1YVhNdFlXTjBhWFpsSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dZMjlzYjNJb2RtRnlLQzB0UW5WMGRHOXVMV052Ykc5eUxYZGhjbTVwYm1jcElITm9ZV1JsS0RFMUpTa3BPMXh1ZlZ4dVhHNHZLaUJFWVc1blpYSWdLaTljYmx4dUxrSjFkSFJ2YmkwdFpHRnVaMlZ5SUh0Y2JpQWdZMjlzYjNJNklIWmhjaWd0TFVKMWRIUnZiaTFqYjJ4dmNpMTBaWGgwTFdsdWRtVnlkQ2s3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIWmhjaWd0TFVKMWRIUnZiaTFqYjJ4dmNpMWtZVzVuWlhJcE8xeHVmVnh1WEc0dVFuVjBkRzl1TFMxa1lXNW5aWEk2YUc5MlpYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCamIyeHZjaWgyWVhJb0xTMUNkWFIwYjI0dFkyOXNiM0l0WkdGdVoyVnlLU0J6YUdGa1pTZ3hNQ1VwS1R0Y2JuMWNibHh1TGtKMWRIUnZiaTB0WkdGdVoyVnlPbUZqZEdsMlpTeGNiaTVDZFhSMGIyNHRMV1JoYm1kbGNpNXBjeTFoWTNScGRtVWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCamIyeHZjaWgyWVhJb0xTMUNkWFIwYjI0dFkyOXNiM0l0WkdGdVoyVnlLU0J6YUdGa1pTZ3hOU1VwS1R0Y2JuMWNibHh1THlvZ1NXNTJhWE5wWW14bElDb3ZYRzVjYmk1Q2RYUjBiMjR0TFdsdWRtbHphV0pzWlNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQmpiMnh2Y2pvZ1kyOXNiM0lvZG1GeUtDMHRRblYwZEc5dUxXTnZiRzl5TFhObFkyOXVaR0Z5ZVNrZ2RHbHVkQ2cxTUNVcEtUdGNibjFjYmx4dUxrSjFkSFJ2YmkwdGFXNTJhWE5wWW14bE9taHZkbVZ5SUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dZMjlzYjNJb2RtRnlLQzB0UW5WMGRHOXVMV052Ykc5eUxYTmxZMjl1WkdGeWVTa2dkR2x1ZENnNU1pVXBLVHRjYmlBZ1kyOXNiM0k2SUdOdmJHOXlLSFpoY2lndExVSjFkSFJ2YmkxamIyeHZjaTF6WldOdmJtUmhjbmtwSUhScGJuUW9NekFsS1NrN1hHNTlYRzVjYmk1Q2RYUjBiMjR0TFdsdWRtbHphV0pzWlRwaFkzUnBkbVVzWEc0dVFuVjBkRzl1TFMxcGJuWnBjMmxpYkdVdWFYTXRZV04wYVhabElIdGNiaUFnWTI5c2IzSTZJSFpoY2lndExVSjFkSFJ2YmkxamIyeHZjaTF6WldOdmJtUmhjbmtwTzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQmpiMnh2Y2loMllYSW9MUzFDZFhSMGIyNHRZMjlzYjNJdGMyVmpiMjVrWVhKNUtTQjBhVzUwS0RnNEpTa3BPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFSjFkSFJ2YmlCVWVYQmxJRTF2WkdsbWFXVnljMXh1SUNvdlhHNWNiaThxSUZOdWRXY2dLaTljYmx4dUxrSjFkSFJ2YmkwdGMyNTFaeUI3WEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nZG1GeUtDMHRRblYwZEc5dUxYQmhaR1JwYm1jdGMyNTFaeWs3WEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SUhaaGNpZ3RMVUoxZEhSdmJpMXdZV1JrYVc1bkxYTnVkV2NwTzF4dWZWeHVYRzR1UW5WMGRHOXVMUzF6YldGc2JDQjdYRzRnSUcxcGJpMW9aV2xuYUhRNklHTmhiR01vZG1GeUtDMHRRblYwZEc5dUxYSm9lWFJvYlNrZ0tpQXhLVHRjYmlBZ2NHRmtaR2x1WnpvZ2RtRnlLQzB0UW5WMGRHOXVMWEJoWkdScGJtY3RjMjFoYkd3cE8xeHVJQ0JtYjI1MExYTnBlbVU2SUdOaGJHTW9NVFF2TVRZcGNtVnRPMXh1ZlZ4dUlpd2lMeW9xSUVCa1pXWnBibVVnUW5WMGRHOXVPeUIxYzJVZ2MzUnlhV04wSUNvdlhHNWNianB5YjI5MElIdGNiaUFnTFMxQ2RYUjBiMjR0WW05eVpHVnlMV052Ykc5eU9pQmpkWEp5Wlc1MFkyOXNiM0k3WEc0Z0lDMHRRblYwZEc5dUxXSnZjbVJsY2kxM2FXUjBhRG9nTVhCNE8xeHVJQ0F0TFVKMWRIUnZiaTFqYjJ4dmNqb2dhVzVvWlhKcGREdGNiaUFnTFMxQ2RYUjBiMjR0WkdsellXSnNaV1F0YjNCaFkybDBlVG9nTUM0Mk8xeHVJQ0F0TFVKMWRIUnZiaTFtYjI1ME9pQnBibWhsY21sME8xeHVJQ0F0TFVKMWRIUnZiaTF3WVdSa2FXNW5PaUF3TGpSbGJTQXdMamMxWlcwN1hHNTlYRzVjYmk4cUtseHVJQ29nVkdobElHSjFkSFJ2YmlCamJHRnpjMlZ6SUdGeVpTQmlaWE4wSUdGd2NHeHBaV1FnZEc4Z2JHbHVhM01zSUdKMWRIUnZibk1zSUdGdVpDQnpkV0p0YVhRZ2FXNXdkWFJ6TGx4dUlDb2dWR2hsYzJVZ1kyOXRjRzl1Wlc1MGN5QmpZVzRnWW1VZ2RYTmxaQ0JwYmlCbWIzSnRjeXdnWVhNZ1kyRnNiSE1nZEc4Z1lXTjBhVzl1TENCdmNpQmhjeUJ3WVhKMElHOW1JSFJvWlZ4dUlDb2daMlZ1WlhKaGJDQlZTU0J2WmlCMGFHVWdjMmwwWlM5aGNIQXVYRzRnS2k5Y2JseHVMeW9xWEc0Z0tpQXhMaUJEYjNKeVpXTjBjeUJwYm1GaWFXeHBkSGtnZEc4Z2MzUjViR1VnWTJ4cFkydGhZbXhsSUdCcGJuQjFkR0FnZEhsd1pYTWdhVzRnYVU5VExseHVJQ29nTWk0Z1RtOXliV0ZzYVhwbElHQmliM2d0YzJsNmFXNW5ZQ0JoWTNKdmMzTWdZV3hzSUdWc1pXMWxiblJ6SUhSb1lYUWdkR2hwY3lCamIyMXdiMjVsYm5RZ1kyOTFiR1FnWW1WY2JpQXFJQ0FnSUdGd2NHeHBaV1FnZEc4dVhHNGdLaUF6TGlCSmJtaGxjbWwwSUhSbGVIUWdZMjlzYjNJZ1puSnZiU0JoYm1ObGMzUnZjaTVjYmlBcUlEUXVJRWx1YUdWeWFYUWdabTl1ZENCemRIbHNaWE1nWm5KdmJTQmhibU5sYzNSdmNpNWNiaUFxSURVdUlFNXZjbTFoYkdsNlpTQmdiR2x1WlMxb1pXbG5hSFJnTGlCR2IzSWdZR2x1Y0hWMFlDd2dhWFFnWTJGdUozUWdZbVVnWTJoaGJtZGxaQ0JtY205dElHQnViM0p0WVd4Z0lHbHVJRVpwY21WbWIzZ2dOQ3N1WEc0Z0tpQTJMaUJRY21WMlpXNTBJR0oxZEhSdmJpQjBaWGgwSUdaeWIyMGdZbVZwYm1jZ2MyVnNaV04wWVdKc1pTNWNiaUFxSURjdUlFMWhhMlVnYzNWeVpTQmdhVzV3ZFhSZ0lIZHBiR3dnZDNKaGNDQjBaWGgwSUdGamNtOXpjeUJ0ZFd4MGFYQnNaU0JzYVc1bGN5NWNiaUFxTDF4dVhHNHVRblYwZEc5dUlIdGNiaUFnTFhkbFltdHBkQzFoY0hCbFlYSmhibU5sT2lCdWIyNWxPeUF2S2lBeElDb3ZYRzRnSUdKaFkydG5jbTkxYm1RNklIUnlZVzV6Y0dGeVpXNTBPMXh1SUNCaWIzSmtaWEl0WTI5c2IzSTZJSFpoY2lndExVSjFkSFJ2YmkxaWIzSmtaWEl0WTI5c2IzSXBPMXh1SUNCaWIzSmtaWEl0YzNSNWJHVTZJSE52Ykdsa08xeHVJQ0JpYjNKa1pYSXRkMmxrZEdnNklIWmhjaWd0TFVKMWRIUnZiaTFpYjNKa1pYSXRkMmxrZEdncE8xeHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE95QXZLaUF5SUNvdlhHNGdJR052Ykc5eU9pQjJZWElvTFMxQ2RYUjBiMjR0WTI5c2IzSXBPeUF2S2lBeklDb3ZYRzRnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmlBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1SUNCbWIyNTBPaUIyWVhJb0xTMUNkWFIwYjI0dFptOXVkQ2s3SUM4cUlEUWdLaTljYmlBZ2JHbHVaUzFvWldsbmFIUTZJRzV2Y20xaGJEc2dMeW9nTlNBcUwxeHVJQ0J0WVhKbmFXNDZJREE3WEc0Z0lIQmhaR1JwYm1jNklIWmhjaWd0TFVKMWRIUnZiaTF3WVdSa2FXNW5LVHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjYmlBZ2RYTmxjaTF6Wld4bFkzUTZJRzV2Ym1VN0lDOHFJRFlnS2k5Y2JpQWdkMmhwZEdVdGMzQmhZMlU2SUc1dmNtMWhiRHNnTHlvZ055QXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCbGVHTmxjM01nY0dGa1pHbHVaeUJoYm1RZ1ltOXlaR1Z5SUdsdUlFWnBjbVZtYjNnZ05DdGNiaUFxTDF4dVhHNHVRblYwZEc5dU9qb3RiVzk2TFdadlkzVnpMV2x1Ym1WeUlIdGNiaUFnWW05eVpHVnlPaUF3TzF4dUlDQndZV1JrYVc1bk9pQXdPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGZHZjbXNnWVhKdmRXNWtJR0VnUm1seVpXWnZlQzlKUlNCaWRXY2dkMmhsY21VZ2RHaGxJSFJ5WVc1emNHRnlaVzUwSUdCaWRYUjBiMjVnSUdKaFkydG5jbTkxYm1SY2JpQXFJSEpsYzNWc2RITWdhVzRnWVNCc2IzTnpJRzltSUhSb1pTQmtaV1poZFd4MElHQmlkWFIwYjI1Z0lHWnZZM1Z6SUhOMGVXeGxjeTVjYmlBcUwxeHVYRzR1UW5WMGRHOXVPbVp2WTNWeklIdGNiaUFnYjNWMGJHbHVaVG9nTVhCNElHUnZkSFJsWkR0Y2JpQWdiM1YwYkdsdVpUb2dOWEI0SUdGMWRHOGdMWGRsWW10cGRDMW1iMk4xY3kxeWFXNW5MV052Ykc5eU8xeHVmVnh1WEc0dktpcGNiaUFxSUZWSklITjBZWFJsYzF4dUlDb3ZYRzVjYmk1Q2RYUjBiMjQ2YUc5MlpYSXNYRzR1UW5WMGRHOXVPbVp2WTNWekxGeHVMa0oxZEhSdmJqcGhZM1JwZG1VZ2UxeHVJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1VN1hHNTlYRzVjYmk1Q2RYUjBiMjQ2WkdsellXSnNaV1FzWEc0dVFuVjBkRzl1TG1sekxXUnBjMkZpYkdWa0lIdGNiaUFnWTNWeWMyOXlPaUJrWldaaGRXeDBPMXh1SUNCdmNHRmphWFI1T2lCMllYSW9MUzFDZFhSMGIyNHRaR2x6WVdKc1pXUXRiM0JoWTJsMGVTazdYRzU5WEc0aUxDSXZLaW9nUUdSbFptbHVaU0JKYm5CMWRFZHliM1Z3T3lCMWMyVWdjM1J5YVdOMElDb3ZYRzVjYmpweWIyOTBJSHRjYmlBZ0xTMUpibkIxZEVkeWIzVndMWEpvZVhSb2JUb2dNUzQxY21WdE8xeHVJQ0F0TFVsdWNIVjBSM0p2ZFhBdGFXNXdkWFF0WTI5c2IzSTZJQ015TURjeE9FRTdYRzRnSUMwdFNXNXdkWFJIY205MWNDMWhaR1J2YmkxamIyeHZjam9nWTI5c2IzSW9Jekl3TnpFNFFTQjBhVzUwS0RNd0pTa3BPMXh1SUNBdExVbHVjSFYwUjNKdmRYQXRZbTl5WkdWeUxXTnZiRzl5T2lCamIyeHZjaWdqTWpBM01UaEJJSFJwYm5Rb05qQWxLU2s3WEc0Z0lDMHRTVzV3ZFhSSGNtOTFjQzFpYjNKa1pYSXRMV1p2WTNWekxXTnZiRzl5T2lCamIyeHZjaWdqTWpBM01UaEJJSFJwYm5Rb016QWxLU2s3WEc0Z0lDMHRTVzV3ZFhSSGNtOTFjQzEwY21GdWMybDBhVzl1T2lBd0xqSnpJR04xWW1sakxXSmxlbWxsY2lndU1qWXNJQzQwTnl3Z0xqTTJMQ0F1T1RRcE8xeHVmVnh1WEc0dVNXNXdkWFJIY205MWNDQjdYRzRnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdVN1hHNGdJR0p2Y21SbGNpMWpiMnhzWVhCelpUb2djMlZ3WVhKaGRHVTdYRzU5WEc1Y2JpNUpibkIxZEVkeWIzVndMV2x1Y0hWMExGeHVMa2x1Y0hWMFIzSnZkWEF0WVdSa2IyNHNYRzR1U1c1d2RYUkhjbTkxY0MxaWRYUjBiMjRnZTF4dUlDQmthWE53YkdGNU9pQjBZV0pzWlMxalpXeHNPMXh1SUNCMGNtRnVjMmwwYVc5dU9pQjJZWElvTFMxSmJuQjFkRWR5YjNWd0xYUnlZVzV6YVhScGIyNHBPMXh1ZlZ4dVhHNHVTVzV3ZFhSSGNtOTFjQzFwYm5CMWRDeGNiaTVKYm5CMWRFZHliM1Z3TFdGa1pHOXVJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RISmhibk53WVhKbGJuUTdYRzRnSUhCaFpHUnBibWM2SURBZ1kyRnNZeWgyWVhJb0xTMUpibkIxZEVkeWIzVndMWEpvZVhSb2JTa2dLaUF1TWpVcE8xeHVmVnh1WEc0dVNXNXdkWFJIY205MWNDMXBibkIxZENCN1hHNGdJR0p2Y21SbGNqb2dibTl1WlR0Y2JpQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lHTnZiRzl5T2lCMllYSW9MUzFKYm5CMWRFZHliM1Z3TFdsdWNIVjBMV052Ykc5eUtUdGNibjFjYmx4dUxrbHVjSFYwUjNKdmRYQXRZV1JrYjI0Z2UxeHVJQ0JqYjJ4dmNqb2dkbUZ5S0MwdFNXNXdkWFJIY205MWNDMWhaR1J2YmkxamIyeHZjaWs3WEc0Z0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNiaUFnZDJsa2RHZzZJREVsTzF4dUlDQjNhR2wwWlMxemNHRmpaVG9nYm05M2NtRndPMXh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxPMXh1ZlZ4dVhHNHVTVzV3ZFhSSGNtOTFjQzFoWkdSdmJqcGlaV1p2Y21VZ2UxeHVJQ0JqYjI1MFpXNTBPaUFuSUNjN1hHNTlYRzVjYmk1SmJuQjFkRWR5YjNWd0xtbHpMV1p2WTNWelpXUWdMa2x1Y0hWMFIzSnZkWEF0YVc1d2RYUXNYRzR1U1c1d2RYUkhjbTkxY0M1cGN5MW1iMk4xYzJWa0lDNUpibkIxZEVkeWIzVndMV0ZrWkc5dUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTJabVpqdGNibjFjYmx4dUxrbHVjSFYwUjNKdmRYQXRMV0p2Y21SbGNtVmtJQzVKYm5CMWRFZHliM1Z3TFdsdWNIVjBMRnh1TGtsdWNIVjBSM0p2ZFhBdExXSnZjbVJsY21Wa0lDNUpibkIxZEVkeWIzVndMV0ZrWkc5dUxGeHVMa2x1Y0hWMFIzSnZkWEF0TFc5MWRHeHBibVZrSUM1SmJuQjFkRWR5YjNWd0xXbHVjSFYwTEZ4dUxrbHVjSFYwUjNKdmRYQXRMVzkxZEd4cGJtVmtJQzVKYm5CMWRFZHliM1Z3TFdGa1pHOXVJSHRjYmlBZ1ltOXlaR1Z5TFhSdmNEb2dNWEI0SUhOdmJHbGtJSFpoY2lndExVbHVjSFYwUjNKdmRYQXRZbTl5WkdWeUxXTnZiRzl5S1R0Y2JpQWdZbTl5WkdWeUxXSnZkSFJ2YlRvZ01YQjRJSE52Ykdsa0lIWmhjaWd0TFVsdWNIVjBSM0p2ZFhBdFltOXlaR1Z5TFdOdmJHOXlLVHRjYm4xY2JseHVMa2x1Y0hWMFIzSnZkWEF0TFdKdmNtUmxjbVZrSUM1SmJuQjFkRWR5YjNWd0xXbHVjSFYwSUh0Y2JpQWdZbTl5WkdWeUxXeGxablE2SURGd2VDQnpiMnhwWkNCMllYSW9MUzFKYm5CMWRFZHliM1Z3TFdKdmNtUmxjaTFqYjJ4dmNpazdYRzRnSUdKdmNtUmxjaTF5YVdkb2REb2dNWEI0SUhOdmJHbGtJSFpoY2lndExVbHVjSFYwUjNKdmRYQXRZbTl5WkdWeUxXTnZiRzl5S1R0Y2JuMWNibHh1TGtsdWNIVjBSM0p2ZFhBdExXOTFkR3hwYm1Wa0lDNUpibkIxZEVkeWIzVndMV2x1Y0hWME9tWnBjbk4wTFdOb2FXeGtMRnh1TGtsdWNIVjBSM0p2ZFhBdExXOTFkR3hwYm1Wa0lDNUpibkIxZEVkeWIzVndMV0ZrWkc5dU9tWnBjbk4wTFdOb2FXeGtJSHRjYmlBZ1ltOXlaR1Z5TFd4bFpuUTZJREZ3ZUNCemIyeHBaQ0IyWVhJb0xTMUpibkIxZEVkeWIzVndMV0p2Y21SbGNpMWpiMnh2Y2lrN1hHNTlYRzVjYmk1SmJuQjFkRWR5YjNWd0xTMXZkWFJzYVc1bFpDQXVTVzV3ZFhSSGNtOTFjQzFwYm5CMWREcHNZWE4wTFdOb2FXeGtMRnh1TGtsdWNIVjBSM0p2ZFhBdExXOTFkR3hwYm1Wa0lDNUpibkIxZEVkeWIzVndMV0ZrWkc5dU9teGhjM1F0WTJocGJHUWdlMXh1SUNCaWIzSmtaWEl0Y21sbmFIUTZJREZ3ZUNCemIyeHBaQ0IyWVhJb0xTMUpibkIxZEVkeWIzVndMV0p2Y21SbGNpMWpiMnh2Y2lrN1hHNTlYRzVjYmk1SmJuQjFkRWR5YjNWd0xTMWliM0prWlhKbFpDNXBjeTFtYjJOMWMyVmtJQzVKYm5CMWRFZHliM1Z3TFdsdWNIVjBMRnh1TGtsdWNIVjBSM0p2ZFhBdExXSnZjbVJsY21Wa0xtbHpMV1p2WTNWelpXUWdMa2x1Y0hWMFIzSnZkWEF0WVdSa2IyNHNYRzR1U1c1d2RYUkhjbTkxY0MwdGIzVjBiR2x1WldRdWFYTXRabTlqZFhObFpDQXVTVzV3ZFhSSGNtOTFjQzFwYm5CMWRDeGNiaTVKYm5CMWRFZHliM1Z3TFMxdmRYUnNhVzVsWkM1cGN5MW1iMk4xYzJWa0lDNUpibkIxZEVkeWIzVndMV0ZrWkc5dUlIdGNiaUFnWW05eVpHVnlMV052Ykc5eU9pQjJZWElvTFMxSmJuQjFkRWR5YjNWd0xXSnZjbVJsY2kwdFptOWpkWE10WTI5c2IzSXBPMXh1ZlZ4dVhHNHVTVzV3ZFhSSGNtOTFjQzB0Y205MWJtUmxaQ0F1U1c1d2RYUkhjbTkxY0MxcGJuQjFkRHBtYVhKemRDMWphR2xzWkN4Y2JpNUpibkIxZEVkeWIzVndMUzF5YjNWdVpHVmtJQzVKYm5CMWRFZHliM1Z3TFdGa1pHOXVPbVpwY25OMExXTm9hV3hrSUh0Y2JpQWdZbTl5WkdWeUxXSnZkSFJ2YlMxc1pXWjBMWEpoWkdsMWN6b2dZMkZzWXloMllYSW9MUzFKYm5CMWRFZHliM1Z3TFhKb2VYUm9iU2tnS2lBeEtUdGNiaUFnWW05eVpHVnlMWFJ2Y0Mxc1pXWjBMWEpoWkdsMWN6b2dZMkZzWXloMllYSW9MUzFKYm5CMWRFZHliM1Z3TFhKb2VYUm9iU2tnS2lBeEtUdGNiaUFnY0dGa1pHbHVaeTFzWldaME9pQmpZV3hqS0haaGNpZ3RMVWx1Y0hWMFIzSnZkWEF0Y21oNWRHaHRLU0FxSUM0ek56VXBPMXh1ZlZ4dVhHNHVTVzV3ZFhSSGNtOTFjQzB0Y205MWJtUmxaQ0F1U1c1d2RYUkhjbTkxY0MxcGJuQjFkRHBzWVhOMExXTm9hV3hrTEZ4dUxrbHVjSFYwUjNKdmRYQXRMWEp2ZFc1a1pXUWdMa2x1Y0hWMFIzSnZkWEF0WVdSa2IyNDZiR0Z6ZEMxamFHbHNaQ0I3WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjB0Y21sbmFIUXRjbUZrYVhWek9pQmpZV3hqS0haaGNpZ3RMVWx1Y0hWMFIzSnZkWEF0Y21oNWRHaHRLU0FxSURFcE8xeHVJQ0JpYjNKa1pYSXRkRzl3TFhKcFoyaDBMWEpoWkdsMWN6b2dZMkZzWXloMllYSW9MUzFKYm5CMWRFZHliM1Z3TFhKb2VYUm9iU2tnS2lBeEtUdGNiaUFnY0dGa1pHbHVaeTF5YVdkb2REb2dZMkZzWXloMllYSW9MUzFKYm5CMWRFZHliM1Z3TFhKb2VYUm9iU2tnS2lBdU16YzFLVHRjYm4xY2JpSXNJaThxS2lCQVpHVm1hVzVsSUVSeWIzQmtiM2R1T3lCMWMyVWdjM1J5YVdOMElDb3ZYRzVjYmpweWIyOTBJSHRjYmlBZ0xTMUVjbTl3Wkc5M2JpMXlhSGwwYUcwZ0lDQWdJQ0FnSUNBZ0lDQWdJRG9nTVM0MWNtVnRPMXh1SUNBdExVUnliM0JrYjNkdUxYUnlZVzV6YVhScGIyNGdJQ0FnSUNBZ0lDQWdPaUJoYkd3Z0xqSnpJR04xWW1sakxXSmxlbWxsY2lndU1UYzFMQ0F1T0RnMUxDQXVNekl3TENBeExqSTNOU2s3WEc0Z0lDMHRSSEp2Y0dSdmQyNHRlaTFwYm1SbGVDQWdJQ0FnSUNBZ0lDQWdJQ0E2SURFd01EdGNiaUFnTFMxRWNtOXdaRzkzYmkxcGN5MWhZM1JwZG1VdGVpMXBibVJsZUNBZ0lEb2dPVEF3TzF4dUlDQXRMVVJ5YjNCa2IzZHVMV052Ym5SbGJuUXRZMjlzYjNJdFltY2dJQ0FnT2lBalptWm1PMXh1SUNBdExVUnliM0JrYjNkdUxXTnZiblJsYm5RdFltOXlaR1Z5SUNBZ0lDQWdPaUF4Y0hnZ2MyOXNhV1FnY21kaVlTZ3dMREFzTUN3dU1UVXBPMXh1SUNBdExVUnliM0JrYjNkdUxXTnZiblJsYm5RdGVpMXBibVJsZUNBZ0lDQWdPaUE0TURBN1hHNGdJQzB0UkhKdmNHUnZkMjR0ZEdsMGJHVXRjMmw2WlNBZ0lDQWdJQ0FnSUNBNklHTmhiR01vTVRRdk1UWWdLaUF4Y21WdEtUdGNiaUFnTFMxRWNtOXdaRzkzYmkxMGFYUnNaUzFqYjJ4dmNpQWdJQ0FnSUNBZ0lEb2dZMjlzYjNJb0l6UXhOams0T0NCMGFXNTBLREl3SlNrcE8xeHVJQ0F0TFVSeWIzQmtiM2R1TFhScGRHeGxMV052Ykc5eUxXSm5JQ0FnSUNBZ09pQmpiMnh2Y2lnak5ERTJPVGc0SUhScGJuUW9PVEFsS1NrN1hHNGdJQzB0UkhKdmNHUnZkMjR0YVhSbGJTMWpiMnh2Y2lBZ0lDQWdJQ0FnSUNBNklDTTBaVGxtWkdRN1hHNGdJQzB0UkhKdmNHUnZkMjR0YVhSbGJTMW9iM1psY2kxamIyeHZjaUFnSUNBNklIWmhjaWd0TFVSeWIzQmtiM2R1TFdOdmJuUmxiblF0WTI5c2IzSXRZbWNwTzF4dUlDQXRMVVJ5YjNCa2IzZHVMV2wwWlcwdGFHOTJaWEl0WTI5c2IzSXRZbWNnT2lCMllYSW9MUzFFY205d1pHOTNiaTFwZEdWdExXTnZiRzl5S1R0Y2JpQWdMUzFFY205d1pHOTNiaTFwZEdWdExYUnlZVzV6YVhScGIyNGdJQ0FnSURvZ1lXeHNJQzR5Y3lCbFlYTmxMVzkxZER0Y2JuMWNibHh1TGtSeWIzQmtiM2R1SUh0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCNkxXbHVaR1Y0T2lCMllYSW9MUzFFY205d1pHOTNiaTE2TFdsdVpHVjRLVHRjYmlBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1SUNCMWMyVnlMWE5sYkdWamREb2dibTl1WlR0Y2JuMWNibHh1TGtSeWIzQmtiM2R1TG1sekxXRmpkR2wyWlNCN1hHNGdJSG90YVc1a1pYZzZJSFpoY2lndExVUnliM0JrYjNkdUxXbHpMV0ZqZEdsMlpTMTZMV2x1WkdWNEtUdGNibjFjYmx4dUxrUnliM0JrYjNkdUxYUnZaMmRzWlVsamIyNGdlMXh1SUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUhSeVlXNXphWFJwYjI0NklIWmhjaWd0TFVSeWIzQmtiM2R1TFhSeVlXNXphWFJwYjI0cE8xeHVJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc1OVhHNWNiaTVFY205d1pHOTNiaTVwY3kxaFkzUnBkbVVnTGtSeWIzQmtiM2R1TFhSdloyZHNaVWxqYjI0Z2UxeHVJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2d4T0RCa1pXY3BPMXh1ZlZ4dVhHNHVSSEp2Y0dSdmQyNHRZMjl1ZEdWdWRDQjdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdlaTFwYm1SbGVEb2dkbUZ5S0MwdFJISnZjR1J2ZDI0dFkyOXVkR1Z1ZEMxNkxXbHVaR1Y0S1R0Y2JpQWdkRzl3T2lBeE1EQWxPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQjJhWE5wWW1sc2FYUjVPaUJvYVdSa1pXNDdYRzRnSUdac2IyRjBPaUJzWldaME8xeHVJQ0J2ZG1WeVpteHZkem9nWVhWMGJ6dGNiaUFnYjNabGNtWnNiM2N0ZURvZ2FHbGtaR1Z1TzF4dUlDQnZkbVZ5Wm14dmR5MTVPaUJoZFhSdk8xeHVJQ0J0WVhndGFHVnBaMmgwT2lCallXeGpLSFpoY2lndExVUnliM0JrYjNkdUxYSm9lWFJvYlNrZ0tpQXhOeWs3WEc0Z0lHMXBiaTEzYVdSMGFEb2dNVEF3SlR0Y2JpQWdiV0Z5WjJsdU9pQXdPMXh1SUNCd1lXUmthVzVuT2lBd08xeHVJQ0IwY21GdWMybDBhVzl1T2lCMllYSW9MUzFFY205d1pHOTNiaTEwY21GdWMybDBhVzl1S1R0Y2JpQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0MwMU1DVXBPMXh1SUNCMFpYaDBMV0ZzYVdkdU9pQnNaV1owTzF4dUlDQnZjR0ZqYVhSNU9pQXdPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzFFY205d1pHOTNiaTFqYjI1MFpXNTBMV052Ykc5eUxXSm5LVHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiR2x3T2lCd1lXUmthVzVuTFdKdmVEdGNiaUFnWW05NExYTm9ZV1J2ZHpvZ01DQXdJSFpoY2lndExVUnliM0JrYjNkdUxYSm9lWFJvYlNrZ2NtZGlZU2d3TERBc01Dd3dMakVwTzF4dWZWeHVYRzR1UkhKdmNHUnZkMjR0WTI5dWRHVnVkQzB0UW05eVpHVnlaV1FnZTF4dUlDQmliM0prWlhJNklIWmhjaWd0TFVSeWIzQmtiM2R1TFdOdmJuUmxiblF0WW05eVpHVnlLVHRjYmlBZ1ltOXlaR1Z5TFdKdmRIUnZiUzEzYVdSMGFEb2dNbkI0TzF4dWZWeHVYRzR1UkhKdmNHUnZkMjR1YVhNdFlXTjBhWFpsSUQ0Z0xrUnliM0JrYjNkdUxXTnZiblJsYm5RZ2UxeHVJQ0IyYVhOcFltbHNhWFI1T2lCMmFYTnBZbXhsTzF4dUlDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvTUNrN1hHNGdJRzl3WVdOcGRIazZJREU3WEc1OVhHNWNiaTVFY205d1pHOTNiaTEwYVhSc1pTQjdYRzRnSUdadmJuUXRjMmw2WlRvZ1kyRnNZeWd4TkM4eE5pQXFJREZ5WlcwcE8xeHVJQ0J3WVdSa2FXNW5PaUJqWVd4aktIWmhjaWd0TFVSeWIzQmtiM2R1TFhKb2VYUm9iU2tnS2lBdU1USTFLU0JqWVd4aktIWmhjaWd0TFVSeWIzQmtiM2R1TFhKb2VYUm9iU2tnS2lBdU1qVXBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzFFY205d1pHOTNiaTEwYVhSc1pTMWpiMnh2Y2kxaVp5azdYRzRnSUdKdmNtUmxjaTFpYjNSMGIyMDZJSFpoY2lndExVUnliM0JrYjNkdUxXTnZiblJsYm5RdFltOXlaR1Z5S1R0Y2JpQWdZMjlzYjNJNklIWmhjaWd0TFVSeWIzQmtiM2R1TFhScGRHeGxMV052Ykc5eUtUdGNibjFjYmx4dUxrUnliM0JrYjNkdUxXbDBaVzBnZTF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SUdOaGJHTW9kbUZ5S0MwdFJISnZjR1J2ZDI0dGNtaDVkR2h0S1NBcUlDNDROelVwTzF4dUlDQndZV1JrYVc1bk9pQmpZV3hqS0haaGNpZ3RMVVJ5YjNCa2IzZHVMWEpvZVhSb2JTa2dLaUF1TWpVcElHTmhiR01vZG1GeUtDMHRSSEp2Y0dSdmQyNHRjbWg1ZEdodEtTQXFJQzR5TlNrN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUhaaGNpZ3RMVVJ5YjNCa2IzZHVMV2wwWlcwdGRISmhibk5wZEdsdmJpazdYRzRnSUdOdmJHOXlPaUIyWVhJb0xTMUVjbTl3Wkc5M2JpMXBkR1Z0TFdOdmJHOXlLVHRjYm4xY2JseHVMa1J5YjNCa2IzZHVMV2wwWlcwNmFHOTJaWElnZTF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0UkhKdmNHUnZkMjR0YVhSbGJTMW9iM1psY2kxamIyeHZjaWs3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIWmhjaWd0TFVSeWIzQmtiM2R1TFdsMFpXMHRhRzkyWlhJdFkyOXNiM0l0WW1jcE8xeHVmVnh1WEc0dktpcGNiaUFxSUUxdlpHbG1hV1Z5YzF4dUlDb3ZYRzVjYmk1RWNtOXdaRzkzYmkwdGNtbG5hSFFnTGtSeWIzQmtiM2R1TFdOdmJuUmxiblFnZTF4dUlDQnNaV1owT2lCaGRYUnZPMXh1SUNCeWFXZG9kRG9nTUR0Y2JuMWNiaUlzSWk4cUtpQkFaR1ZtYVc1bElFaGxZV1JsY2pzZ2RYTmxJSE4wY21samRDQXFMMXh1WEc0NmNtOXZkQ0I3WEc0Z0lDMHRTR1ZoWkdWeUxXSmhZMnRuY205MWJtUWdPaUFqTkdVNVptUmtPMXh1SUNBdExVaGxZV1JsY2kxeWFIbDBhRzBnSUNBZ0lEb2dNUzQxY21WdE8xeHVJQ0F0TFVobFlXUmxjaTE2TFdsdVpHVjRJQ0FnSURvZ09UQXdPMXh1ZlZ4dVhHNHVTR1ZoWkdWeUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZG1GeUtDMHRTR1ZoWkdWeUxXSmhZMnRuY205MWJtUXBPMXh1SUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1E3WEc0Z0lIb3RhVzVrWlhnNklERXdNRHRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzRnSUhSdmNEb2dNRHRjYmlBZ1ltOTRMWE5vWVdSdmR6b2dNQ0JqWVd4aktIWmhjaWd0TFVobFlXUmxjaTF5YUhsMGFHMHBJQ29nTGpJMUtTQjJZWElvTFMxSVpXRmtaWEl0Y21oNWRHaHRLU0J5WjJKaEtEQXNNQ3d3TERBdU1TazdYRzU5WEc1Y2JpNUlaV0ZrWlhJdGFYUmxiU0I3WEc0Z0lHaGxhV2RvZERvZ1kyRnNZeWgyWVhJb0xTMUlaV0ZrWlhJdGNtaDVkR2h0S1NBcUlESXBPMXh1SUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUhCaFpHUnBibWN0ZEc5d09pQmpZV3hqS0haaGNpZ3RMVWhsWVdSbGNpMXlhSGwwYUcwcElDb2dMalVwTzF4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ1kyRnNZeWgyWVhJb0xTMUlaV0ZrWlhJdGNtaDVkR2h0S1NBcUlDNDFLVHRjYm4xY2JseHVMa2hsWVdSbGNpMWhkbUYwWVhJZ2UxeHVJQ0J0WVhKbmFXNHRkRzl3T2lCallXeGpLSFpoY2lndExVaGxZV1JsY2kxeWFIbDBhRzBwSUNvZ0xqTTNOU2s3WEc0Z0lHMWhjbWRwYmkxaWIzUjBiMjA2SUdOaGJHTW9kbUZ5S0MwdFNHVmhaR1Z5TFhKb2VYUm9iU2tnS2lBdU16YzFLVHRjYmlBZ2QybGtkR2c2SUdOaGJHTW9kbUZ5S0MwdFNHVmhaR1Z5TFhKb2VYUm9iU2tnS2lBeExqSTFLVHRjYmlBZ2FHVnBaMmgwT2lCallXeGpLSFpoY2lndExVaGxZV1JsY2kxeWFIbDBhRzBwSUNvZ01TNHlOU2s3WEc0Z0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYm4xY2JpSXNJaThxS2lCQVpHVm1hVzVsSUVobFlXUnBibWM3SUhWelpTQnpkSEpwWTNRZ0tpOWNibHh1T25KdmIzUWdlMXh1SUNBdExVaGxZV1JwYm1jdFptOXVkQzFtWVcxcGJIa2dJRG9nSjBobGJIWmxkR2xqWVNCT1pYVmxKeXdnU0dWc2RtVjBhV05oVG1WMVpTd2dTR1ZzZG1WMGFXTmhMQ0JCY21saGJDd2djMkZ1Y3kxelpYSnBaanRjYmlBZ0xTMUlaV0ZrYVc1bkxXWnZiblF0ZDJWcFoyaDBJQ0E2SURZd01EdGNiaUFnTFMxSVpXRmthVzVuTFhOcGVtVXRhREVnSUNBZ0lDQTZJRE0yY0hnN1hHNGdJQzB0U0dWaFpHbHVaeTF6YVhwbExXZ3lJQ0FnSUNBZ09pQXlPSEI0TzF4dUlDQXRMVWhsWVdScGJtY3RjMmw2WlMxb015QWdJQ0FnSURvZ01qUndlRHRjYmlBZ0xTMUlaV0ZrYVc1bkxYTnBlbVV0YURRZ0lDQWdJQ0E2SURJd2NIZzdYRzRnSUMwdFNHVmhaR2x1WnkxemFYcGxMV2cxSUNBZ0lDQWdPaUF4T0hCNE8xeHVJQ0F0TFVobFlXUnBibWN0YzJsNlpTMW9OaUFnSUNBZ0lEb2dNVFp3ZUR0Y2JuMWNibHh1TG1neExGeHVMbWd5TEZ4dUxtZ3pMRnh1TG1nMExGeHVMbWcxTEZ4dUxtZzJJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJSFpoY2lndExVaGxZV1JwYm1jdFptOXVkQzFtWVcxcGJIa3BPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dkbUZ5S0MwdFNHVmhaR2x1WnkxbWIyNTBMWGRsYVdkb2RDazdYRzU5WEc1Y2JpNW9NU0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dkbUZ5S0MwdFNHVmhaR2x1WnkxemFYcGxMV2d4S1R0Y2JuMWNibHh1TG1neUlIdGNiaUFnWm05dWRDMXphWHBsT2lCMllYSW9MUzFJWldGa2FXNW5MWE5wZW1VdGFESXBPMXh1ZlZ4dVhHNHVhRE1nZTF4dUlDQm1iMjUwTFhOcGVtVTZJSFpoY2lndExVaGxZV1JwYm1jdGMybDZaUzFvTXlrN1hHNTlYRzVjYmk1b05DQjdYRzRnSUdadmJuUXRjMmw2WlRvZ2RtRnlLQzB0U0dWaFpHbHVaeTF6YVhwbExXZzBLVHRjYm4xY2JseHVMbWcxSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUIyWVhJb0xTMUlaV0ZrYVc1bkxYTnBlbVV0YURVcE8xeHVmVnh1WEc0dWFEWWdlMXh1SUNCbWIyNTBMWE5wZW1VNklIWmhjaWd0TFVobFlXUnBibWN0YzJsNlpTMW9OaWs3WEc1OVhHNWNiaTVJWldGa2FXNW5MUzF3WVc1bGJDQjdYRzRnSUdadmJuUXRjMmw2WlRvZ01YSmxiVHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2JpQWdiV0Z5WjJsdU9pQXdPMXh1SUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dWZWeHVJaXdpTHlvcUlFQmtaV1pwYm1VZ1NXTnZianNnZFhObElITjBjbWxqZENBcUwxeHVYRzQ2Y205dmRDQjdYRzRnSUMwdFNXTnZiaTF5YUhsMGFHMDZJREV1TlhKbGJUdGNiaUFnTFMxSlkyOXVMWFJ5WVc1emFYUnBiMjR0WldGelpUb2dZM1ZpYVdNdFltVjZhV1Z5S0M0eE56VXNJQzQ0T0RVc0lDNHpNakFzSURFdU1qYzFLVHRjYmlBZ0xTMUpZMjl1TFhSeVlXNXphWFJwYjI0NklDNHlOWE1nWVd4c0lIWmhjaWd0TFVsamIyNHRkSEpoYm5OcGRHbHZiaTFsWVhObEtUdGNibjFjYmx4dUxrbGpiMjRnZTF4dUlDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzRnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnZEhKaGJuTnBkR2x2YmpvZ2RtRnlLQzB0U1dOdmJpMTBjbUZ1YzJsMGFXOXVLVHRjYm4xY2JseHVMa2xqYjI0dWFYTXRjbTkwWVhSbFpDQjdYRzRnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RFNE1HUmxaeWs3WEc1OVhHNWNiaTVKWTI5dUxXbDBaVzBnZTF4dUlDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ0xUSTFKVHRjYmlBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1SUNCM2FXUjBhRG9nZG1GeUtDMHRTV052YmkxeWFIbDBhRzBwTzF4dUlDQm9aV2xuYUhRNklIWmhjaWd0TFVsamIyNHRjbWg1ZEdodEtUdGNiaUFnWm1sc2JEb2dZM1Z5Y21WdWRFTnZiRzl5SUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1SlkyOXVMUzE0YkdjZ0xrbGpiMjR0YVhSbGJTQjdYRzRnSUhkcFpIUm9PaUJqWVd4aktIWmhjaWd0TFVsamIyNHRjbWg1ZEdodEtTQXFJRElwTzF4dUlDQm9aV2xuYUhRNklHTmhiR01vZG1GeUtDMHRTV052YmkxeWFIbDBhRzBwSUNvZ01pazdYRzU5WEc1Y2JpNUpZMjl1TFMxc1p5QXVTV052YmkxcGRHVnRJSHRjYmlBZ2QybGtkR2c2SUdOaGJHTW9kbUZ5S0MwdFNXTnZiaTF5YUhsMGFHMHBJQ29nTVM0MUtUdGNiaUFnYUdWcFoyaDBPaUJqWVd4aktIWmhjaWd0TFVsamIyNHRjbWg1ZEdodEtTQXFJREV1TlNrN1hHNTlYRzVjYmk1SlkyOXVMUzF6YlNBdVNXTnZiaTFwZEdWdElIdGNiaUFnZG1WeWRHbGpZV3d0WVd4cFoyNDZJQzB4TlNVN1hHNGdJSGRwWkhSb09pQmpZV3hqS0haaGNpZ3RMVWxqYjI0dGNtaDVkR2h0S1NBcUlDNDNOU2s3WEc0Z0lHaGxhV2RvZERvZ1kyRnNZeWgyWVhJb0xTMUpZMjl1TFhKb2VYUm9iU2tnS2lBdU56VXBPMXh1ZlZ4dVhHNHVTV052YmkwdGVITnRJQzVKWTI5dUxXbDBaVzBnZTF4dUlDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ0xURXdKVHRjYmlBZ2QybGtkR2c2SUdOaGJHTW9kbUZ5S0MwdFNXTnZiaTF5YUhsMGFHMHBJQ29nTGpZeU5TazdYRzRnSUdobGFXZG9kRG9nWTJGc1l5aDJZWElvTFMxSlkyOXVMWEpvZVhSb2JTa2dLaUF1TmpJMUtUdGNibjFjYmx4dUxrbGpiMjR0TFdOcGNtTnNaU0I3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnY0dGa1pHbHVaem9nWTJGc1l5aDJZWElvTFMxSlkyOXVMWEpvZVhSb2JTa2dLaUF1TlNrN1hHNTlYRzVjYmk1SlkyOXVMUzFqYVhKamJHVTZZbVZtYjNKbElIdGNiaUFnWTI5dWRHVnVkRG9nWENKY0lqdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQjBiM0E2SURBN1hHNGdJR3hsWm5RNklEQTdYRzRnSUhKcFoyaDBPaUF3TzF4dUlDQmliM1IwYjIwNklEQTdYRzRnSUdKdmNtUmxjam9nTW5CNElITnZiR2xrTzF4dUlDQnZjR0ZqYVhSNU9pQXVNanRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nWTJGc1l5aDJZWElvTFMxSlkyOXVMWEpvZVhSb2JTa2dLaUF5S1R0Y2JuMWNibHh1TGtsamIyNHRMV05wY21Oc1pTNUpZMjl1TFMxc1p5eGNiaTVKWTI5dUxTMWphWEpqYkdVdVNXTnZiaTB0ZUd4bklIdGNiaUFnWW05eVpHVnlMWGRwWkhSb09pQXpjSGc3WEc0Z0lIQmhaR1JwYm1jNklHTmhiR01vZG1GeUtDMHRTV052YmkxeWFIbDBhRzBwSUNvZ0xqYzFLVHRjYm4xY2JseHVMa2xqYjI0dExXTnBjbU5zWlM1SlkyOXVMUzFzWnlCN1hHNGdJSEJoWkdScGJtYzZJR05oYkdNb2RtRnlLQzB0U1dOdmJpMXlhSGwwYUcwcElDb2dMall5TlNrN1hHNTlYRzVjYmk1SlkyOXVMUzFqYVhKamJHVXVTV052YmkwdGMyMHNYRzR1U1dOdmJpMHRZMmx5WTJ4bExrbGpiMjR0TFhoemJTQjdYRzRnSUdKdmNtUmxjaTEzYVdSMGFEb2dNWEI0TzF4dUlDQndZV1JrYVc1bk9pQmpZV3hqS0haaGNpZ3RMVWxqYjI0dGNtaDVkR2h0S1NBcUlDNHpOelVwTzF4dWZWeHVYRzR1U1dOdmJpMHRZMmx5WTJ4bExrbGpiMjR0TFhoemJTQjdYRzRnSUhCaFpHUnBibWM2SUdOaGJHTW9kbUZ5S0MwdFNXTnZiaTF5YUhsMGFHMHBJQ29nTGpJMUtUdGNibjFjYmx4dUxrbGpiMjR0TFhOMGNtOXJaV1FnTGtsamIyNHRhWFJsYlNCN1hHNGdJR1pwYkd3NklHNXZibVU3WEc0Z0lITjBjbTlyWlRvZ1kzVnljbVZ1ZEVOdmJHOXlPMXh1SUNCemRISnZhMlV0ZDJsa2RHZzZJRE03WEc1OVhHNWNiaThxSUV4dllXUmxjaUJKWTI5dUlDb3ZYRzVjYmk1SlkyOXVMUzFzYjJGa1pYSWdMa2xqYjI0dGFYUmxiU0I3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNibjFjYmx4dUxrbGpiMjR0TFd4dllXUmxjaTFrYjNRZ2UxeHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lHeGxablE2SURBN1hHNGdJSFJ2Y0RvZ016WXVNU1U3WEc0Z0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ2QybGtkR2c2SURJM0xqZ2xPMXh1SUNCb1pXbG5hSFE2SURJM0xqZ2xPMXh1SUNCaGJtbHRZWFJwYjI0NklHSnZkVzVqWldSbGJHRjVJQzQ1Y3lCcGJtWnBibWwwWlNCMllYSW9MUzFKWTI5dUxYUnlZVzV6YVhScGIyNHRaV0Z6WlNrN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklHTmhiR01vZG1GeUtDMHRTV052YmkxeWFIbDBhRzBwSUNvZ01pazdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUdOMWNuSmxiblJEYjJ4dmNqdGNiaUFnTHlvZ1VISmxkbVZ1ZENCbWFYSnpkQ0JtY21GdFpTQm1jbTl0SUdac2FXTnJaWEpwYm1jZ2QyaGxiaUJoYm1sdFlYUnBiMjRnYzNSaGNuUnpJQ292WEc1Y2JpQWdZVzVwYldGMGFXOXVMV1pwYkd3dGJXOWtaVG9nWW05MGFEdGNibjFjYmx4dUxrbGpiMjR0TFd4dllXUmxjaTFrYjNRNmJuUm9MVzltTFhSNWNHVW9NaWtnZTF4dUlDQnNaV1owT2lBek5pNHhKVHRjYmlBZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBdU1UVnpPMXh1ZlZ4dVhHNHVTV052YmkwdGJHOWhaR1Z5TFdSdmREcHVkR2d0YjJZdGRIbHdaU2d6S1NCN1hHNGdJSEpwWjJoME9pQXdPMXh1SUNCc1pXWjBPaUJoZFhSdk8xeHVJQ0JoYm1sdFlYUnBiMjR0WkdWc1lYazZJQzR6Y3p0Y2JuMWNibHh1UUd0bGVXWnlZVzFsY3lCaWIzVnVZMlZrWld4aGVTQjdYRzRnSURBbExGeHVJQ0E1TUNVc1hHNGdJREV3TUNVZ2UxeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2MyTmhiR1VvTUN3Z01DazdYRzRnSUNBZ2IzQmhZMmwwZVRvZ0xqSTdYRzRnSUgxY2JpQWdOREFsSUh0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhOallXeGxLREVzSURFcE8xeHVJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJSDFjYm4xY2JseHVJaXdpTHlvcUlFQmtaV1pwYm1VZ1RHbHVhM003SUhWelpTQnpkSEpwWTNRZ0tpOWNibHh1T25KdmIzUWdlMXh1SUNBdExVeHBibXN0WTI5c2IzSTZJQ00wWlRsbVpHUTdYRzRnSUMwdFRHbHVheTFqYjJ4dmNpMW9iM1psY2pvZ1kyOXNiM0lvZG1GeUtDMHRUR2x1YXkxamIyeHZjaWtnYzJoaFpHVW9NVEFsS1NrN1hHNGdJQzB0VEdsdWF5MWpiMnh2Y2kxaFkzUnBkbVU2SUdOdmJHOXlLSFpoY2lndExVeHBibXN0WTI5c2IzSXBJSE5vWVdSbEtESXdKU2twTzF4dUlDQXRMVXhwYm1zdFkyOXNiM0l0YVc1MlpYSjBPaUFqWm1abU8xeHVJQ0F0TFV4cGJtc3RZMjlzYjNJdGFHbG5hR3hwWjJoME9pQWpOR1U1Wm1Sa08xeHVJQ0F0TFV4cGJtc3RZMjlzYjNJdGMzVmpZMlZ6Y3pvZ0l6Y3dZVGs0WWp0Y2JpQWdMUzFNYVc1ckxXTnZiRzl5TFhWdWMzVnlaVG9nSTJVd1l6TTFNRHRjYmlBZ0xTMU1hVzVyTFdOdmJHOXlMVzVsZFhSeVlXdzZJR052Ykc5eUtDTTBNVFk1T0RnZ2RHbHVkQ2cxTUNVcEtUdGNiaUFnTFMxTWFXNXJMV052Ykc5eUxYZGhjbTVwYm1jNklDTmxNemd5TkdVN1hHNGdJQzB0VEdsdWF5MWpiMnh2Y2kxa1lXNW5aWEk2SUNObE1EVTNOV0k3WEc1OVhHNWNiaThxS2x4dUlDb2dSR1ZtWVhWc2RGeHVJQ3BjYmlBcUlFMWhhMlVnWVc1NWRHaHBibWNnYkc5dmF5QnNhV3RsSUdFZ2JHbHVhMXh1SUNvdlhHNWNiaTVNYVc1cklIdGNiaUFnWTI5c2IzSTZJSFpoY2lndExVeHBibXN0WTI5c2IzSXBPMXh1SUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzRnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYm4xY2JseHVMa3hwYm1zNmFHOTJaWElnZTF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0VEdsdWF5MWpiMnh2Y2kxb2IzWmxjaWs3WEc1OVhHNWNiaTVNYVc1ck9tRmpkR2wyWlNCN1hHNGdJR052Ykc5eU9pQjJZWElvTFMxTWFXNXJMV052Ykc5eUxXRmpkR2wyWlNrN1hHNTlYRzVjYmx4dUx5b2dTVzUyWlhKMElDb3ZYRzVjYmk1TWFXNXJMUzFwYm5abGNuUWdlMXh1SUNCdmNHRmphWFI1T2lBd0xqZzdYRzU5WEc1Y2JpNU1hVzVyTFMxcGJuWmxjblFzWEc0dVRHbHVheTB0YVc1MlpYSjBPbWh2ZG1WeUlIdGNiaUFnWTI5c2IzSTZJSFpoY2lndExVeHBibXN0WTI5c2IzSXRhVzUyWlhKMEtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVUR2x1YXkwdGFXNTJaWEowT21odmRtVnlJSHRjYmlBZ2IzQmhZMmwwZVRvZ01UdGNibjFjYmx4dUxreHBibXN0TFdsdWRtVnlkRHBoWTNScGRtVXNYRzR1VEdsdWF5MHRhVzUyWlhKMExtbHpMV0ZqZEdsMlpTQjdYRzRnSUc5d1lXTnBkSGs2SURBdU5qdGNibjFjYmx4dUx5b2dVM1ZqWTJWemN5QXFMMXh1WEc0dVRHbHVheTB0YzNWalkyVnpjeUI3WEc0Z0lHTnZiRzl5T2lCMllYSW9MUzFNYVc1ckxXTnZiRzl5TFhOMVkyTmxjM01wSUNGcGJYQnZjblJoYm5RN1hHNTlYRzVjYmk1TWFXNXJMUzF6ZFdOalpYTnpPbWh2ZG1WeUlIdGNiaUFnWTI5c2IzSTZJR052Ykc5eUtIWmhjaWd0TFV4cGJtc3RZMjlzYjNJdGMzVmpZMlZ6Y3lrZ2MyaGhaR1VvTXpBbEtTa2dJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMa3hwYm1zdExYTjFZMk5sYzNNNllXTjBhWFpsTEZ4dUxreHBibXN0TFhOMVkyTmxjM011YVhNdFlXTjBhWFpsSUh0Y2JpQWdZMjlzYjNJNklHTnZiRzl5S0haaGNpZ3RMVXhwYm1zdFkyOXNiM0l0YzNWalkyVnpjeWtnYzJoaFpHVW9OakFsS1NrZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUx5b2dWVzV6ZFhKbElDb3ZYRzVjYmk1TWFXNXJMUzExYm5OMWNtVWdlMXh1SUNCamIyeHZjam9nZG1GeUtDMHRUR2x1YXkxamIyeHZjaTExYm5OMWNtVXBJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTVNYVc1ckxTMTFibk4xY21VNmFHOTJaWElnZTF4dUlDQmpiMnh2Y2pvZ1kyOXNiM0lvZG1GeUtDMHRUR2x1YXkxamIyeHZjaTExYm5OMWNtVXBJSE5vWVdSbEtETXdKU2twSUNGcGJYQnZjblJoYm5RN1hHNTlYRzR1VEdsdWF5MHRkVzV6ZFhKbE9tRmpkR2wyWlN4Y2JpNU1hVzVyTFMxMWJuTjFjbVV1YVhNdFlXTjBhWFpsSUh0Y2JpQWdZMjlzYjNJNklHTnZiRzl5S0haaGNpZ3RMVXhwYm1zdFkyOXNiM0l0ZFc1emRYSmxLU0J6YUdGa1pTZzJNQ1VwS1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dktpQk9aWFYwY21Gc0lDb3ZYRzVjYmk1TWFXNXJMUzF1WlhWMGNtRnNJSHRjYmlBZ1kyOXNiM0k2SUhaaGNpZ3RMVXhwYm1zdFkyOXNiM0l0Ym1WMWRISmhiQ2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TGt4cGJtc3RMVzVsZFhSeVlXdzZhRzkyWlhJZ2UxeHVJQ0JqYjJ4dmNqb2dZMjlzYjNJb2RtRnlLQzB0VEdsdWF5MWpiMnh2Y2kxdVpYVjBjbUZzS1NCemFHRmtaU2d6TUNVcEtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVUR2x1YXkwdGJtVjFkSEpoYkRwaFkzUnBkbVVzWEc0dVRHbHVheTB0Ym1WMWRISmhiQzVwY3kxaFkzUnBkbVVnZTF4dUlDQmpiMnh2Y2pvZ1kyOXNiM0lvZG1GeUtDMHRUR2x1YXkxamIyeHZjaTF1WlhWMGNtRnNLU0J6YUdGa1pTZzJNQ1VwS1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dktpQlhZWEp1YVc1bklDb3ZYRzVjYmk1TWFXNXJMUzEzWVhKdWFXNW5JSHRjYmlBZ1kyOXNiM0k2SUhaaGNpZ3RMVXhwYm1zdFkyOXNiM0l0ZDJGeWJtbHVaeWtnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TGt4cGJtc3RMWGRoY201cGJtYzZhRzkyWlhJZ2UxeHVJQ0JqYjJ4dmNqb2dZMjlzYjNJb2RtRnlLQzB0VEdsdWF5MWpiMnh2Y2kxM1lYSnVhVzVuS1NCemFHRmtaU2d6TUNVcEtTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHVUR2x1YXkwdGQyRnlibWx1WnpwaFkzUnBkbVVzWEc0dVRHbHVheTB0ZDJGeWJtbHVaeTVwY3kxaFkzUnBkbVVnZTF4dUlDQmpiMnh2Y2pvZ1kyOXNiM0lvZG1GeUtDMHRUR2x1YXkxamIyeHZjaTEzWVhKdWFXNW5LU0J6YUdGa1pTZzJNQ1VwS1NBaGFXMXdiM0owWVc1ME8xeHVmVnh1WEc0dktpQkVZVzVuWlhJZ0tpOWNibHh1TGt4cGJtc3RMV1JoYm1kbGNpQjdYRzRnSUdOdmJHOXlPaUIyWVhJb0xTMU1hVzVyTFdOdmJHOXlMV1JoYm1kbGNpa2dJV2x0Y0c5eWRHRnVkRHRjYm4xY2JseHVMa3hwYm1zdExXUmhibWRsY2pwb2IzWmxjaUI3WEc0Z0lHTnZiRzl5T2lCamIyeHZjaWgyWVhJb0xTMU1hVzVyTFdOdmJHOXlMV1JoYm1kbGNpa2djMmhoWkdVb016QWxLU2tnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNiaTVNYVc1ckxTMWtZVzVuWlhJNllXTjBhWFpsTEZ4dUxreHBibXN0TFdSaGJtZGxjaTVwY3kxaFkzUnBkbVVnZTF4dUlDQmpiMnh2Y2pvZ1kyOXNiM0lvZG1GeUtDMHRUR2x1YXkxamIyeHZjaTFrWVc1blpYSXBJSE5vWVdSbEtEWXdKU2twSUNGcGJYQnZjblJoYm5RN1hHNTlYRzRpTENJNmNtOXZkQ0I3WEc0Z0lDMHRaR2xtWm1WeVpXNWpaUzFqYjJ4dmNpMWhaR1JwZEdsdmJqb2dJMFV3UmpKRk56dGNiaUFnTFMxa2FXWm1aWEpsYm1ObExXTnZiRzl5TFdSbGJHVjBhVzl1T2lBalJqUkVSVVJHTzF4dWZWeHVYRzR1UkdsbVptVnlaVzVqWlNCcGJuTXNYRzR1UkdsbVptVnlaVzVqWlNCa1pXd2dlMXh1SUNCd1lXUmthVzVuT2lBd0lERndlRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTW5CNE8xeHVmVnh1WEc0dVJHbG1abVZ5Wlc1alpTQnBibk1nZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMxa2FXWm1aWEpsYm1ObExXTnZiRzl5TFdGa1pHbDBhVzl1S1R0Y2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dWZWeHVYRzR1UkdsbVptVnlaVzVqWlNCa1pXd2dlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzFrYVdabVpYSmxibU5sTFdOdmJHOXlMV1JsYkdWMGFXOXVLVHRjYmlBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh1ZlZ4dUlpd2lMeW9xSUVCa1pXWnBibVVnVEc5bmIweHZZV1JsY2pzZ2RYTmxJSE4wY21samRDQXFMMXh1WEc0NmNtOXZkQ0I3WEc0Z0lDMHRURzluYjB4dllXUmxjaTFqYjJ4dmNpMXNiMmR2T2lBalptWm1PMXh1SUNBdExVeHZaMjlNYjJGa1pYSXRZMjlzYjNJdGJHOW5ieTFwYm5abGNuUTZJQ015TURjeE9FRTdYRzRnSUMwdFRHOW5iMHh2WVdSbGNpMXlhSGwwYUcwNklERXVOWEpsYlR0Y2JpQWdMUzFNYjJkdlRHOWhaR1Z5TFhSeVlXNXphWFJwYjI0dFpXRnpaVG9nWTNWaWFXTXRZbVY2YVdWeUtDNHhOelVzSUM0NE9EVXNJQzR6TWpBc0lERXVNamMxS1R0Y2JuMWNibHh1TGt4dloyOU1iMkZrWlhJZ2UxeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dZMkZzWXloMllYSW9MUzF5YUhsMGFHMHBJQ29nTFM0d05qSTFLVHRjYmlBZ2QybGtkR2c2SUdOaGJHTW9kbUZ5S0MwdFRHOW5iMHh2WVdSbGNpMXlhSGwwYUcwcElDb2dNUzQyTWpVcE8xeHVJQ0JvWldsbmFIUTZJR05oYkdNb2RtRnlLQzB0VEc5bmIweHZZV1JsY2kxeWFIbDBhRzBwSUNvZ01TNDJNalVwTzF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0VEc5bmIweHZZV1JsY2kxamIyeHZjaTFzYjJkdktUdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dNVEF3Y0hnN1hHNTlYRzVjYmk1TWIyZHZURzloWkdWeUxTMXBiblpsY25SbFpDQjdYRzRnSUdOdmJHOXlPaUIyWVhJb0xTMU1iMmR2VEc5aFpHVnlMV052Ykc5eUxXeHZaMjh0YVc1MlpYSjBLVHRjYm4xY2JseHVMa3h2WjI5TWIyRmtaWEl0Ykc5bmJ5QjdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdkRzl3T2lBd08xeHVJQ0J5YVdkb2REb2dNRHRjYmlBZ1ltOTBkRzl0T2lBd08xeHVJQ0JzWldaME9pQXdPMXh1SUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTGpJMWN5QjJZWElvTFMxTWIyZHZURzloWkdWeUxYUnlZVzV6YVhScGIyNHRaV0Z6WlNrN1hHNGdJR1pwYkd3NklHTjFjbkpsYm5SRGIyeHZjanRjYm4xY2JseHVYRzR1VEc5bmIweHZZV1JsY2kxemRtY2dlMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSFJ2Y0RvZ01EdGNiaUFnYkdWbWREb2dNRHRjYmlBZ2NtbG5hSFE2SURBN1hHNGdJR0p2ZEhSdmJUb2dNRHRjYmlBZ2IzWmxjbVpzYjNjNklIWnBjMmxpYkdVN1hHNTlYRzVjYmk1TWIyZHZURzloWkdWeUlIQmhkR2dnZTF4dUlDQjBjbUZ1YzJadmNtMHRiM0pwWjJsdU9pQTFNQ1VnTlRBbElEQTdYRzU5WEc1Y2JpNU1iMmR2VEc5aFpHVnlPbWh2ZG1WeUlDNU1iMmR2VEc5aFpHVnlMWG9nZTF4dUlDQmhibWx0WVhScGIyNDZJSEJ2Y0NBdU0zTWdkbUZ5S0MwdFRHOW5iMHh2WVdSbGNpMTBjbUZ1YzJsMGFXOXVMV1ZoYzJVcE8xeHVJQ0JoYm1sdFlYUnBiMjR0YVhSbGNtRjBhVzl1TFdOdmRXNTBPaUF5TzF4dUlDQmhibWx0WVhScGIyNHRaR2x5WldOMGFXOXVPaUJoYkhSbGNtNWhkR1U3WEc1OVhHNWNiaTVNYjJkdlRHOWhaR1Z5TFhvZ2UxeHVJQ0IwY21GdWMyWnZjbTA2SUhOallXeGxLREVzTVNrN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXVNalZ6SUhaaGNpZ3RMVXh2WjI5TWIyRmtaWEl0ZEhKaGJuTnBkR2x2YmkxbFlYTmxLVHRjYm4xY2JseHVMa3h2WjI5TWIyRmtaWElnTGt4dloyOU1iMkZrWlhJdGJHOW5ieUI3WEc0Z0lIUnlZVzV6Wm05eWJTMXZjbWxuYVc0NklEVXdKU0ExTUNVZ01EdGNiaUFnTHlwMGNtRnVjMlp2Y20wNklITmpZV3hsS0M0NExDQXVPQ2s3S2k5Y2JuMWNibHh1TGt4dloyOU1iMkZrWlhJZ0xreHZaMjlNYjJGa1pYSXRZMmx5WTJ4bExGeHVMa3h2WjI5TWIyRmtaWElnTGt4dloyOU1iMkZrWlhJdFkybHlZMnhsVUhWc2MyVWdlMXh1SUNCMGNtRnVjMlp2Y20wNklITmpZV3hsS0RFc0lERXBPMXh1ZlZ4dVhHNHVURzluYjB4dllXUmxjaTVwY3kxc2IyRmthVzVuSUM1TWIyZHZURzloWkdWeUxYb2dlMXh1SUNCaGJtbHRZWFJwYjI0NklIQjFiSE5sUW1WbmFXNGdNWE1nYVc1bWFXNXBkR1VnYkdsdVpXRnlPMXh1ZlZ4dVhHNHVURzluYjB4dllXUmxjaTVwY3kxc2IyRmthVzVuSUM1TWIyZHZURzloWkdWeUxXTnBjbU5zWlNCN1hHNGdJR0Z1YVcxaGRHbHZiam9nY0hWc2MyVkNaV2RwYmlBeGN5QnBibVpwYm1sMFpTQnNhVzVsWVhJN1hHNGdJR0Z1YVcxaGRHbHZiaTFrWld4aGVUb2dMakZ6TzF4dWZWeHVYRzR1VEc5bmIweHZZV1JsY2k1cGN5MXNiMkZrYVc1bklDNU1iMmR2VEc5aFpHVnlMV05wY21Oc1pWQjFiSE5sSUh0Y2JpQWdZVzVwYldGMGFXOXVPaUJ3ZFd4elpTQXhjeUJwYm1acGJtbDBaU0JzYVc1bFlYSTdYRzRnSUdGdWFXMWhkR2x2Ymkxa1pXeGhlVG9nTGpGek8xeHVmVnh1WEc1QWEyVjVabkpoYldWeklIQjFiSE5sUW1WbmFXNGdlMXh1SUNBd0pTQjdYRzRnSUNBZ0lIUnlZVzV6Wm05eWJUb2djMk5oYkdVb01TazdYRzRnSUgxY2JpQWdNakFsSUh0Y2JpQWdJQ0FnZEhKaGJuTm1iM0p0T2lCelkyRnNaU2d1TmlrN1hHNGdJSDFjYmlBZ05EQWxJSHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSE5qWVd4bEtERXVNaWs3WEc0Z0lIMWNiaUFnTmpBbElIdGNiaUFnSUNBZ2RISmhibk5tYjNKdE9pQnpZMkZzWlNneEtUdGNiaUFnZlZ4dUlDQXhNREFsSUh0Y2JpQWdJQ0FnZEhKaGJuTm1iM0p0T2lCelkyRnNaU2d4S1R0Y2JpQWdmVnh1ZlZ4dVhHNUFhMlY1Wm5KaGJXVnpJSEIxYkhObElIdGNiaUFnTUNVZ2UxeHVJQ0FnSUNCMGNtRnVjMlp2Y20wNklITmpZV3hsS0M0MktUdGNiaUFnSUNBZ2IzQmhZMmwwZVRvZ01EdGNiaUFnZlZ4dUlDQXlNQ1VnZTF4dUlDQWdJQ0IwY21GdWMyWnZjbTA2SUhOallXeGxLQzQyS1R0Y2JpQWdmVnh1SUNBME1DVWdlMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2djMk5oYkdVb01TNHlLVHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXdMalU3WEc0Z0lIMWNiaUFnTmpBbElIdGNiaUFnSUNBZ2RISmhibk5tYjNKdE9pQnpZMkZzWlNneExqWXBPMXh1SUNBZ0lDQnZjR0ZqYVhSNU9pQXdMamM3WEc0Z0lIMWNiaUFnTVRBd0pTQjdYRzRnSUNBZ0lIUnlZVzV6Wm05eWJUb2djMk5oYkdVb01pazdYRzRnSUNBZ0lHOXdZV05wZEhrNklEQXVNRHRjYmlBZ2ZWeHVmVnh1WEc1QWEyVjVabkpoYldWeklIQnZjQ0I3WEc0Z0lIUnZJSHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZ3hOV1JsWnlrZ2MyTmhiR1VvTVM0eExDQXhMakVwTzF4dUlDQjlYRzU5WEc0aUxDSXZLaW9nUUdSbFptbHVaU0JRY205bmNtVnpjMkpoY2pzZ2RYTmxJSE4wY21samRDQXFMMXh1WEc0NmNtOXZkQ0I3WEc0Z0lDMHRVSEp2WjNKbGMzTmlZWEl0Y21oNWRHaHRJQ0FnSUNBZ0lDQWdJQ0E2SURFdU5YSmxiVHRjYmlBZ0xTMVFjbTluY21WemMySmhjaTFvYVdkb2JHbG5hSFFnSUNBZ0lDQWdJRG9nSXpSbE9XWmtaRHRjYmlBZ0xTMVFjbTluY21WemMySmhjaTF6ZFdOalpYTnpJQ0FnSUNBZ0lDQWdJRG9nSXpjd1lUazRZanRjYmlBZ0xTMVFjbTluY21WemMySmhjaTExYm5OMWNtVWdJQ0FnSUNBZ0lDQWdJRG9nSTJVd1l6TTFNRHRjYmlBZ0xTMVFjbTluY21WemMySmhjaTF1WlhWMGNtRnNJQ0FnSUNBZ0lDQWdJRG9nWTI5c2IzSW9JelF4TmprNE9DQjBhVzUwS0RVd0pTa3BPMXh1SUNBdExWQnliMmR5WlhOelltRnlMWGRoY201cGJtY2dJQ0FnSUNBZ0lDQWdPaUFqWlRNNE1qUmxPMXh1SUNBdExWQnliMmR5WlhOelltRnlMV1JoYm1kbGNpQWdJQ0FnSUNBZ0lDQWdPaUFqWlRBMU56VmlPMXh1SUNBdExWQnliMmR5WlhOelltRnlMV2wwWlcwdGVpMXBibVJsZUNBZ0lDQWdPaUF4TURBN1hHNGdJQzB0VUhKdlozSmxjM05pWVhJdFlYQndjbTkyWldRdGVpMXBibVJsZUNBNklESXdNRHRjYm4xY2JseHVMbEJ5YjJkeVpYTnpZbUZ5SUh0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnYUdWcFoyaDBPaUJqWVd4aktIWmhjaWd0TFZCeWIyZHlaWE56WW1GeUxYSm9lWFJvYlNrZ0tpQXVOU2s3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZG1GeUtDMHRVSEp2WjNKbGMzTmlZWEl0Ym1WMWRISmhiQ2s3WEc1OVhHNWNiaTVRY205bmNtVnpjMkpoY2kwdGMyMGdlMXh1SUNCb1pXbG5hSFE2SUdOaGJHTW9kbUZ5S0MwdFVISnZaM0psYzNOaVlYSXRjbWg1ZEdodEtTQXFJQzR5TlNrN1hHNTlYRzVjYmk1UWNtOW5jbVZ6YzJKaGNpMHRiR2NnZTF4dUlDQm9aV2xuYUhRNklIWmhjaWd0TFZCeWIyZHlaWE56WW1GeUxYSm9lWFJvYlNrN1hHNTlYRzVjYmk1UWNtOW5jbVZ6YzJKaGNpMXBkR1Z0SUh0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQjZMV2x1WkdWNE9pQjJZWElvTFMxUWNtOW5jbVZ6YzJKaGNpMXBkR1Z0TFhvdGFXNWtaWGdwTzF4dUlDQnRZWEpuYVc0NklEQTdYRzRnSUhCaFpHUnBibWM2SURBN1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dUlDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lHeHBjM1F0YzNSNWJHVTZJRzV2Ym1VN1hHNTlYRzVjYmk1UWNtOW5jbVZ6YzJKaGNpMWhjSEJ5YjNabFpDQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhaaGNpZ3RMVkJ5YjJkeVpYTnpZbUZ5TFdocFoyaHNhV2RvZENrN1hHNGdJSG90YVc1a1pYZzZJSFpoY2lndExWQnliMmR5WlhOelltRnlMV0Z3Y0hKdmRtVmtMWG90YVc1a1pYZ3BPMXh1ZlZ4dVhHNHVVSEp2WjNKbGMzTmlZWEl0ZEhKaGJuTnNZWFJsWkNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExWQnliMmR5WlhOelltRnlMWE4xWTJObGMzTXBPMXh1ZlZ4dVhHNHVVSEp2WjNKbGMzTmlZWEl0Ym1WbFpITlhiM0pySUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkbUZ5S0MwdFVISnZaM0psYzNOaVlYSXRkVzV6ZFhKbEtUdGNibjFjYmx4dUxsQnliMmR5WlhOelltRnlMWFZ1ZEhKaGJuTnNZWFJsWkNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExWQnliMmR5WlhOelltRnlMVzVsZFhSeVlXd3BPMXh1ZlZ4dUlpd2lPbkp2YjNRZ2UxeHVJQ0F0TFUxdlpHRnNMWEpvZVhSb2JUb2dNUzQxY21WdE8xeHVJQ0F0TFUxdlpHRnNMV052Ykc5eUxXSm5PaUJqYjJ4dmNpZ2paakJtTW1ZMElHRnNjR2hoS0M0NU5Ta3BPMXh1SUNBdExVMXZaR0ZzTFhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TVRWeklHeHBibVZoY2p0Y2JpQWdMUzFOYjJSaGJDMWliM0prWlhJNklERndlQ0J6YjJ4cFpDQmpiMnh2Y2lnak5ERTJPVGc0SUdGc2NHaGhLREV5SlNrcE8xeHVJQ0F0TFUxdlpHRnNMV1JwWVd4dlp5MTBjbUZ1YzJsMGFXOXVPaUJoYkd3Z0xqSTFjeUJqZFdKcFl5MWlaWHBwWlhJb0xqRTNOU3dnTGpnNE5Td2dMak15TUN3Z01TNHhLVHRjYmlBZ0xTMU5iMlJoYkMxa2FXRnNiMmN0WW05eVpHVnlMV0p2ZEhSdmJTMTNhV1IwYURvZ01uQjRPMXh1SUNBdExVMXZaR0ZzTFdScFlXeHZaeTFqYjJ4dmNpMWlaem9nWTI5c2IzSW9JMll3WmpKbU5DQjBhVzUwS0RZd0pTa3BPMXh1SUNBdExVMXZaR0ZzTFdobFlXUmxjaTFqYjJ4dmNpMWlaem9nSTJabVpqdGNiaUFnTFMxTmIyUmhiQzEwYVhSc1pTMW1iMjUwTFhOcGVtVTZJR05oYkdNb01qSXZNVFlnS2lBeGNtVnRLVHRjYmlBZ0xTMU5iMlJoYkMxamJHOXpaUzEwY21GdWMybDBhVzl1T2lCaGJHd2dMakkxY3lCbFlYTmxMVzkxZER0Y2JpQWdMUzFOYjJSaGJDMWpiRzl6WlMxamIyeHZjaTFpWnkxb2IzWmxjam9nWTI5c2IzSW9JelF4TmprNE9DQmhiSEJvWVNnMUpTa3BPMXh1SUNBdExVMXZaR0ZzTFdOc2IzTmxMV052Ykc5eUxXSm5MV0ZqZEdsMlpUb2dZMjlzYjNJb0l6UXhOams0T0NCaGJIQm9ZU2d4TUNVcEtUdGNiaUFnTFMxTmIyUmhiQzE2TFdsdVpHVjRPaUF4TURBd08xeHVJQ0F0TFUxdlpHRnNMV2hsWVdSbGNpMTZMV2x1WkdWNE9pQXhNREE3WEc1OVhHNWNiaTVOYjJSaGJDQjdYRzRnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjYmlBZ2VpMXBibVJsZURvZ2RtRnlLQzB0VFc5a1lXd3RlaTFwYm1SbGVDazdYRzRnSUhSdmNEb2dNRHRjYmlBZ2NtbG5hSFE2SURBN1hHNGdJR0p2ZEhSdmJUb2dNRHRjYmlBZ2JHVm1kRG9nTUR0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJSFpwYzJsaWFXeHBkSGs2SUdocFpHUmxianRjYmlBZ2IzWmxjbVpzYjNjNklHRjFkRzg3WEc0Z0lHOTJaWEptYkc5M0xYazZJSE5qY205c2JEdGNiaUFnZDJsa2RHZzZJREV3TUNVN1hHNGdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdiV0Z5WjJsdU9pQXdJR0YxZEc4N1hHNGdJSEJoWkdScGJtYzZJQ0JqWVd4aktIWmhjaWd0TFUxdlpHRnNMWEpvZVhSb2JTa2dLaUF6S1NCMllYSW9MUzFOYjJSaGJDMXlhSGwwYUcwcElIWmhjaWd0TFUxdlpHRnNMWEpvZVhSb2JTazdYRzRnSUhSeVlXNXphWFJwYjI0NklIWmhjaWd0TFUxdlpHRnNMWFJ5WVc1emFYUnBiMjRwTzF4dUlDQnZjR0ZqYVhSNU9pQXdPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzFOYjJSaGJDMWpiMnh2Y2kxaVp5azdYRzVjYmlBZ1ltRmphMlpoWTJVdGRtbHphV0pwYkdsMGVUb2dhR2xrWkdWdU8xeHVJQ0J3WlhKemNHVmpkR2wyWlRvZ1kyRnNZeWgyWVhJb0xTMU5iMlJoYkMxeWFIbDBhRzBwSUNvZ05UQXBPMXh1SUNBdGQyVmlhMmwwTFc5MlpYSm1iRzkzTFhOamNtOXNiR2x1WnpvZ2RHOTFZMmc3WEc1OVhHNWNiaTVOYjJSaGJDNXBjeTFoWTNScGRtVWdlMXh1SUNCMmFYTnBZbWxzYVhSNU9pQjJhWE5wWW14bE8xeHVJQ0J2Y0dGamFYUjVPaUF4TzF4dWZWeHVYRzR1VFc5a1lXd3RaR2xoYkc5bklIdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUhkcFpIUm9PaUE1TUNVN1hHNGdJSFJ2Y0RvZ05UQWxPMXh1SUNCc1pXWjBPaUExTUNVN1hHNGdJRzFoZUMxb1pXbG5hSFE2SURFd01DVTdYRzRnSUcxcGJpMTNhV1IwYURvZ016QXdjSGc3WEc0Z0lHMWhlQzEzYVdSMGFEb2dZMkZzWXloMllYSW9MUzFOYjJSaGJDMXlhSGwwYUcwcElDb2dNekFwTzF4dUlDQjBjbUZ1YzJsMGFXOXVPaUIyWVhJb0xTMU5iMlJoYkMxa2FXRnNiMmN0ZEhKaGJuTnBkR2x2YmlrN1hHNGdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0NndE5UQWxLU0IwY21GdWMyeGhkR1ZaS0RFd01DVXBPMXh1SUNCMGNtRnVjMlp2Y20wdGIzSnBaMmx1T2lBd08xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMU5iMlJoYkMxa2FXRnNiMmN0WTI5c2IzSXRZbWNwTzF4dWZWeHVYRzR1VFc5a1lXd3VhWE10WVdOMGFYWmxJQzVOYjJSaGJDMWthV0ZzYjJjZ2UxeHVJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb0xUVXdKU2tnZEhKaGJuTnNZWFJsV1NndE5UQWxLVHRjYm4xY2JseHVMazF2WkdGc0xXaGxZV1JsY2lCN1hHNGdJSEJ2YzJsMGFXOXVPaUJtYVhobFpEdGNiaUFnZEc5d09pQmpZV3hqS0haaGNpZ3RMVTF2WkdGc0xYSm9lWFJvYlNrZ0tpQXRNaWs3WEc0Z0lHeGxablE2SURBN1hHNGdJSEpwWjJoME9pQXdPMXh1SUNCaWIzSmtaWEk2SUhaaGNpZ3RMVTF2WkdGc0xXSnZjbVJsY2lrN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExVMXZaR0ZzTFdobFlXUmxjaTFqYjJ4dmNpMWlaeWs3WEc0Z0lIb3RhVzVrWlhnNklIWmhjaWd0TFUxdlpHRnNMV2hsWVdSbGNpMTZMV2x1WkdWNEtUdGNibjFjYmx4dUxrMXZaR0ZzTFhScGRHeGxJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQjJZWElvTFMxTmIyUmhiQzEwYVhSc1pTMW1iMjUwTFhOcGVtVXBPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dNekF3TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nZG1GeUtDMHRUVzlrWVd3dGNtaDVkR2h0S1R0Y2JpQWdiV0Z5WjJsdU9pQXdPMXh1SUNCd1lXUmthVzVuT2lCallXeGpLSFpoY2lndExVMXZaR0ZzTFhKb2VYUm9iU2tnS2lBdU5Ta2dZMkZzWXloMllYSW9MUzFOYjJSaGJDMXlhSGwwYUcwcElDb2dNUzQxS1NCallXeGpLSFpoY2lndExVMXZaR0ZzTFhKb2VYUm9iU2tnS2lBdU5Ta2dkbUZ5S0MwdFRXOWtZV3d0Y21oNWRHaHRLVHRjYm4xY2JseHVMazF2WkdGc0xXTnNiM05sSUh0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCMGIzQTZJREE3WEc0Z0lISnBaMmgwT2lBd08xeHVJQ0IzYVdSMGFEb2dZMkZzWXloMllYSW9MUzFOYjJSaGJDMXlhSGwwYUcwcElDb2dNaWs3WEc0Z0lHaGxhV2RvZERvZ1kyRnNZeWgyWVhJb0xTMU5iMlJoYkMxeWFIbDBhRzBwSUNvZ01pazdYRzRnSUhSeVlXNXphWFJwYjI0NklIWmhjaWd0TFUxdlpHRnNMV05zYjNObExYUnlZVzV6YVhScGIyNHBPMXh1SUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJR0p2Y21SbGNpMXNaV1owT2lCMllYSW9MUzFOYjJSaGJDMWliM0prWlhJcE8xeHVmVnh1WEc0dVRXOWtZV3d0WTJ4dmMyVTZhRzkyWlhJZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMU5iMlJoYkMxamJHOXpaUzFqYjJ4dmNpMWlaeTFvYjNabGNpazdYRzU5WEc1Y2JpNU5iMlJoYkMxamJHOXpaVHBoWTNScGRtVWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzFOYjJSaGJDMWpiRzl6WlMxamIyeHZjaTFpWnkxaFkzUnBkbVVwTzF4dWZWeHVYRzR1VFc5a1lXd3RZMjl1ZEdWdWRDQjdYRzRnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdiV0Y0TFdobGFXZG9kRG9nTVRBd0pUdGNiaUFnYjNabGNtWnNiM2M2SUdGMWRHODdYRzRnSUdKaFkydG5jbTkxYm1RdFkyeHBjRG9nY0dGa1pHbHVaeTFpYjNnN1hHNGdJR0p2Y21SbGNqb2dkbUZ5S0MwdFRXOWtZV3d0WW05eVpHVnlLVHRjYmlBZ1ltOXlaR1Z5TFhSdmNDMWpiMnh2Y2pvZ2RISmhibk53WVhKbGJuUTdYRzRnSUdKdmNtUmxjaTFpYjNSMGIyMHRkMmxrZEdnNklIWmhjaWd0TFUxdlpHRnNMV1JwWVd4dlp5MWliM0prWlhJdFltOTBkRzl0TFhkcFpIUm9LVHRjYm4xY2JseHVMeW9nWW05a2VTQXFMMXh1TGsxdlpHRnNMV052Ym5SaGFXNWxjaTVwY3kxdGIyUmhiQ0I3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJR2hsYVdkb2REb2dNVEF3SlR0Y2JuMWNiaUlzSWk4cUtpQkFaR1ZtYVc1bElGUnZaMmRzWlRzZ2RYTmxJSE4wY21samRDQXFMMXh1WEc0NmNtOXZkQ0I3WEc0Z0lDMHRWRzluWjJ4bExYSm9lWFJvYlRvZ01TNDFjbVZ0TzF4dUlDQXRMVlJ2WjJkc1pTMWpiMnh2Y2pvZ1kzVnljbVZ1ZEVOdmJHOXlPMXh1SUNBdExWUnZaMmRzWlMxamIyeHZjaTFoWTNScGRtVTZJQ05tWm1ZN1hHNGdJQzB0Vkc5bloyeGxMV052Ykc5eUxXRmpkR2wyWlMxcGJuWmxjblE2SUNNd01EQTdYRzRnSUMwdFZHOW5aMnhsTFdOdmJHOXlMV0puTFdGamRHbDJaVG9nZG1GeUtDMHRWRzluWjJ4bExXTnZiRzl5S1R0Y2JpQWdMUzFVYjJkbmJHVXRkSEpoYm5OcGRHbHZiam9nWVd4c0lDNHlOWE1nWTNWaWFXTXRZbVY2YVdWeUtDNHdOelVzSUM0NE1qQXNJQzR4TmpVc0lERXVNREF3S1R0Y2JuMWNibHh1TGxSdloyZHNaU3hjYmk1VWIyZG5iR1V0YkdGaVpXd2dlMXh1SUNCamRYSnpiM0k2SUhCdmFXNTBaWEk3WEc1OVhHNWNiaTVVYjJkbmJHVWdlMXh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdiV2x1TFhkcFpIUm9PaUJqWVd4aktIWmhjaWd0TFZSdloyZHNaUzF5YUhsMGFHMHBJQ29nTVM0ek56VXBPMXh1SUNCdFlYSm5hVzQ2SURBZ1kyRnNZeWgyWVhJb0xTMVViMmRuYkdVdGNtaDVkR2h0S1NBcUlDNHdOakkxS1R0Y2JpQWdkWE5sY2kxelpXeGxZM1E2SUc1dmJtVTdYRzRnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUIwYjNBN1hHNTlYRzVjYmk1VWIyZG5iR1V0WTJobFkydGliM2dnZTF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUdOMWNuTnZjam9nYm05dVpUdGNiaUFnZEc5d09pQXdPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNCdmNHRmphWFI1T2lBd08xeHVmVnh1WEc0dVZHOW5aMnhsTFd4aFltVnNJSHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFl3TUR0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ2NHRmtaR2x1WnpvZ01DQmpZV3hqS0haaGNpZ3RMVlJ2WjJkc1pTMXlhSGwwYUcwcElDb2dMak0zTlNrN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUhaaGNpZ3RMVlJ2WjJkc1pTMTBjbUZ1YzJsMGFXOXVLVHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0JqYjJ4dmNqb2dkbUZ5S0MwdFZHOW5aMnhsTFdOdmJHOXlLVHRjYm4xY2JseHVMbFJ2WjJkc1pTMW1ZV3RsUTJobFkydGliM2dnZTF4dUlDQnZjR0ZqYVhSNU9pQXhPMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSFJ2Y0RvZ01EdGNiaUFnYkdWbWREb2dNRHRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzRnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnWTI5dWRHVnVkRG9nSnljN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dWZWeHVYRzR1Vkc5bloyeGxPbWh2ZG1WeUlENGdMbFJ2WjJkc1pTMW1ZV3RsUTJobFkydGliM2dzWEc0dVZHOW5aMnhsTFdOb1pXTnJZbTk0T21adlkzVnpJSDRnTGxSdloyZHNaUzFtWVd0bFEyaGxZMnRpYjNnZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMVViMmRuYkdVdFkyOXNiM0l0WW1jdFlXTjBhWFpsS1R0Y2JpQWdiM0JoWTJsMGVUb2dMakk3WEc1OVhHNWNiaTVVYjJkbmJHVXRZMmhsWTJ0aWIzZzZZMmhsWTJ0bFpDQitJQzVVYjJkbmJHVXRiR0ZpWld3c1hHNHVWRzluWjJ4bExtbHpMV0ZqZEdsMlpTQitJQzVVYjJkbmJHVXRiR0ZpWld3Z2UxeHVJQ0JqYjJ4dmNqb2dkbUZ5S0MwdFZHOW5aMnhsTFdOdmJHOXlMV0ZqZEdsMlpTazdYRzU5WEc1Y2JpNVViMmRuYkdVdFkyaGxZMnRpYjNnNlkyaGxZMnRsWkNCK0lDNVViMmRuYkdVdFptRnJaVU5vWldOclltOTRMRnh1TGxSdloyZHNaUzVwY3kxaFkzUnBkbVVnUGlBdVZHOW5aMnhsTFdaaGEyVkRhR1ZqYTJKdmVDQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhaaGNpZ3RMVlJ2WjJkc1pTMWpiMnh2Y2kxaVp5MWhZM1JwZG1VcE8xeHVmVnh1WEc0dVZHOW5aMnhsT21odmRtVnlJRDRnTGxSdloyZHNaUzFqYUdWamEySnZlRHBqYUdWamEyVmtJSDRnTGxSdloyZHNaUzFtWVd0bFEyaGxZMnRpYjNnc1hHNHVWRzluWjJ4bExXTm9aV05yWW05NE9tTm9aV05yWldRNlptOWpkWE1nZmlBdVZHOW5aMnhsTFdaaGEyVkRhR1ZqYTJKdmVDeGNiaTVVYjJkbmJHVXVhWE10WVdOMGFYWmxPbWh2ZG1WeUlENGdMbFJ2WjJkc1pTMW1ZV3RsUTJobFkydGliM2dnZTF4dUlDQnZjR0ZqYVhSNU9pQXVPRHRjYm4xY2JpSXNJaThxS2lCQVpHVm1hVzVsSUZOM2FYUmphRHNnZFhObElITjBjbWxqZENBcUwxeHVYRzR2S2x4dVhHNDhjM0JoYmlCamJHRnpjejFjSWxOM2FYUmphRndpUGx4dUlDQThhVzV3ZFhRZ2RIbHdaVDFjSW1Ob1pXTnJZbTk0WENJZ1kyeGhjM005WENKVGQybDBZMmd0WTJobFkydGliM2hjSWlBdlBseHVJQ0E4YkdGaVpXd2dZMnhoYzNNOVhDSlRkMmwwWTJndGJHRmlaV3hjSWo1Y2JpQWdJQ0E4YzNCaGJpQmpiR0Z6Y3oxY0lsTjNhWFJqYUMxc1lXSmxiRlJsZUhSY0lqNVRkMmwwWTJnOEwzTndZVzQrWEc0Z0lEd3ZiR0ZpWld3K1hHNDhMM053WVc0K1hHNWNiaW92WEc1Y2JqcHliMjkwSUh0Y2JpQWdMUzFUZDJsMFkyZ3RZMjlzYjNJNklDTXlNRGN4T0VFN1hHNGdJQzB0VTNkcGRHTm9MWEpvZVhSb2JUb2dNUzQxY21WdE8xeHVmVnh1WEc0dVUzZHBkR05vSUh0Y2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lCallXeGpLSFpoY2lndExWTjNhWFJqYUMxeWFIbDBhRzBwSUNvZ01TNDFLVHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVmVnh1WEc0dVUzZHBkR05vTFdOb1pXTnJZbTk0SUh0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCdFlYSm5hVzR0YkdWbWREb2dMVGs1T1Rsd2VEdGNiaUFnZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dWZWeHVYRzR1VTNkcGRHTm9MV3hoWW1Wc0lIdGNiaUFnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh1ZlZ4dVhHNHVVM2RwZEdOb0xXeGhZbVZzT21KbFptOXlaU3hjYmk1VGQybDBZMmd0YkdGaVpXdzZZV1owWlhJZ2UxeHVJQ0JqYjI1MFpXNTBPaUFuSnp0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQjBiM0E2SURVd0pUdGNiaUFnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMDFNQ1VwTzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lCallXeGpLSFpoY2lndExWTjNhWFJqYUMxeWFIbDBhRzBwSUNvZ0xqYzFLVHRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0eWN5QmxZWE5sTFc5MWREdGNibjFjYmx4dUxsTjNhWFJqYUMxc1lXSmxiRHBpWldadmNtVWdlMXh1SUNCM2FXUjBhRG9nWTJGc1l5aDJZWElvTFMxVGQybDBZMmd0Y21oNWRHaHRLU0FxSURFdU1qVXBPMXh1SUNCb1pXbG5hSFE2SUdOaGJHTW9kbUZ5S0MwdFUzZHBkR05vTFhKb2VYUm9iU2tnS2lBdU56VXBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCamIyeHZjaWgyWVhJb0xTMVRkMmwwWTJndFkyOXNiM0lwSUhScGJuUW9PREFwS1R0Y2JuMWNibHh1TGxOM2FYUmphQzFzWVdKbGJEcGhablJsY2lCN1hHNGdJSGRwWkhSb09pQmpZV3hqS0haaGNpZ3RMVk4zYVhSamFDMXlhSGwwYUcwcElDb2dMamMxS1R0Y2JpQWdhR1ZwWjJoME9pQmpZV3hqS0haaGNpZ3RMVk4zYVhSamFDMXlhSGwwYUcwcElDb2dMamMxS1R0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dZMjlzYjNJb2RtRnlLQzB0VTNkcGRHTm9MV052Ykc5eUtTQjBhVzUwS0RRd0tTazdYRzRnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZrb0xUVXdKU2tnYzJOaGJHVW9MamdzSUM0NEtUdGNibjFjYmx4dUxsTjNhWFJqYUMxc1lXSmxiRlJsZUhRZ2UxeHVJQ0JqYjJ4dmNqb2dZMjlzYjNJb2RtRnlLQzB0VTNkcGRHTm9MV052Ykc5eUtTQjBhVzUwS0RRd0tTazdYRzRnSUdadmJuUXRjMmw2WlRvZ1kyRnNZeWd4TkM4eE5pbHlaVzA3WEc1OVhHNWNiaTVUZDJsMFkyZ3RZMmhsWTJ0aWIzZzZZMmhsWTJ0bFpDQitJQzVUZDJsMFkyZ3RiR0ZpWld3NlltVm1iM0psSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkbUZ5S0MwdFUzZHBkR05vTFdOdmJHOXlLVHRjYm4xY2JseHVMbE4zYVhSamFDMWphR1ZqYTJKdmVEcGphR1ZqYTJWa0lINGdMbE4zYVhSamFDMXNZV0psYkRwaFpuUmxjaUI3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3WEc0Z0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXU2d0TlRBbEtTQjBjbUZ1YzJ4aGRHVllLRFkySlNrZ2MyTmhiR1VvTGpnc0lDNDRLVHRjYm4xY2JseHVMbE4zYVhSamFDMWphR1ZqYTJKdmVEcGphR1ZqYTJWa0lINGdMbE4zYVhSamFDMXNZV0psYkNBdVUzZHBkR05vTFd4aFltVnNWR1Y0ZENCN1hHNGdJR052Ykc5eU9pQjJZWElvTFMxVGQybDBZMmd0WTI5c2IzSXBPMXh1ZlZ4dUlpd2lMeW9xSUVCa1pXWnBibVVnVkhKaGJuTlZibWwwT3lCMWMyVWdjM1J5YVdOMElDb3ZYRzVjYmpweWIyOTBJSHRjYmlBZ0xTMVVjbUZ1YzFWdWFYUXRZbTl5WkdWeUxXTnZiRzl5SUNBZ0lDQWdJQ0FnSUNBNklHTnZiRzl5S0NNME1UWTVPRGdnWVd4d2FHRW9PQ1VwS1R0Y2JpQWdMUzFVY21GdWMxVnVhWFF0WTI5c2IzSXRaR0Z1WjJWeUlDQWdJQ0FnSUNBZ0lDQTZJQ05sTURVM05XSTdYRzRnSUMwdFZISmhibk5WYm1sMExXTnZiRzl5TFdocFoyaHNhV2RvZENBZ0lDQWdJQ0FnT2lBak5HVTVabVJrTzF4dUlDQXRMVlJ5WVc1elZXNXBkQzFqYjJ4dmNpMXVaWFYwY21Gc0lDQWdJQ0FnSUNBZ0lEb2dZMjlzYjNJb0l6UXhOams0T0NCMGFXNTBLRFkxSlNrcE8xeHVJQ0F0TFZSeVlXNXpWVzVwZEMxamIyeHZjaTF6ZFdOalpYTnpJQ0FnSUNBZ0lDQWdJRG9nSXpjd1lUazRZanRjYmlBZ0xTMVVjbUZ1YzFWdWFYUXRZMjlzYjNJdGRXNXpkWEpsSUNBZ0lDQWdJQ0FnSUNBNklDTmxNR016TlRBN1hHNGdJQzB0VkhKaGJuTlZibWwwTFdOdmJHOXlMWGRoY201cGJtY2dJQ0FnSUNBZ0lDQWdPaUFqWlRNNE1qUmxPMXh1SUNBdExWUnlZVzV6Vlc1cGRDMWpiMnh2Y2kxelpXTnZibVJoY25rZ0lDQWdJQ0FnSURvZ0l6SXdOekU0UVR0Y2JpQWdMUzFVY21GdWMxVnVhWFF0YUdWaFpHVnlMV1p2YjNSbGNpMWpiMnh2Y2kxaVp5QTZJQ05tWm1ZN1hHNGdJQzB0VkhKaGJuTlZibWwwTFdobFlXUnBibWN0Wm05dWRDMXphWHBsSUNBZ0lDQWdPaUF4Y21WdE8xeHVJQ0F0TFZSeVlXNXpWVzVwZEMxdFpYUmhSR0YwWVVKMWRIUnZiaTF6YVhwbElDQWdJRG9nWTJGc1l5Z3hNaTh4TmlBcUlERnlaVzBwTzF4dUlDQXRMVlJ5WVc1elZXNXBkQzF5YUhsMGFHMGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEb2dNUzQxY21WdE8xeHVJQ0F0TFZSeVlXNXpWVzVwZEMxMFpYaDBMV1p2Ym5RdFptRnRhV3g1SUNBZ0lDQWdJRG9nSjFOdmRYSmpaU0JUWVc1eklGQnlieWNzSUNkSVpXeDJaWFJwWTJFZ1RtVjFaU2NzSUVobGJIWmxkR2xqWVU1bGRXVXNJRWhsYkhabGRHbGpZU3dnUVhKcFlXd3NJSE5oYm5NdGMyVnlhV1k3WEc0Z0lDMHRWSEpoYm5OVmJtbDBMWFJsZUhRdFptOXVkQzF6YVhwbElDQWdJQ0FnSUNBZ09pQXhjbVZ0TzF4dUlDQXRMVlJ5WVc1elZXNXBkQzEwWlhoMExXeHBibVV0YUdWcFoyaDBJQ0FnSUNBZ0lEb2dNUzQxTzF4dUlDQXRMVlJ5WVc1elZXNXBkQzEwWlhoMExXTnZiRzl5SUNBZ0lDQWdJQ0FnSUNBZ0lEb2dJelEwTkdNMU5EdGNiaUFnTFMxVWNtRnVjMVZ1YVhRdGRISmhibk5wZEdsdmJpQWdJQ0FnSUNBZ0lDQWdJQ0E2SUc5d1lXTnBkSGtnTGpJMWN5QjJZWElvTFMxVWNtRnVjMVZ1YVhRdGRISmhibk5wZEdsdmJpMWxZWE5sS1R0Y2JpQWdMUzFVY21GdWMxVnVhWFF0ZEhKaGJuTnBkR2x2YmkxbFlYTmxJQ0FnSUNBZ0lDQTZJR04xWW1sakxXSmxlbWxsY2lndU1EYzFMQ0F1T0RJd0xDQXVNVFkxTENBeExqQXdNQ2s3WEc0Z0lDMHRWSEpoYm5OVmJtbDBMV1p2WTNWekxXTnZiRzl5TFdKbklDQWdJQ0FnSUNBZ09pQWpabVptTzF4dUlDQXRMVlJ5WVc1elZXNXBkQzFvYjNabGNpMWpiMnh2Y2kxaVp5QWdJQ0FnSUNBZ0lEb2dZMjlzYjNJb0kyWm1aaUJ6YUdGa1pTZ3pKU2twTzF4dUlDQXRMVlJ5WVc1elZXNXBkQzF6ZEdGMGRYTXRlaTFwYm1SbGVDQWdJQ0FnSUNBZ0lEb2dNakF3TzF4dUlDQXRMVlJ5WVc1elZXNXBkQzF6ZEdGMGRYTXRZbVZtYjNKbExYb3RhVzVrWlhnZ0lEb2dNekF3TzF4dUlDQXRMVlJ5WVc1elZXNXBkQzF6ZEdGMGRYTXRZV1owWlhJdGVpMXBibVJsZUNBZ0lEb2dOREF3TzF4dWZWeHVYRzR1VkhKaGJuTlZibWwwSUh0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCdFlYSm5hVzQ2SURBN1hHNGdJSEJoWkdScGJtYzZJREE3WEc0Z0lHTjFjbk52Y2pvZ2RHVjRkRHRjYmlBZ2RYTmxjaTF6Wld4bFkzUTZJRzV2Ym1VN1hHNGdJR0p2Y21SbGNpMWliM1IwYjIwNklERndlQ0J6YjJ4cFpDQjJZWElvTFMxVWNtRnVjMVZ1YVhRdFltOXlaR1Z5TFdOdmJHOXlLVHRjYm4xY2JseHVMbFJ5WVc1elZXNXBkRHBtYjJOMWN5QjdYRzRnSUc5MWRHeHBibVU2SURBN1hHNGdJR0p2ZUMxemFHRmtiM2M2SUc1dmJtVTdYRzU5WEc1Y2JpNVVjbUZ1YzFWdWFYUXVhWE10Wm05amRYTmxaQ0I3WEc0Z0lHOXdZV05wZEhrNklERWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0VkhKaGJuTlZibWwwTFdadlkzVnpMV052Ykc5eUxXSm5LVHRjYm4xY2JseHVMbFJ5WVc1elZXNXBkRHBpWldadmNtVXNYRzR1VkhKaGJuTlZibWwwT21GbWRHVnlJSHRjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0JzWldaME9pQXdPMXh1SUNCMmFYTnBZbWxzYVhSNU9pQm9hV1JrWlc0N1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dUlDQm9aV2xuYUhRNklIWmhjaWd0TFZSeVlXNXpWVzVwZEMxeWFIbDBhRzBwTzF4dUlDQmpiMjUwWlc1ME9pQW5KenRjYmlBZ0x5cDBjbUZ1YzJsMGFXOXVPaUIyWVhJb0xTMVVjbUZ1YzFWdWFYUXRkSEpoYm5OcGRHbHZiaWs3S2k5Y2JpQWdkSEpoYm5ObWIzSnRPaUJ6WTJGc1pWa29NQ2s3WEc0Z0lHOXdZV05wZEhrNklEQTdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhaaGNpZ3RMVlJ5WVc1elZXNXBkQzFtYjJOMWN5MWpiMnh2Y2kxaVp5azdYRzRnSUdKaFkydG5jbTkxYm1RdFkyeHBjRG9nY0dGa1pHbHVaeTFpYjNnN1hHNTlYRzVjYmk1VWNtRnVjMVZ1YVhRNlltVm1iM0psSUh0Y2JpQWdZbTk0TFhOb1lXUnZkem9nTUNCallXeGpLSFpoY2lndExWUnlZVzV6Vlc1cGRDMXlhSGwwYUcwcElDb2dMUzR5TlNrZ1kyRnNZeWgyWVhJb0xTMVVjbUZ1YzFWdWFYUXRjbWg1ZEdodEtTQXFJQzQxS1NCeVoySmhLREFzTUN3d0xDNHdOQ2s3WEc0Z0lIUnlZVzV6Wm05eWJTMXZjbWxuYVc0NklHSnZkSFJ2YlR0Y2JpQWdkRzl3T2lCallXeGpLSFpoY2lndExWUnlZVzV6Vlc1cGRDMXlhSGwwYUcwcElDb2dMUzQzTlNrN1hHNTlYRzVjYmk1VWNtRnVjMVZ1YVhRNllXWjBaWElnZTF4dUlDQmliM2d0YzJoaFpHOTNPaUF3SUdOaGJHTW9kbUZ5S0MwdFZISmhibk5WYm1sMExYSm9lWFJvYlNrZ0tpQXVNalVwSUdOaGJHTW9kbUZ5S0MwdFZISmhibk5WYm1sMExYSm9lWFJvYlNrZ0tpQXVOU2tnY21kaVlTZ3dMREFzTUN3dU1EUXBPMXh1SUNCMGNtRnVjMlp2Y20wdGIzSnBaMmx1T2lCMGIzQTdYRzRnSUdKdmRIUnZiVG9nWTJGc1l5aDJZWElvTFMxVWNtRnVjMVZ1YVhRdGNtaDVkR2h0S1NBcUlDMHVOelVwTzF4dWZWeHVYRzR1VkhKaGJuTlZibWwwTG1sekxXWnZZM1Z6WldRNlltVm1iM0psTEZ4dUxsUnlZVzV6Vlc1cGRDNXBjeTFtYjJOMWMyVmtPbUZtZEdWeUlIdGNiaUFnZG1semFXSnBiR2wwZVRvZ2RtbHphV0pzWlR0Y2JpQWdkSEpoYm5ObWIzSnRPaUJ6WTJGc1pWa29NU2s3WEc0Z0lHOXdZV05wZEhrNklERTdYRzU5WEc1Y2JpNVVjbUZ1YzFWdWFYUXVhWE10Wm1seWMzUWdlMXh1SUNCaWIzSmtaWEl0ZEc5d09pQXhjSGdnYzI5c2FXUWdkbUZ5S0MwdFZISmhibk5WYm1sMExXSnZjbVJsY2kxamIyeHZjaWs3WEc1OVhHNWNiaThxSUZCaGFYSWdkMmwwYUNBdVJXUnBkRzl5TFdOdmJuUmxiblFnS2k5Y2JpNVVjbUZ1YzFWdWFYUXRZMjl1ZEdGcGJtVnlMbWx6TFhWdWFYUXRjMlZzWldOMFpXUWdMbFJ5WVc1elZXNXBkQ0I3WEc0Z0lHOXdZV05wZEhrNklDNDRPMXh1ZlZ4dVhHNWNiaThxS2x4dUlDb2dVR0Z1Wld4elhHNGdLaTljYmx4dUxsUnlZVzV6Vlc1cGRDMXdZVzVsYkNCN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ2NHRmtaR2x1WnkxMGIzQTZJR05oYkdNb2RtRnlLQzB0VkhKaGJuTlZibWwwTFhKb2VYUm9iU2tnS2lBdU56VXBPMXh1SUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nWTJGc1l5aDJZWElvTFMxVWNtRnVjMVZ1YVhRdGNtaDVkR2h0S1NBcUlDNDNOU2s3WEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nZG1GeUtDMHRWSEpoYm5OVmJtbDBMWEpvZVhSb2JTazdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc0Z0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCMGIzQTdYRzU5WEc1Y2JpNVVjbUZ1YzFWdWFYUXRhWFJsYlNCN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYm4xY2JseHVMbFJ5WVc1elZXNXBkQzF6YjNWeVkyVWdlMXh1SUNCamRYSnpiM0k2SUhCdmFXNTBaWEk3WEc0Z0lIVnpaWEl0YzJWc1pXTjBPaUIwWlhoME8xeHVmVnh1WEc0dVZISmhibk5WYm1sMExtbHpMV1p2WTNWelpXUWdMbFJ5WVc1elZXNXBkQzF6YjNWeVkyVWdlMXh1SUNCamRYSnpiM0k2SUhSbGVIUTdYRzU5WEc1Y2JpNVVjbUZ1YzFWdWFYUXRkSEpoYm5Oc1lYUnBiMjRnZTF4dUlDQmpkWEp6YjNJNklIUmxlSFE3WEc0Z0lIVnpaWEl0YzJWc1pXTjBPaUIwWlhoME8xeHVmVnh1WEc0dktpcGNiaUFxSUZSeVlXNXpiR0YwYVc5dUlHRnVaQ0J6YjNWeVkyVWdTR1ZoWkdWeUlHRnVaQ0JHYjI5MFpYSmNiaUFxTDF4dVhHNHVWSEpoYm5OVmJtbDBMWEJoYm1Wc1NHVmhaR1Z5TEZ4dUxsUnlZVzV6Vlc1cGRDMXdZVzVsYkVadmIzUmxjaXhjYmk1VWNtRnVjMVZ1YVhRdGFYUmxiVWhsWVdSbGNpQjdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdlaTFwYm1SbGVEb2dkbUZ5S0MwdFZISmhibk5WYm1sMExXaGxZV1JsY2kxNkxXbHVaR1Y0S1R0Y2JpQWdjbWxuYUhRNklEQTdYRzRnSUd4bFpuUTZJREE3WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNCd1lXUmthVzVuTFhKcFoyaDBPaUJqWVd4aktIWmhjaWd0TFZSeVlXNXpWVzVwZEMxeWFIbDBhRzBwSUNvZ0xqYzFLVHRjYmlBZ2NHRmtaR2x1Wnkxc1pXWjBPaUJqWVd4aktIWmhjaWd0TFZSeVlXNXpWVzVwZEMxeWFIbDBhRzBwSUNvZ0xqYzFLVHRjYmlBZ1kzVnljMjl5T2lCa1pXWmhkV3gwTzF4dWZWeHVYRzR1VkhKaGJuTlZibWwwTFhCaGJtVnNTR1ZoWkdWeUxGeHVMbFJ5WVc1elZXNXBkQzF3WVc1bGJFWnZiM1JsY2lCN1hHNGdJSFpwYzJsaWFXeHBkSGs2SUdocFpHUmxianRjYmlBZ0x5cDBjbUZ1YzJsMGFXOXVPaUIyWVhJb0xTMVVjbUZ1YzFWdWFYUXRkSEpoYm5OcGRHbHZiaWs3S2k5Y2JpQWdiM0JoWTJsMGVUb2dNRHRjYm4xY2JseHVMbFJ5WVc1elZXNXBkQzVwY3kxbWIyTjFjMlZrSUM1VWNtRnVjMVZ1YVhRdGNHRnVaV3hJWldGa1pYSXNYRzR1VkhKaGJuTlZibWwwTG1sekxXWnZZM1Z6WldRZ0xsUnlZVzV6Vlc1cGRDMXdZVzVsYkVadmIzUmxjaUI3WEc0Z0lIWnBjMmxpYVd4cGRIazZJSFpwYzJsaWJHVTdYRzRnSUc5d1lXTnBkSGs2SURFN1hHNTlYRzVjYmk1VWNtRnVjMVZ1YVhRdGNHRnVaV3hJWldGa1pYSWdlMXh1SUNCMGIzQTZJR05oYkdNb2RtRnlLQzB0VkhKaGJuTlZibWwwTFhKb2VYUm9iU2tnS2lBdExqYzFLVHRjYm4xY2JseHVMbFJ5WVc1elZXNXBkQzFwZEdWdFNHVmhaR1Z5SUh0Y2JpQWdkRzl3T2lBd08xeHVmVnh1WEc0dVZISmhibk5WYm1sMExYQmhibVZzUm05dmRHVnlJSHRjYmlBZ1ltOTBkRzl0T2lCallXeGpLSFpoY2lndExWUnlZVzV6Vlc1cGRDMXlhSGwwYUcwcElDb2dMUzQzTlNrN1hHNTlYRzVjYmk1VWNtRnVjMVZ1YVhRdGFHVmhaR2x1WnlCN1hHNGdJR1p2Ym5RdGMybDZaVG9nZG1GeUtDMHRWSEpoYm5OVmJtbDBMV2hsWVdScGJtY3RabTl1ZEMxemFYcGxLVHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SUdOaGJHTW9kbUZ5S0MwdFZISmhibk5WYm1sMExYSm9lWFJvYlNrZ0tpQXhMalVwTzF4dUlDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEc0Z0lHWnNiMkYwT2lCc1pXWjBPMXh1SUNCdFlYSm5hVzQ2SURBN1hHNGdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQjBiM0E3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNTlYRzVjYmk1VWNtRnVjMVZ1YVhRdGRHVjRkQ0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUIyWVhJb0xTMVVjbUZ1YzFWdWFYUXRkR1Y0ZEMxbWIyNTBMV1poYldsc2VTazdYRzRnSUdadmJuUXRjMmw2WlRvZ2RtRnlLQzB0VkhKaGJuTlZibWwwTFhSbGVIUXRabTl1ZEMxemFYcGxLVHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJSFpoY2lndExWUnlZVzV6Vlc1cGRDMTBaWGgwTFd4cGJtVXRhR1ZwWjJoMEtUdGNiaUFnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzRnSUcxcGJpMW9aV2xuYUhRNklIWmhjaWd0TFZSeVlXNXpWVzVwZEMxeWFIbDBhRzBwTzF4dUlDQnRZWEpuYVc0NklEQTdYRzRnSUhCaFpHUnBibWM2SUdOaGJHTW9kbUZ5S0MwdFZISmhibk5WYm1sMExYSm9lWFJvYlNrZ0tpQXVOelVwTzF4dUlDQnlaWE5wZW1VNklHNXZibVU3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR2hsYVdkb2RDQXVNWE1nZG1GeUtDMHRWSEpoYm5OVmJtbDBMWFJ5WVc1emFYUnBiMjR0WldGelpUb3BPMXh1SUNCM2FHbDBaUzF6Y0dGalpUb2djSEpsTFhkeVlYQTdYRzRnSUhkdmNtUXRkM0poY0RvZ1luSmxZV3N0ZDI5eVpEdGNiaUFnZEdGaUxYTnBlbVU2SURnN1hHNGdJR052Ykc5eU9pQjJZWElvTFMxVWNtRnVjMVZ1YVhRdGRHVjRkQzFqYjJ4dmNpazdYRzRnSUdKdmNtUmxjam9nYm05dVpUdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZEhKaGJuTndZWEpsYm5RN1hHNGdJR0p2ZUMxemFHRmtiM2M2SUc1dmJtVTdYRzVjYmlBZ0xYZGxZbXRwZEMxaGNIQmxZWEpoYm1ObE9pQnViMjVsTzF4dWZWeHVYRzR1VkhKaGJuTlZibWwwTFhSbGVIUTZabTlqZFhNZ2UxeHVJQ0JpYjNKa1pYSTZJRzV2Ym1VN1hHNGdJRzkxZEd4cGJtVTZJRzV2Ym1VN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dWZWeHVYRzR2S2lwY2JpQXFJRTkyWlhKeWFXUmxJSFJsZUhRZ2FHbG5hR3hwWjJoMGFXNW5JR05vWVc1bmFXNW5JSFJsZUhRZ1ptOXliV0YwWEc0Z0tpQnZkR2hsY25kcGMyVWdhWFFnZDI5dUozUWdZV3hwWjI1Y2JpQXFMMXh1WEc0dVZISmhibk5WYm1sMExYUmxlSFFnYzNCaGJpQjdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTBNREFnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaThxS2x4dUlDb2dVM1JoZEhWeklHSmhjbHh1SUNvdlhHNWNiaTVVY21GdWMxVnVhWFF0YzNSaGRIVnpMRnh1TGxSeVlXNXpWVzVwZEMxemRHRjBkWE02WW1WbWIzSmxMRnh1TGxSeVlXNXpWVzVwZEMxemRHRjBkWE02WVdaMFpYSWdlMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSG90YVc1a1pYZzZJSFpoY2lndExWUnlZVzV6Vlc1cGRDMXpkR0YwZFhNdGVpMXBibVJsZUNrN1hHNGdJR3hsWm5RNklEQTdYRzRnSUhkcFpIUm9PaUIyWVhJb0xTMVVjbUZ1YzFWdWFYUXRjbWg1ZEdodEtUdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZG1GeUtDMHRWSEpoYm5OVmJtbDBMV052Ykc5eUxXNWxkWFJ5WVd3cE8xeHVmVnh1WEc0dVZISmhibk5WYm1sMExYTjBZWFIxY3lCN1hHNGdJSFJ2Y0RvZ0xURTdYRzRnSUdKdmRIUnZiVG9nTFRFN1hHNTlYRzVjYmk1VWNtRnVjMVZ1YVhRdGMzUmhkSFZ6TG1sekxXeHZZV1JwYm1jc1hHNHVWSEpoYm5OVmJtbDBMWE4wWVhSMWN5NXBjeTFzYjJGa2FXNW5PbUpsWm05eVpTQjdYRzRnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhKbGNHVmhkR2x1Wnkxc2FXNWxZWEl0WjNKaFpHbGxiblFvWEc0Z0lDQWdORFZrWldjc1hHNGdJQ0FnZEhKaGJuTndZWEpsYm5Rc1hHNGdJQ0FnZEhKaGJuTndZWEpsYm5RZ1kyRnNZeWgyWVhJb0xTMVVjbUZ1YzFWdWFYUXRjbWg1ZEdodEtTQXFJQzR5TlNrc1hHNGdJQ0FnY21kaVlTZ3lOVFVzTWpVMUxESTFOU3d1TlNrZ1kyRnNZeWgyWVhJb0xTMVVjbUZ1YzFWdWFYUXRjbWg1ZEdodEtTQXFJQzR5TlNrc1hHNGdJQ0FnY21kaVlTZ3lOVFVzTWpVMUxESTFOU3d1TlNrZ1kyRnNZeWgyWVhJb0xTMVVjbUZ1YzFWdWFYUXRjbWg1ZEdodEtTQXFJQzQxS1Z4dUlDQXBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SURFd01DVWdNVEF3TUhCNE8xeHVJQ0JoYm1sdFlYUnBiMjQ2SUd4dllXUnBibWNnTjNNZ2JHbHVaV0Z5TzF4dUlDQmhibWx0WVhScGIyNHRhWFJsY21GMGFXOXVMV052ZFc1ME9pQnBibVpwYm1sMFpUdGNibjFjYmx4dUxsUnlZVzV6Vlc1cGRDMXpkR0YwZFhNNlltVm1iM0psSUh0Y2JpQWdkRzl3T2lCallXeGpLSFpoY2lndExWUnlZVzV6Vlc1cGRDMXlhSGwwYUcwcElDb2dMUzQzTlNrN1hHNGdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdjR0ZrWkdsdVp5MTBiM0E2SUdOaGJHTW9kbUZ5S0MwdFZISmhibk5WYm1sMExYSm9lWFJvYlNrZ0tpQXVOelVwTzF4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ1kyRnNZeWgyWVhJb0xTMVVjbUZ1YzFWdWFYUXRjbWg1ZEdodEtTQXFJQzQzTlNrN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdOdmJuUmxiblF0WW05NE8xeHVJQ0I2TFdsdVpHVjRPaUIyWVhJb0xTMVVjbUZ1YzFWdWFYUXRjM1JoZEhWekxXSmxabTl5WlMxNkxXbHVaR1Y0S1R0Y2JpQWdkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVPMXh1SUNCamIyNTBaVzUwT2lBbkp6dGNiaUFnZEhKaGJuTm1iM0p0T2lCelkyRnNaVmtvTGpZMUtUdGNibjFjYmx4dUxsUnlZVzV6Vlc1cGRDMXpkR0YwZFhNNllXWjBaWElnZTF4dUlDQjBjbUZ1YzJsMGFXOXVPaUJ1YjI1bE8xeHVJQ0I2TFdsdVpHVjRPaUIyWVhJb0xTMVVjbUZ1YzFWdWFYUXRjM1JoZEhWekxXRm1kR1Z5TFhvdGFXNWtaWGdwTzF4dUlDQjBiM0E2SURBN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdOdmJuUmxiblF0WW05NE8xeHVJQ0IzYVdSMGFEb2dZMkZzWXloMllYSW9MUzFVY21GdWMxVnVhWFF0Y21oNWRHaHRLU0FxSUM0NE56VXBPMXh1SUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUdOdmJuUmxiblE2SUNjbk8xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWm1abU8xeHVJQ0J2Y0dGamFYUjVPaUF1Tmp0Y2JuMWNibHh1TGxSeVlXNXpWVzVwZEM1cGN5MW1iMk4xYzJWa0lDNVVjbUZ1YzFWdWFYUXRjM1JoZEhWek9tSmxabTl5WlNCN1hHNGdJSFpwYzJsaWFXeHBkSGs2SUhacGMybGliR1U3WEc0Z0lIUnlZVzV6Wm05eWJUb2djMk5oYkdWWktERXBPMXh1ZlZ4dVhHNHVWSEpoYm5OVmJtbDBMbWx6TFdadlkzVnpaV1FnTGxSeVlXNXpWVzVwZEMxemRHRjBkWE02WVdaMFpYSWdlMXh1SUNCMGIzQTZJR05oYkdNb2RtRnlLQzB0VkhKaGJuTlZibWwwTFhKb2VYUm9iU2tnS2lBdExqYzFLVHRjYmlBZ2NHRmtaR2x1WnkxMGIzQTZJR05oYkdNb2RtRnlLQzB0VkhKaGJuTlZibWwwTFhKb2VYUm9iU2tnS2lBdU56VXBPMXh1SUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nWTJGc1l5aDJZWElvTFMxVWNtRnVjMVZ1YVhRdGNtaDVkR2h0S1NBcUlDNDNOU2s3WEc0Z0lHOXdZV05wZEhrNklDNDRPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFMWxkR0VnWkdGMFlWeHVJQ292WEc1Y2JpNVVjbUZ1YzFWdWFYUXRiV1YwWVVSaGRHRWdlMXh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJSEpwWjJoME9pQXdPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNibjFjYmx4dUxsUnlZVzV6Vlc1cGRDMXRaWFJoUkdGMFlVbDBaVzBnZTF4dUlDQnNhVzVsTFdobGFXZG9kRG9nWTJGc1l5aDJZWElvTFMxVWNtRnVjMVZ1YVhRdGNtaDVkR2h0S1NBcUlDNDNOU2s3WEc1OVhHNWNiaTVVY21GdWMxVnVhWFF0YldWMFlVUmhkR0ZDZFhSMGIyNGdlMXh1SUNCbWIyNTBMWE5wZW1VNklIWmhjaWd0TFZSeVlXNXpWVzVwZEMxdFpYUmhSR0YwWVVKMWRIUnZiaTF6YVhwbEtUdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklHTmhiR01vZG1GeUtDMHRWSEpoYm5OVmJtbDBMWEpvZVhSb2JTa2dLaUF1TkNrN1hHNGdJRzl3WVdOcGRIazZJQzQ0TzF4dWZWeHVYRzR1VkhKaGJuTlZibWwwTFcxbGRHRkVZWFJoUW5WMGRHOXVPbWh2ZG1WeUlIdGNiaUFnYjNCaFkybDBlVG9nTVR0Y2JuMWNibHh1TGxSeVlXNXpWVzVwZEMxdFpYUmhSR0YwWVVOdmJXMWxiblJ6TEZ4dUxsUnlZVzV6Vlc1cGRDMXRaWFJoUkdGMFlVVnljbTl5Y3lCN1hHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ2NtbG5hSFE2SURBN1hHNGdJR3hsWm5RNklEQTdYRzU5WEc1Y2JpNVVjbUZ1YzFWdWFYUXRiV1YwWVVSaGRHRkRiMjF0Wlc1MGN5QjdYRzRnSUhSdmNEb2dZMkZzWXloMllYSW9MUzFVY21GdWMxVnVhWFF0Y21oNWRHaHRLU0FxSUM0M05TazdYRzU5WEc1Y2JpNVVjbUZ1YzFWdWFYUXRiV1YwWVVSaGRHRkZjbkp2Y25NZ2UxeHVJQ0IwYjNBNklHTmhiR01vZG1GeUtDMHRWSEpoYm5OVmJtbDBMWEpvZVhSb2JTa2dLaUF4TGpjMUtUdGNibjFjYmx4dUxsUnlZVzV6Vlc1cGRDMXRaWFJoUkdGMFlVVnljbTl5YzBsamIyNGdlMXh1SUNCMFpYaDBMWE5vWVdSdmR6b2dNQ0F3SURKd2VDQWpabVptTzF4dWZWeHVYRzR2S2lwY2JpQXFJRk50WVd4c0lGTnBlbVVnUkc5M2JseHVJQ292WEc1Y2JrQnRaV1JwWVNBb0xTMXpiUzEyYVdWM2NHOXlkQ2tnZTF4dUlDQXVWSEpoYm5OVmJtbDBMVWhsWVdScGJtY2dlMXh1SUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nWTJGc1l5aDJZWElvTFMxVWNtRnVjMVZ1YVhRdGNtaDVkR2h0S1NBcUlERXBPMXh1SUNCOVhHNWNiaUFnTGxSeVlXNXpWVzVwZEMxd1lXNWxiRVp2YjNSbGNreGxablJPWVhZZ2UxeHVJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dZMkZzWXloMllYSW9MUzFVY21GdWMxVnVhWFF0Y21oNWRHaHRLU0FxSURFcE8xeHVJQ0I5WEc1Y2JuMWNibHh1THlvcVhHNGdLaUJOWldScGRXMGdVMmw2WlNCVmNGeHVJQ292WEc1Y2JrQnRaV1JwWVNBb0xTMW5kR1Z0WkMxMmFXVjNjRzl5ZENrZ2UxeHVJQ0F1VkhKaGJuTlZibWwwTEZ4dUlDQXVWSEpoYm5OVmJtbDBMV2wwWlcwZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUhSaFlteGxPMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lIUmhZbXhsTFd4aGVXOTFkRG9nWm1sNFpXUTdYRzRnSUgxY2JseHVJQ0F1VkhKaGJuTlZibWwwTFhCaGJtVnNJSHRjYmlBZ0lDQmthWE53YkdGNU9pQjBZV0pzWlMxalpXeHNPMXh1SUNBZ0lIZHBaSFJvT2lBMU1DVTdYRzRnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF3TzF4dUlDQjlYRzVjYmlBZ0xsUnlZVzV6Vlc1cGRDMXpiM1Z5WTJVZ2UxeHVJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJR05oYkdNb2RtRnlLQzB0VkhKaGJuTlZibWwwTFhKb2VYUm9iU2tnS2lBdU5TazdYRzRnSUgxY2JseHVJQ0F1VkhKaGJuTlZibWwwTFhSeVlXNXpiR0YwYVc5dUlIdGNiaUFnSUNCd1lXUmthVzVuTFd4bFpuUTZJR05oYkdNb2RtRnlLQzB0VkhKaGJuTlZibWwwTFhKb2VYUm9iU2tnS2lBdU5TazdYRzRnSUgxY2JseHVJQ0F2S2lCRGIzWmxjaUIwYUdVZ2IzWmxjbXhoY0hCcGJtY2dhR1ZoWkdWeWN5QXFMMXh1WEc0Z0lDNVVjbUZ1YzFWdWFYUXRjR0Z1Wld4SVpXRmtaWEl0TFhOdmRYSmpaU3hjYmlBZ0xsUnlZVzV6Vlc1cGRDMXdZVzVsYkVadmIzUmxjaTB0YzI5MWNtTmxJSHRjYmlBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lCallXeGpLSFpoY2lndExWUnlZVzV6Vlc1cGRDMXlhSGwwYUcwcElDb2dNUzR5TlNrN1hHNGdJQ0FnY21sbmFIUTZJR0YxZEc4N1hHNGdJSDFjYmx4dUlDQXVWSEpoYm5OVmJtbDBMWEJoYm1Wc1NHVmhaR1Z5TFMxMGNtRnVjMnhoZEdsdmJpeGNiaUFnTGxSeVlXNXpWVzVwZEMxd1lXNWxiRVp2YjNSbGNpMHRkSEpoYm5Oc1lYUnBiMjRnZTF4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ1kyRnNZeWgyWVhJb0xTMVVjbUZ1YzFWdWFYUXRjbWg1ZEdodEtTQXFJREV1TWpVcE8xeHVJQ0FnSUd4bFpuUTZJR0YxZEc4N1hHNGdJSDFjYmx4dUlDQXVWSEpoYm5OVmJtbDBMWE4wWVhSMWN5eGNiaUFnTGxSeVlXNXpWVzVwZEMxemRHRjBkWE02WW1WbWIzSmxMRnh1SUNBdVZISmhibk5WYm1sMExYTjBZWFIxY3pwaFpuUmxjaUI3WEc0Z0lDQWdiR1ZtZERvZ05UQWxPMXh1SUNBZ0lHMWhjbWRwYmkxc1pXWjBPaUJqWVd4aktIWmhjaWd0TFZSeVlXNXpWVzVwZEMxeWFIbDBhRzBwSUNvZ0xTNDFLVHRjYmlBZ2ZWeHVmVnh1WEc0dktpcGNiaUFxSUZOMFlYUjFjeUJpWVhJZ1RXOWthV1pwWlhKelhHNGdLaTljYmx4dUxsUnlZVzV6Vlc1cGRDMHRhR2xuYUd4cFoyaDBJQzVVY21GdWMxVnVhWFF0YzNSaGRIVnpMRnh1TGxSeVlXNXpWVzVwZEMwdGFHbG5hR3hwWjJoMElDNVVjbUZ1YzFWdWFYUXRjM1JoZEhWek9tSmxabTl5WlNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExWUnlZVzV6Vlc1cGRDMWpiMnh2Y2kxb2FXZG9iR2xuYUhRcE8xeHVmVnh1WEc0dVZISmhibk5WYm1sMExTMXpkV05qWlhOeklDNVVjbUZ1YzFWdWFYUXRjM1JoZEhWekxGeHVMbFJ5WVc1elZXNXBkQzB0YzNWalkyVnpjeUF1VkhKaGJuTlZibWwwTFhOMFlYUjFjenBpWldadmNtVWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzFVY21GdWMxVnVhWFF0WTI5c2IzSXRjM1ZqWTJWemN5azdYRzU5WEc1Y2JpNVVjbUZ1YzFWdWFYUXRMWFZ1YzNWeVpTQXVWSEpoYm5OVmJtbDBMWE4wWVhSMWN5eGNiaTVVY21GdWMxVnVhWFF0TFhWdWMzVnlaU0F1VkhKaGJuTlZibWwwTFhOMFlYUjFjenBpWldadmNtVWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzFVY21GdWMxVnVhWFF0WTI5c2IzSXRkVzV6ZFhKbEtUdGNibjFjYmx4dUxsUnlZVzV6Vlc1cGRDMHRkMkZ5Ym1sdVp5QXVWSEpoYm5OVmJtbDBMWE4wWVhSMWN5eGNiaTVVY21GdWMxVnVhWFF0TFhkaGNtNXBibWNnTGxSeVlXNXpWVzVwZEMxemRHRjBkWE02WW1WbWIzSmxJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0VkhKaGJuTlZibWwwTFdOdmJHOXlMWGRoY201cGJtY3BPMXh1ZlZ4dVhHNHVWSEpoYm5OVmJtbDBMUzFrWVc1blpYSWdMbFJ5WVc1elZXNXBkQzF6ZEdGMGRYTXNYRzR1VkhKaGJuTlZibWwwTFMxa1lXNW5aWElnTGxSeVlXNXpWVzVwZEMxemRHRjBkWE02WW1WbWIzSmxJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0VkhKaGJuTlZibWwwTFdOdmJHOXlMV1JoYm1kbGNpazdYRzU5WEc1Y2JpNVVjbUZ1YzFWdWFYUXRMWE5sWTI5dVpHRnllU0F1VkhKaGJuTlZibWwwTFhOMFlYUjFjeXhjYmk1VWNtRnVjMVZ1YVhRdExYTmxZMjl1WkdGeWVTQXVWSEpoYm5OVmJtbDBMWE4wWVhSMWN6cGlaV1p2Y21VZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMVVjbUZ1YzFWdWFYUXRZMjlzYjNJdGMyVmpiMjVrWVhKNUtUdGNibjFjYmx4dUx5b3FYRzRnS2lCVWVYQmxJRTF2WkdsbWFXVnljMXh1SUNvdlhHNWNiaTVVY21GdWMxVnVhWFF0TFhOMVoyZGxjM1JwYjI0NmFHOTJaWElnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMxVWNtRnVjMVZ1YVhRdGFHOTJaWEl0WTI5c2IzSXRZbWNwTzF4dWZWeHVYRzR1VkhKaGJuTlZibWwwTFMxemRXZG5aWE4wYVc5dUlDNVVjbUZ1YzFWdWFYUXRjR0Z1Wld3Z2UxeHVJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ1kyRnNZeWgyWVhJb0xTMVVjbUZ1YzFWdWFYUXRjbWg1ZEdodEtTQXFJQzQxS1R0Y2JpQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklHTmhiR01vZG1GeUtDMHRWSEpoYm5OVmJtbDBMWEpvZVhSb2JTa2dLaUF1TlNrN1hHNTlYRzVjYmk1VWNtRnVjMVZ1YVhRdExYTjFaMmRsYzNScGIyNGdMbFJ5WVc1elZXNXBkQzFrWlhSaGFXeHpJSHRjYmlBZ2NHRmtaR2x1Wnkxc1pXWjBPaUJqWVd4aktIWmhjaWd0TFZSeVlXNXpWVzVwZEMxeWFIbDBhRzBwSUNvZ0xqYzFLVHRjYmlBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nWTJGc1l5aDJZWElvTFMxVWNtRnVjMVZ1YVhRdGNtaDVkR2h0S1NBcUlDNDNOU2s3WEc1OVhHNWNiaTVVY21GdWMxVnVhWFF0TFhOMVoyZGxjM1JwYjI0Z0xsUnlZVzV6Vlc1cGRDMTBaWGgwTFMxMGFXZG9kQ0I3WEc0Z0lIQmhaR1JwYm1jdGRHOXdPaUF3TzF4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ01EdGNibjFjYmx4dVFHdGxlV1p5WVcxbGN5QnNiMkZrYVc1bklIdGNiaUFnTUNVZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklEQWdNRHRjYmlBZ2ZWeHVJQ0F4TURBbElIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQXdJREV3TURCd2VEdGNiaUFnZlZ4dWZWeHVJaXdpTGxKbGMybDZaWElnZTF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUhvdGFXNWtaWGc2SURFd01EQTdYRzU5WEc1Y2JpNVNaWE5wZW1WeUxTMTJaWEowYVdOaGJDQjdYRzRnSUdOMWNuTnZjam9nWlhjdGNtVnphWHBsTzF4dUlDQjNhV1IwYURvZ01USndlRHRjYmlBZ2RHOXdPaUF3TzF4dUlDQmliM1IwYjIwNklEQTdYRzU5WEc1Y2JpNVNaWE5wZW1WeUxTMW9iM0pwZW05dWRHRnNJSHRjYmlBZ2FHVnBaMmgwT2lBeE1uQjRPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQnlhV2RvZERvZ01EdGNiaUFnWTNWeWMyOXlPaUJ1Y3kxeVpYTnBlbVU3WEc1OVhHNGlMQ0lnSUM4cUtpQkFaR1ZtYVc1bElFVmthWFJ2Y2pzZ2RYTmxJSE4wY21samRDQXFMMXh1WEc0NmNtOXZkQ0I3WEc0Z0lDMHRSV1JwZEc5eUxYSm9lWFJvYlNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E2SURFdU5YSmxiVHRjYmlBZ0xTMUZaR2wwYjNJdGRISmhibk5wZEdsdmJpMWxZWE5sSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRG9nWTNWaWFXTXRZbVY2YVdWeUtDNHhOelVzSUM0NE9EVXNJQzR6TWpBc0lERXVNamMxS1R0Y2JpQWdMUzFGWkdsMGIzSXRZMjlzYjNJdGMzUmhkSFZ6TFdKbklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURvZ1kyOXNiM0lvSXpReE5qazRPQ0IwYVc1MEtEZ3lKU2twTzF4dUlDQXRMVVZrYVhSdmNpMWpiMnh2Y2kxMGNtRnVjMnhoZEdsdmJpMWlaeUFnSUNBZ0lDQWdJQ0FnT2lBalJVTkZSa1l3TzF4dUlDQXRMVVZrYVhSdmNpMXNiMkZrWlhJdGVpMXBibVJsZUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnT2lBNU1EQTdYRzRnSUMwdFJXUnBkRzl5TFhCaGJtVnNMWG90YVc1a1pYZ2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQTZJREl3TUR0Y2JpQWdMUzFGWkdsMGIzSXRjM1ZuWjJWemRHbHZibk10YUdWaFpHVnlMWG90YVc1a1pYZ2dJQ0FnSURvZ016QXdPMXh1SUNBdExVVmthWFJ2Y2kxemRXZG5aWE4wYVc5dWMxTmxZWEpqYUMxNkxXbHVaR1Y0SUNBZ0lDQWdPaUF6TURBN1hHNTlYRzVjYmk1RlpHbDBiM0lnZTF4dUlDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVmVnh1WEc0dVJXUnBkRzl5TFdobFlXUmxjaXhjYmk1RlpHbDBiM0l0Ykc5aFpHVnlJSHRjYmlBZ2RISmhibk5wZEdsdmJqb2dMakp6SUdGc2JDQjJZWElvTFMxRlpHbDBiM0l0ZEhKaGJuTnBkR2x2YmkxbFlYTmxLVHRjYm4xY2JseHVMa1ZrYVhSdmNpMW9aV0ZrWlhJdWFYTXRiV2x1YVcxcGMyVmtJSHRjYmlBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVlpLR05oYkdNb2RtRnlLQzB0UldScGRHOXlMWEpvZVhSb2JTa2dLaUF0TWlrcE8xeHVmVnh1WEc0dVJXUnBkRzl5TFdobFlXUmxjaTVwY3kxdGFXNXBiV2x6WldRZ0xrVmthWFJ2Y2kxdFlXbHVUbUYySUh0Y2JpQWdkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVPMXh1ZlZ4dVhHNHVSV1JwZEc5eUxXeHZZV1JsY2lCN1hHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ2VpMXBibVJsZURvZ2RtRnlLQzB0UldScGRHOXlMV3h2WVdSbGNpMTZMV2x1WkdWNEtUdGNiaUFnZEc5d09pQXdPMXh1SUNCc1pXWjBPaUExTUNVN1hHNGdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsS0MwMU1DVXNJR05oYkdNb2RtRnlLQzB0UldScGRHOXlMWEpvZVhSb2JTa2dLaUF1TWpVcEtUdGNibjFjYmx4dUxrVmthWFJ2Y2kxc2IyRmtaWEl1YVhNdGJXbHVhVzFwYzJWa0lIdGNiaUFnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtDMDFNQ1VwSUhOallXeGxLQzQzTlN3Z0xqYzFLVHRjYm4xY2JseHVMa1ZrYVhSdmNpMXRZV2x1VG1GMklIdGNiaUFnYUdWcFoyaDBPaUJqWVd4aktIWmhjaWd0TFVWa2FYUnZjaTF5YUhsMGFHMHBJQ29nTWlrN1hHNTlYRzVjYmk1RlpHbDBiM0l0WTI5dWRHVnVkQ0I3WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnYkdWbWREb2dNRHRjYmlBZ2NtbG5hSFE2SURBN1hHNGdJSFJ2Y0RvZ1kyRnNZeWgyWVhJb0xTMUZaR2wwYjNJdGNtaDVkR2h0S1NBcUlETXVOelVwTzF4dUlDQmliM1IwYjIwNklEQTdYRzRnSUc5MlpYSm1iRzkzT2lCaGRYUnZPMXh1SUNCdmRtVnlabXh2ZHkxNU9pQnpZM0p2Ykd3N1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dUlDQXRkMlZpYTJsMExXOTJaWEpzYjNjdGMyTnliMnhzYVc1bk9pQjBiM1ZqYUR0Y2JuMWNibHh1TGtWa2FYUnZjaTFqYjI1MFpXNTBMbWx6TFcxaGVHbHRhWE5sWkNCN1hHNGdJSFJ2Y0RvZ1kyRnNZeWgyWVhJb0xTMUZaR2wwYjNJdGNtaDVkR2h0S1NBcUlERXVOelVwTzF4dWZWeHVYRzR2S2xOdklHWnBjbVZtYjNnZ2EyVmxjSE1nZEdobElHSmhZMnRuY205MWJtUWdZWFFnTVRBd0pTQm9aV2xuYUhRZ2QyaGxiaUIwYUdWeVpTQmhjbVVnYjI1c2VTQmhJR1psZHlCMGNtRnVjMnhoZEdsdmJuTXFMMXh1TGtWa2FYUnZjaTEwY21GdWMyeGhkR2x2Ym5OWGNtRndjR1Z5SUh0Y2JpQWdhR1ZwWjJoME9pQXhNREFsTzF4dWZWeHVYRzR1UldScGRHOXlMWFJ5WVc1emJHRjBhVzl1Y3lCN1hHNGdJRzFwYmkxb1pXbG5hSFE2SURFd01DVTdYRzRnSUhCaFpHUnBibWM2SUdOaGJHTW9kbUZ5S0MwdFJXUnBkRzl5TFhKb2VYUm9iU2tnS2lBeUtTQXdPMXh1SUNCaVlXTnJaM0p2ZFc1a09pQnNhVzVsWVhJdFozSmhaR2xsYm5Rb2JHVm1kQ3dnZG1GeUtDMHRSV1JwZEc5eUxXTnZiRzl5TFhOMFlYUjFjeTFpWnlrc0lIWmhjaWd0TFVWa2FYUnZjaTFqYjJ4dmNpMXpkR0YwZFhNdFltY3BLVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2diR1ZtZENCalpXNTBaWEk3WEc0Z0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ2RtRnlLQzB0Y21oNWRHaHRLU0F4TURBbE8xeHVJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4dWZWeHVYRzR1UldScGRHOXlMV04xY25KbGJuUkViMk1nZTF4dUlDQnRZWGd0ZDJsa2RHZzZJR05oYkdNb2RtRnlLQzB0UldScGRHOXlMWEpvZVhSb2JTa2dLaUF6TGpVcE8xeHVmVnh1WEc0dVJXUnBkRzl5TFdOMWNuSmxiblJNWVc1bklIdGNiaUFnYldGNExYZHBaSFJvT2lCallXeGpLSFpoY2lndExVVmthWFJ2Y2kxeWFIbDBhRzBwSUNvZ015NDFLVHRjYm4xY2JseHVMa1ZrYVhSdmNpMXpkV2RuWlhOMGFXOXVjeUI3WEc0Z0lIQnZjMmwwYVc5dU9pQm1hWGhsWkR0Y2JpQWdlaTFwYm1SbGVEb2dkbUZ5S0MwdFJXUnBkRzl5TFhCaGJtVnNMWG90YVc1a1pYZ3BPMXh1SUNCeWFXZG9kRG9nTUR0Y2JpQWdZbTkwZEc5dE9pQXdPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0J0YVc0dGFHVnBaMmgwT2lBek1DVTdYRzRnSUdKdmVDMXphR0ZrYjNjNklEQWdMV05oYkdNb2RtRnlLQzB0UldScGRHOXlMWEpvZVhSb2JTa2dLaUF1TVRJMUtTQjJZWElvTFMxSVpXRmtaWEl0Y21oNWRHaHRLU0J5WjJKaEtEQXNNQ3d3TEM0eEtUdGNiaUFnTHlwMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29NVEF3SlNrN0tpOWNibjFjYmx4dUxrVmthWFJ2Y2kxemRXZG5aWE4wYVc5dWMwaGxZV1JsY2lCN1hHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ2RHOXdPaUF3TzF4dUlDQnNaV1owT2lBd08xeHVJQ0J5YVdkb2REb2dNRHRjYmlBZ1ltOTRMWE5vWVdSdmR6b2dNQ0F4Y0hnZ01YQjRJSEpuWW1Fb01Dd3dMREFzTUM0eEtUdGNiaUFnZWkxcGJtUmxlRG9nZG1GeUtDMHRSV1JwZEc5eUxYTjFaMmRsYzNScGIyNXpMV2hsWVdSbGNpMTZMV2x1WkdWNEtUdGNiaUFnZFhObGNpMXpaV3hsWTNRNklHNXZibVU3WEc1OVhHNWNiaTVGWkdsMGIzSXRjM1ZuWjJWemRHbHZibk5DYjJSNUlIdGNiaUFnTHlvZ1JtRnNiR0poWTJzZ0tpOWNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQjBiM0E2SUdOaGJHTW9kbUZ5S0MwdFJXUnBkRzl5TFhKb2VYUm9iU2tnS2lBeExqVXBPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQnlhV2RvZERvZ01EdGNiaUFnWW05MGRHOXRPaUF3TzF4dUlDQnZkbVZ5Wm14dmR6b2djMk55YjJ4c08xeHVJQ0J2ZG1WeVpteHZkeTE0T2lCb2FXUmtaVzQ3WEc0Z0lHOTJaWEptYkc5M0xYazZJSE5qY205c2JEdGNibjFjYmx4dUxrVmthWFJ2Y2kxemRXZG5aWE4wYVc5dWN5NXBjeTF6WldGeVkyZ3RZV04wYVhabElDNUZaR2wwYjNJdGMzVm5aMlZ6ZEdsdmJuTkNiMlI1SUh0Y2JpQWdkRzl3T2lCallXeGpLSFpoY2lndExVVmthWFJ2Y2kxeWFIbDBhRzBwSUNvZ015azdYRzU5WEc1Y2JpNUZaR2wwYjNJdGMzVm5aMlZ6ZEdsdmJuTlRaV0Z5WTJnZ2UxeHVJQ0JqYkdWaGNqb2dZbTkwYUR0Y2JuMWNibHh1THlvcVhHNGdLaUJOWldScFlTQlJkV1Z5YVdWelhHNGdLaTljYmx4dVFHMWxaR2xoSUNndExYTnRMWFpwWlhkd2IzSjBLU0I3WEc0Z0lDNUZaR2wwYjNJdFkzVnljbVZ1ZEZCeWIycGxZM1FnZTF4dUlDQWdJRzFoZUMxM2FXUjBhRG9nWTJGc1l5aDJZWElvTFMxRlpHbDBiM0l0Y21oNWRHaHRLU0FxSURNdU5TazdYRzRnSUgxY2JuMWNibHh1UUcxbFpHbGhJQ2d0TFdkMFpXMWtMWFpwWlhkd2IzSjBLU0I3WEc0Z0lDNUZaR2wwYjNJdGRISmhibk5zWVhScGIyNXpJSHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPbHh1SUNBZ0lDQWdiR2x1WldGeUxXZHlZV1JwWlc1MEtIUnZJSEpwWjJoMExDQjJZWElvTFMxRlpHbDBiM0l0WTI5c2IzSXRjM1JoZEhWekxXSm5LU3dnZG1GeUtDMHRSV1JwZEc5eUxXTnZiRzl5TFhOMFlYUjFjeTFpWnlrcExGeHVJQ0FnSUNBZ2JHbHVaV0Z5TFdkeVlXUnBaVzUwS0hSdklISnBaMmgwTENCMllYSW9MUzFGWkdsMGIzSXRZMjlzYjNJdGRISmhibk5zWVhScGIyNHRZbWNwTENCMllYSW9MUzFGWkdsMGIzSXRZMjlzYjNJdGRISmhibk5zWVhScGIyNHRZbWNwS1R0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2x4dUlDQWdJQ0FnWTJWdWRHVnlMRnh1SUNBZ0lDQWdjbWxuYUhRN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxemFYcGxPbHh1SUNBZ0lDQWdkbUZ5S0MwdGNtaDVkR2h0S1NBeE1EQWxMRnh1SUNBZ0lDQWdOVEFsSURFd01DVTdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMXlaWEJsWVhRNlhHNGdJQ0FnSUNCdWJ5MXlaWEJsWVhRN1hHNGdJSDFjYm4xY2JpSXNJaThxS2x4dUtpQlVhR1Z0WlNCa1pXWnBibWwwYVc5dVhHNHFYRzRxSUZSb2FYTWdaR1ZtYVc1bGN5QjBhR1VnZEdobGJXVWdhVzRnWm5WdVpHRnRaVzUwWVd3Z2RHVnliWE1zSUdKMWRDQnViM1FnYUc5M0lHbDBJR2x6SUdGd2NHeHBaV1FnZEc5Y2Jpb2dkR2hsSUdOdmJYQnZibVZ1ZEhNdUlGUm9ZWFFnYVhNZ1pHOXVaU0JwYmlCZ2RHaGxiV1V0YldGd0xtTnpjMkF1WEc0cUwxeHVYRzR2S2lwY2Jpb2dRbkpsWVd0d2IybHVkSE5jYmlvdlhHNWNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMXpiUzEyYVdWM2NHOXlkQ0FvYldsdUxYZHBaSFJvT2pBcElHRnVaQ0FvYldGNExYZHBaSFJvT2pjME1IQjRLVHRjYmtCamRYTjBiMjB0YldWa2FXRWdMUzF0WkMxMmFXVjNjRzl5ZENBb2JXbHVMWGRwWkhSb09qYzBNWEI0S1NCaGJtUWdLRzFoZUMxM2FXUjBhRG81TmpCd2VDazdYRzVBWTNWemRHOXRMVzFsWkdsaElDMHRiSFJsYldRdGRtbGxkM0J2Y25RZ0tHMWhlQzEzYVdSMGFEbzVOakJ3ZUNrN1hHNUFZM1Z6ZEc5dExXMWxaR2xoSUMwdFozUmxiV1F0ZG1sbGQzQnZjblFnS0cxcGJpMTNhV1IwYURvM05ERndlQ2s3WEc1QVkzVnpkRzl0TFcxbFpHbGhJQzB0YkdjdGRtbGxkM0J2Y25RZ0tHMXBiaTEzYVdSMGFEbzVOakZ3ZUNrZ1lXNWtJQ2h0WVhndGQybGtkR2c2TVRJM01IQjRLVHRjYmtCamRYTjBiMjB0YldWa2FXRWdMUzFzZEdWc1p5MTJhV1YzY0c5eWRDQW9iV0Y0TFhkcFpIUm9PakV5TnpCd2VDazdYRzVBWTNWemRHOXRMVzFsWkdsaElDMHRaM1JsYkdjdGRtbGxkM0J2Y25RZ0tHMXBiaTEzYVdSMGFEbzVOakZ3ZUNrN1hHNUFZM1Z6ZEc5dExXMWxaR2xoSUMwdGVHeG5MWFpwWlhkd2IzSjBJQ2h0YVc0dGQybGtkR2c2TVRJM01YQjRLVHRjYmx4dVhHNHZLaXBjYmlBcUlFTnZiRzl5YzF4dUlDb3ZYRzVjYmpweWIyOTBJSHRjYmx4dUlDQXZLaUJRY21sdFlYSjVJR2R5WlhseklDb3ZYRzRnSUMwdFkyOXNiM0l0ZDJocGRHVWdJQ0FnSUNBZ0lDQTZJQ05tWm1ZN1hHNGdJQzB0WTI5c2IzSXRZbXhoWTJzZ0lDQWdJQ0FnSUNBNklDTXdNREE3WEc0Z0lDMHRZMjlzYjNJdGJHbG5hSFJsYzNRdFozSmxlU0E2SUdOdmJHOXlLSFpoY2lndExXTnZiRzl5TFdKc1lXTnJLU0IwYVc1MEtEazFKU2twTzF4dUlDQXRMV052Ykc5eUxXeHBaMmgwWlhJdFozSmxlU0FnT2lCamIyeHZjaWgyWVhJb0xTMWpiMnh2Y2kxaWJHRmpheWtnZEdsdWRDZzVNQ1VwS1R0Y2JpQWdMUzFqYjJ4dmNpMXNhV2RvZEMxbmNtVjVJQ0FnSURvZ1kyOXNiM0lvZG1GeUtDMHRZMjlzYjNJdFlteGhZMnNwSUhScGJuUW9PREFsS1NrN1hHNGdJQzB0WTI5c2IzSXRiR2xuYUhScGMyZ3RaM0psZVNBNklHTnZiRzl5S0haaGNpZ3RMV052Ykc5eUxXSnNZV05yS1NCMGFXNTBLRGN3SlNrcE8xeHVJQ0F0TFdOdmJHOXlMV2R5WlhrZ0lDQWdJQ0FnSUNBZ09pQmpiMnh2Y2loMllYSW9MUzFqYjJ4dmNpMWliR0ZqYXlrZ2RHbHVkQ2cxTUNVcEtUdGNiaUFnTFMxamIyeHZjaTFrWVhKcmFYTm9MV2R5WlhrZ0lEb2dZMjlzYjNJb2RtRnlLQzB0WTI5c2IzSXRZbXhoWTJzcElIUnBiblFvTXpBbEtTazdYRzRnSUMwdFkyOXNiM0l0WkdGeWF5MW5jbVY1SUNBZ0lDQTZJR052Ykc5eUtIWmhjaWd0TFdOdmJHOXlMV0pzWVdOcktTQjBhVzUwS0RJd0pTa3BPMXh1SUNBdExXTnZiRzl5TFdSaGNtdGxjaTFuY21WNUlDQWdPaUJqYjJ4dmNpaDJZWElvTFMxamIyeHZjaTFpYkdGamF5a2dkR2x1ZENneE1DVXBLVHRjYmlBZ0xTMWpiMnh2Y2kxa1lYSnJaWE4wTFdkeVpYa2dJRG9nWTI5c2IzSW9kbUZ5S0MwdFkyOXNiM0l0WW14aFkyc3BJSFJwYm5Rb05TVXBLVHRjYmx4dUlDQXZLaUJOWVdsdUlHTnZiRzl5Y3lBcUwxeHVJQ0F0TFdOdmJHOXlMWEJ5YVcxaGNua2dJQ0FnSUNBZ09pQWpNRE5CTmtRM08xeHVJQ0F0TFdOdmJHOXlMWE5sWTI5dVpHRnllU0FnSUNBZ09pQWpNakEzTVRoQk8xeHVYRzRnSUM4cUlFSmhZMnRuY205MWJtUWdZMjlzYjNKeklDb3ZYRzRnSUMwdFkyOXNiM0l0WW1jZ0lDQWdJQ0FnSUNBZ0lDQTZJQ05GUTBWR1JqQTdYRzRnSUMwdFkyOXNiM0l0WW1jdGJHbG5hSFJsYzNRZ0lDQTZJSFpoY2lndExXTnZiRzl5TFhkb2FYUmxLVHRjYmlBZ0xTMWpiMnh2Y2kxaVp5MXNhV2RvZEdWeUlDQWdJRG9nWTI5c2IzSW9kbUZ5S0MwdFkyOXNiM0l0WW1jcElIUnBiblFvT0RBbEtTazdYRzRnSUMwdFkyOXNiM0l0WW1jdGJHbG5hSFFnSUNBZ0lDQTZJR052Ykc5eUtIWmhjaWd0TFdOdmJHOXlMV0puS1NCMGFXNTBLRFEySlNrcE8xeHVJQ0F0TFdOdmJHOXlMV0puTFdSaGNtc2dJQ0FnSUNBZ09pQmpiMnh2Y2loMllYSW9MUzFqYjJ4dmNpMWlaeWtnYzJoaFpHVW9NeVVwS1R0Y2JpQWdMUzFqYjJ4dmNpMWlaeTFrWVhKclpYSWdJQ0FnSURvZ1kyOXNiM0lvZG1GeUtDMHRZMjlzYjNJdFltY3BJSE5vWVdSbEtEWWxLU2s3WEc0Z0lDMHRZMjlzYjNJdFltY3RaR0Z5YTJWemRDQWdJQ0E2SUdOdmJHOXlLSFpoY2lndExXTnZiRzl5TFdKbktTQnphR0ZrWlNnNUpTa3BPMXh1WEc0Z0lDOHFJRk4wWVhSbElHTnZiRzl5Y3lBcUwxeHVJQ0F0TFdOdmJHOXlMV2hwWjJoc2FXZG9kQ0FnSUNBZ09pQjJZWElvTFMxamIyeHZjaTF3Y21sdFlYSjVLVHRjYmlBZ0xTMWpiMnh2Y2kxemRXTmpaWE56SUNBZ0lDQWdJRG9nSXpWRFEwRTNRanRjYmlBZ0xTMWpiMnh2Y2kxMWJuTjFjbVVnSUNBZ0lDQWdJRG9nSTBVNVJFWXhRanRjYmlBZ0xTMWpiMnh2Y2kxM1lYSnVhVzVuSUNBZ0lDQWdJRG9nSTBaR1FUZ3dNRHRjYmlBZ0xTMWpiMnh2Y2kxa1lXNW5aWElnSUNBZ0lDQWdJRG9nSTBaR00wSXpSRHRjYmlBZ0xTMWpiMnh2Y2kxdVpYVjBjbUZzSUNBZ0lDQWdJRG9nWTI5c2IzSW9kbUZ5S0MwdFkyOXNiM0l0YzJWamIyNWtZWEo1S1NCMGFXNTBLRGN3SlNrcE8xeHVYRzRnSUM4cUlFWnZiblFnWTI5c2IzSnpJQ292WEc0Z0lDMHRZMjlzYjNJdFltRnpaUzFtYjI1MElDQWdJQ0E2SUNNME5EUmpOVFE3WEc1Y2JuMWNibHh1WEc0dktpcGNiaUFxSUVadmJuUmNiaUFxTDF4dVhHNDZjbTl2ZENCN1hHNWNiaUFnTFMxbWIyNTBMWE5wZW1VdFltRnpaU0FnSUNBZ0lDQWdPaUF4Tm5CNE8xeHVJQ0F0TFdadmJuUXRabUZ0YVd4NUxXSmhjMlVnSUNBZ0lDQTZJQ2RUYjNWeVkyVWdVMkZ1Y3lCUWNtOG5MQ0JjSWtobGJIWmxkR2xqWVNCT1pYVmxYQ0lzSUVobGJIWmxkR2xqWVU1bGRXVXNJRWhsYkhabGRHbGpZU3dnUVhKcFlXd3NJSE5oYm5NdGMyVnlhV1k3WEc0Z0lDMHRabTl1ZEMxbVlXMXBiSGt0YUdWaFpHbHVaeUFnSURvZ2RtRnlLQzB0Wm05dWRDMW1ZVzFwYkhrdFltRnpaU2s3WEc0Z0lDMHRabTl1ZEMxbVlXMXBiSGt0Ylc5dWIzTndZV05sSURvZ1RXOXVZV052TENCRGIzVnlhV1Z5TENCdGIyNXZjM0JoWTJVN1hHNWNibjFjYmx4dVhHNHZLaXBjYmlBcUlGTjBlV3hsSUVSbFptRjFiSFJ6WEc0Z0tpOWNibHh1T25KdmIzUWdlMXh1WEc0Z0lDMHRaR1ZtWVhWc2RDMWliM0prWlhJdFkyOXNiM0lnSUNBZ0lEb2dZMjlzYjNJb2RtRnlLQzB0WTI5c2IzSXRjMlZqYjI1a1lYSjVLU0JoYkhCb1lTZ3hNaVVwS1R0Y2JpQWdMUzFrWldaaGRXeDBMV0p2Y21SbGNpQWdJQ0FnSUNBZ0lDQWdPaUF4Y0hnZ2MyOXNhV1FnZG1GeUtDMHRaR1ZtWVhWc2RDMWliM0prWlhJdFkyOXNiM0lwTzF4dUlDQXRMV1JsWm1GMWJIUXRZbTl5WkdWeUxYSmhaR2wxY3lBZ0lDQTZJREp3ZUR0Y2JpQWdMUzFrWldaaGRXeDBMV0p2ZUMxemFHRmtiM2NnSUNBZ0lDQWdPaUF3SURGd2VDQXljSGdnY21kaVlTaDJZWElvTFMxamIyeHZjaTFpYkdGamF5a3NJREF1TVNrN1hHNGdJQzB0WkdWbVlYVnNkQzFpYjNndGMyaGhaRzkzTFdsdWMyVjBJRG9nYVc1elpYUWdNQ0F4Y0hnZ01uQjRJSEpuWW1Fb2RtRnlLQzB0WTI5c2IzSXRZbXhoWTJzcExDQXdMakVwTzF4dUlDQXRMV1JsWm1GMWJIUXRkR1Y0ZEMxemFHRmtiM2NnSUNBZ0lDQTZJREFnTVhCNElESndlQ0J5WjJKaEtIWmhjaWd0TFdOdmJHOXlMV0pzWVdOcktTd2dNQzR4S1R0Y2JpQWdMUzFrWldaaGRXeDBMWFJ5WVc1emFYUnBiMjRnSUNBZ0lDQWdPaUF3TGpKeklHTjFZbWxqTFdKbGVtbGxjaWd1TWpZc0lDNDBOeXdnTGpNMkxDQXVPVFFwTzF4dUlDQXRMV1JsWm1GMWJIUXRiR2x1WlMxb1pXbG5hSFFnSUNBZ0lDQTZJREV1TlR0Y2JseHVmVnh1WEc1Y2JpOHFLbHh1SUNvZ1VtaDVkR2h0WEc0Z0tpOWNibHh1T25KdmIzUWdlMXh1WEc0Z0lDMHRjbWg1ZEdodE9pQmpZV3hqS0haaGNpZ3RMV1JsWm1GMWJIUXRiR2x1WlMxb1pXbG5hSFFwSUNvZ01YSmxiU2s3WEc1Y2JuMWNibHh1THlvcVhHNGdLaUJVY21GdWMybDBhVzl1YzF4dUlDb3ZYRzVjYmpweWIyOTBJSHRjYmx4dUlDQXRMWFJ5WVc1emFYUnBiMjR0WldGelpTMXZkWFF0WW1GamF6b2dZM1ZpYVdNdFltVjZhV1Z5S0M0eE56VXNJQzQ0T0RVc0lDNHpNakFzSURFdU1qYzFLVHRjYmlBZ0xTMTBjbUZ1YzJsMGFXOXVMV1ZoYzJVdGIzVjBMV05wY21NNklHTjFZbWxqTFdKbGVtbGxjaWd1TURjMUxDQXVPREl3TENBdU1UWTFMQ0F4TGpBd01DazdYRzVjYm4xY2JseHVMeW9xWEc0Z0tpQmFMVWx1WkdWNElGTmpZV3hsWEc0Z0tpOWNibHh1T25KdmIzUWdlMXh1SUNBdExYb3RjMk5oYkdVdFltVnNiM2NnT2lBdE1UdGNiaUFnTFMxNkxYTmpZV3hsTFRBZ0lDQWdJRG9nTUR0Y2JpQWdMUzE2TFhOallXeGxMVEVnSUNBZ0lEb2dNVEF3TzF4dUlDQXRMWG90YzJOaGJHVXRNaUFnSUNBZ09pQXlNREE3WEc0Z0lDMHRlaTF6WTJGc1pTMHpJQ0FnSUNBNklETXdNRHRjYmlBZ0xTMTZMWE5qWVd4bExUUWdJQ0FnSURvZ05EQXdPMXh1SUNBdExYb3RjMk5oYkdVdE5TQWdJQ0FnT2lBMU1EQTdYRzRnSUMwdGVpMXpZMkZzWlMwMklDQWdJQ0E2SURZd01EdGNiaUFnTFMxNkxYTmpZV3hsTFRjZ0lDQWdJRG9nTnpBd08xeHVJQ0F0TFhvdGMyTmhiR1V0T0NBZ0lDQWdPaUE0TURBN1hHNGdJQzB0ZWkxelkyRnNaUzA1SUNBZ0lDQTZJRGt3TUR0Y2JpQWdMUzE2TFhOallXeGxMVEV3SUNBZ0lEb2dNVEF3TUR0Y2JuMWNiaUlzSWk4cUtseHVJQ3BjYmlBcUlGVjBhV3hwZEdsbGMxeHVJQ3BjYmlBcUwxeHVYRzR2S2lwY2JpQXFJRUpoWTJ0bmNtOTFibVJjYmlBcUwxeHVYRzQ2Y205dmRDQjdYRzRnSUMwdGRTMWlaeTEwY21GdWMybDBhVzl1SUNBZ0lDQWdJQ0FnSURvZ2RtRnlLQzB0WkdWbVlYVnNkQzEwY21GdWMybDBhVzl1S1R0Y2JpQWdMUzExTFdKbkxXSnZjbVJsY2lBZ0lDQWdJQ0FnSUNBZ0lDQWdPaUIyWVhJb0xTMWtaV1poZFd4MExXSnZjbVJsY2lrN1hHNGdJQzB0ZFMxaVp5MWliM0prWlhJdFltOTBkRzl0TFhkcFpIUm9JRG9nTW5CNE8xeHVJQ0F0TFhVdFltY3RZMjlzYjNJZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E2SUhaaGNpZ3RMV052Ykc5eUxXSm5LVHRjYmlBZ0xTMTFMV0puTFdOdmJHOXlMV3hwWjJoMFpYTjBJQ0FnSUNBZ09pQjJZWElvTFMxamIyeHZjaTFpWnkxc2FXZG9kR1Z6ZENrN1hHNGdJQzB0ZFMxaVp5MWpiMnh2Y2kxc2FXZG9kR1Z5SUNBZ0lDQWdJRG9nZG1GeUtDMHRZMjlzYjNJdFltY3RiR2xuYUhSbGNpazdYRzRnSUMwdGRTMWlaeTFqYjJ4dmNpMXNhV2RvZENBZ0lDQWdJQ0FnSURvZ2RtRnlLQzB0WTI5c2IzSXRZbWN0YkdsbmFIUXBPMXh1SUNBdExYVXRZbWN0WTI5c2IzSXRaR0Z5YXlBZ0lDQWdJQ0FnSUNBNklIWmhjaWd0TFdOdmJHOXlMV0puTFdSaGNtc3BPMXh1SUNBdExYVXRZbWN0WTI5c2IzSXRaR0Z5YTJWeUlDQWdJQ0FnSUNBNklIWmhjaWd0TFdOdmJHOXlMV0puTFdSaGNtdGxjaWs3WEc0Z0lDMHRkUzFpWnkxamIyeHZjaTFrWVhKclpYTjBJQ0FnSUNBZ0lEb2dkbUZ5S0MwdFkyOXNiM0l0WW1jdFpHRnlhMlZ6ZENrN1hHNGdJQzB0ZFMxaVp5MWpiMnh2Y2kxd2NtbHRZWEo1SUNBZ0lDQWdJRG9nZG1GeUtDMHRZMjlzYjNJdGNISnBiV0Z5ZVNrN1hHNGdJQzB0ZFMxaVp5MWpiMnh2Y2kxelpXTnZibVJoY25rZ0lDQWdJRG9nZG1GeUtDMHRZMjlzYjNJdGMyVmpiMjVrWVhKNUtUdGNiaUFnTFMxMUxXSm5MV052Ykc5eUxXNWxkWFJ5WVd3Z0lDQWdJQ0FnT2lCMllYSW9MUzExTFdKbkxXTnZiRzl5S1R0Y2JpQWdMUzExTFdKbkxXTnZiRzl5TFdSaGJtZGxjaUFnSUNBZ0lDQWdPaUJqYjJ4dmNpaDJZWElvTFMxamIyeHZjaTFrWVc1blpYSXBJSFJwYm5Rb09EQWxLU2s3WEc0Z0lDMHRkUzFpWnkxamIyeHZjaTEzWVhKdWFXNW5JQ0FnSUNBZ0lEb2dZMjlzYjNJb2RtRnlLQzB0WTI5c2IzSXRkMkZ5Ym1sdVp5a2dkR2x1ZENnNE1DVXBLVHRjYmlBZ0xTMTFMV0puTFdOdmJHOXlMWFZ1YzNWeVpTQWdJQ0FnSUNBZ09pQmpiMnh2Y2loMllYSW9MUzFqYjJ4dmNpMTFibk4xY21VcElIUnBiblFvT1RBbEtTazdYRzRnSUMwdGRTMWlaeTFqYjJ4dmNpMXpkV05qWlhOeklDQWdJQ0FnSURvZ1kyOXNiM0lvZG1GeUtDMHRZMjlzYjNJdGMzVmpZMlZ6Y3lrZ2RHbHVkQ2c0TUNVcEtUdGNiaUFnTFMxMUxXSm5MV052Ykc5eUxXaHBaMmhzYVdkb2RDQWdJQ0FnT2lCamIyeHZjaWgyWVhJb0xTMWpiMnh2Y2kxb2FXZG9iR2xuYUhRcElIUnBiblFvT0RBbEtTazdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1RHbHpkRnh1SUNvdlhHNWNianB5YjI5MElIdGNiaUFnTFMxMUxXeHBjM1F0Y21oNWRHaHRPaUIyWVhJb0xTMXlhSGwwYUcwcE8xeHVmVnh1WEc0dktpcGNiaUFxSUZOcGVtVmNiaUFxTDF4dVhHNDZjbTl2ZENCN1hHNGdJQzB0ZFMxemFYcGxMWEpvZVhSb2JUb2dkbUZ5S0MwdGNtaDVkR2h0S1R0Y2JuMWNibHh1THlvcVhHNGdLaUJUY0dGalpWeHVJQ292WEc1Y2JqcHliMjkwSUh0Y2JpQWdMUzExTFhOd1lXTmxMWEpvZVhSb2JUb2dkbUZ5S0MwdGNtaDVkR2h0S1R0Y2JuMWNibHh1THlvcVhHNGdLaUJFYVhOd2JHRjVYRzRnS2k5Y2JseHVPbkp2YjNRZ2UxeHVJQ0F0TFhVdFpHbHpjR3hoZVMxeWFIbDBhRzA2SURFdU5YSmxiVHRjYm4xY2JseHVYRzR2S2lwY2JpQXFJRlJsZUhSY2JpQXFMMXh1WEc0NmNtOXZkQ0I3WEc0Z0lDMHRkUzEwWlhoMExXTnZiRzl5TFdsdWRtVnlkQ0FnSUNBNklIWmhjaWd0TFdOdmJHOXlMV3hwWjJoMFpYTjBMV2R5WlhrcE8xeHVJQ0F0TFhVdGRHVjRkQzFqYjJ4dmNpMXdjbWx0WVhKNUlDQWdPaUIyWVhJb0xTMWpiMnh2Y2kxd2NtbHRZWEo1S1R0Y2JpQWdMUzExTFhSbGVIUXRZMjlzYjNJdGMyVmpiMjVrWVhKNUlEb2dkbUZ5S0MwdFkyOXNiM0l0YzJWamIyNWtZWEo1S1R0Y2JpQWdMUzExTFhSbGVIUXRZMjlzYjNJdGFHbG5hR3hwWjJoMElEb2dkbUZ5S0MwdFkyOXNiM0l0YUdsbmFHeHBaMmgwS1R0Y2JpQWdMUzExTFhSbGVIUXRZMjlzYjNJdGMzVmpZMlZ6Y3lBZ0lEb2dkbUZ5S0MwdFkyOXNiM0l0YzNWalkyVnpjeWs3WEc0Z0lDMHRkUzEwWlhoMExXTnZiRzl5TFhWdWMzVnlaU0FnSUNBNklIWmhjaWd0TFdOdmJHOXlMWFZ1YzNWeVpTazdYRzRnSUMwdGRTMTBaWGgwTFdOdmJHOXlMVzVsZFhSeVlXd2dJQ0E2SUhaaGNpZ3RMV052Ykc5eUxXNWxkWFJ5WVd3cE8xeHVJQ0F0TFhVdGRHVjRkQzFqYjJ4dmNpMTNZWEp1YVc1bklDQWdPaUIyWVhJb0xTMWpiMnh2Y2kxM1lYSnVhVzVuS1R0Y2JpQWdMUzExTFhSbGVIUXRZMjlzYjNJdFpHRnVaMlZ5SUNBZ0lEb2dkbUZ5S0MwdFkyOXNiM0l0WkdGdVoyVnlLVHRjYmlBZ0xTMTFMWFJsZUhRdGJYVjBaV1F0YjNCaFkybDBlU0FnSURvZ0xqWTdYRzRnSUMwdGRTMTBaWGgwTFhKb2VYUm9iU0FnSUNBZ0lDQWdJQ0E2SUhaaGNpZ3RMWEpvZVhSb2JTazdYRzU5WEc1Y2JseHVMeW9xWEc0Z0tseHVJQ29nUTI5dGNHOXVaVzUwYzF4dUlDcGNiaUFxTDF4dVhHNHZLaXBjYmlBcUlFSmhjMlZjYmlBcUwxeHVYRzQ2Y205dmRDQjdYRzVjYmlBZ0x5b2dSbTl5YlhNZ0tpOWNiaUFnTFMxaVlYTmxMV1p2Y20wdFkyOXNiM0l0Y0d4aFkyVm9iMnhrWlhJZ09pQmpiMnh2Y2loMllYSW9MUzFqYjJ4dmNpMXVaWFYwY21Gc0tTQnphR0ZrWlNneE1DVXBLVHRjYmx4dUlDQXZLaUJIYkc5aVlXd2dLaTljYmlBZ0xTMWlZWE5sTFdadmJuUXRjMmw2WlNBZ0lDQWdJQ0FnSUNBZ0lDQWdPaUIyWVhJb0xTMW1iMjUwTFhOcGVtVXRZbUZ6WlNrN1hHNGdJQzB0WW1GelpTMW1iMjUwTFdaaGJXbHNlU0FnSUNBZ0lDQWdJQ0FnSURvZ2RtRnlLQzB0Wm05dWRDMW1ZVzFwYkhrdFltRnpaU2s3WEc0Z0lDMHRZbUZ6WlMxamIyeHZjaTFtYjI1MElDQWdJQ0FnSUNBZ0lDQWdJRG9nZG1GeUtDMHRZMjlzYjNJdFltRnpaUzFtYjI1MEtUdGNiaUFnTFMxaVlYTmxMV3hwYm1VdGFHVnBaMmgwSUNBZ0lDQWdJQ0FnSUNBZ09pQjJZWElvTFMxa1pXWmhkV3gwTFd4cGJtVXRhR1ZwWjJoMEtUdGNiaUFnTFMxaVlYTmxMV0puTFdOdmJHOXlJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ09pQjJZWElvTFMxamIyeHZjaTFpWnlrN1hHNWNiaUFnTHlvZ1NHVmhaR2x1WjNNZ0tpOWNiaUFnTFMxaVlYTmxMV2hsWVdScGJtY3RjMmw2WlNBZ0lDQWdJQ0FnSUNBZ09pQjJZWElvTFMxbWIyNTBMWE5wZW1VdFltRnpaU2s3WEc0Z0lDMHRZbUZ6WlMxb1pXRmthVzVuTFdOdmJHOXlJQ0FnSUNBZ0lDQWdJRG9nZG1GeUtDMHRZMjlzYjNJdGMyVmpiMjVrWVhKNUtUdGNibHh1SUNBdktpQk1hVzVyY3lBcUwxeHVJQ0F0TFdKaGMyVXRiR2x1YXkxamIyeHZjaUFnSUNBZ0lDQWdJQ0FnSUNBNklIWmhjaWd0TFdOdmJHOXlMV2hwWjJoc2FXZG9kQ2s3WEc0Z0lDMHRZbUZ6WlMxc2FXNXJMV052Ykc5eUxXaHZkbVZ5SUNBZ0lDQWdJRG9nWTI5c2IzSW9kbUZ5S0MwdFltRnpaUzFzYVc1ckxXTnZiRzl5S1NCemFHRmtaU2d4TUNVcEtUdGNiaUFnTFMxaVlYTmxMV3hwYm1zdFkyOXNiM0l0WVdOMGFYWmxJQ0FnSUNBZ09pQmpiMnh2Y2loMllYSW9MUzFpWVhObExXeHBibXN0WTI5c2IzSXBJSE5vWVdSbEtESXdKU2twTzF4dVhHNGdJQzhxSUV4cGMzUnpJQ292WEc0Z0lDMHRZbUZ6WlMxc2FYTjBMWEpvZVhSb2JTQWdJQ0FnSUNBZ0lDQWdJRG9nZG1GeUtDMHRjbWg1ZEdodEtUdGNibHh1SUNBdktpQk5aV1JwWVNBcUwxeHVJQ0F0TFcxbFpHbGhMV1pwWjNWeVpTMWpiMnh2Y2lBZ0lDQWdJQ0FnSUNBNklIWmhjaWd0TFdOdmJHOXlMV2R5WlhrcE8xeHVYRzRnSUM4cUlFMXBjMk1nS2k5Y2JpQWdMUzFpWVhObExXMXBjMk10YUhJdFltOXlaR1Z5SUNBZ0lDQWdJQ0FnT2lBeGNIZ2djMjlzYVdRN1hHNGdJQzB0WW1GelpTMXRhWE5qTFdoeUxXSnZjbVJsY2kxamIyeHZjaUFnSURvZ2RtRnlLQzB0WkdWbVlYVnNkQzFpYjNKa1pYSXRZMjlzYjNJcE8xeHVYRzRnSUM4cUlGUmxlSFFnS2k5Y2JpQWdMUzFpWVhObExYUmxlSFF0WTI5a1pTMW1iMjUwTFdaaGJXbHNlU0FnT2lCMllYSW9MUzFtYjI1MExXWmhiV2xzZVMxdGIyNXZjM0JoWTJVcE8xeHVJQ0F0TFdKaGMyVXRkR1Y0ZEMxamIyUmxMV1p2Ym5RdGMybDZaU0FnSUNBNklHTmhiR01vTVRNdk1UWWdLaUF4Y21WdEtUdGNiaUFnTFMxaVlYTmxMWFJsZUhRdFkyOWtaUzFtYjI1MExXTnZiRzl5SUNBZ09pQjJZWElvTFMxamIyeHZjaTFrWVhKcmFYTm9MV2R5WlhrcE8xeHVJQ0F0TFdKaGMyVXRkR1Y0ZEMxamIyUmxMV1p2Ym5RdGQyVnBaMmgwSUNBNklEUXdNRHRjYmlBZ0xTMWlZWE5sTFhSbGVIUXRjbWg1ZEdodElDQWdJQ0FnSUNBZ0lDQWdPaUIyWVhJb0xTMXlhSGwwYUcwcE8xeHVJQ0F0TFdKaGMyVXRkR1Y0ZEMxclltUXRZbTl5WkdWeUlDQWdJQ0FnSUNBNklERndlQ0J6YjJ4cFpDQmpiMnh2Y2lnak5ERTJPVGc0SUdGc2NHaGhLRGNsS1NrN1hHNGdJQzB0WW1GelpTMTBaWGgwTFd0aVpDMWliM0prWlhJdFltOTBkRzl0SURvZ00zQjRJSE52Ykdsa0lHTnZiRzl5S0NNME1UWTVPRGdnWVd4d2FHRW9NakFsS1NrN1hHNGdJQzB0WW1GelpTMTBaWGgwTFd0aVpDMWpiMnh2Y2kxaVp5QWdJQ0FnSURvZ2RtRnlLQzB0WTI5c2IzSXRkMmhwZEdVcE8xeHVYRzU5WEc1Y2JseHVMeW9xWEc0Z0tpQkNkWFIwYjI1Y2JpQXFMMXh1WEc0NmNtOXZkQ0I3WEc0Z0lDMHRRblYwZEc5dUxXSnZjbVJsY2kxamIyeHZjaUFnSUNBZ0lEb2dZM1Z5Y21WdWRHTnZiRzl5TzF4dUlDQXRMVUoxZEhSdmJpMWliM0prWlhJdGQybGtkR2dnSUNBZ0lDQTZJREE3WEc0Z0lDMHRRblYwZEc5dUxXTnZiRzl5SUNBZ0lDQWdJQ0FnSUNBZ0lEb2dkSEpoYm5Od1lYSmxiblE3WEc0Z0lDMHRRblYwZEc5dUxXUnBjMkZpYkdWa0xXOXdZV05wZEhrZ0lEb2dNQzQyTzF4dUlDQXRMVUoxZEhSdmJpMW1iMjUwSUNBZ0lDQWdJQ0FnSUNBZ0lDQTZJR2x1YUdWeWFYUTdYRzRnSUMwdFFuVjBkRzl1TFhCaFpHUnBibWNnSUNBZ0lDQWdJQ0FnSURvZ1kyRnNZeWgyWVhJb0xTMXlhSGwwYUcwcElDb2dMakV5TlNrZ1kyRnNZeWgyWVhJb0xTMXlhSGwwYUcwcElDb2dMalVwTzF4dUlDQXRMVUoxZEhSdmJpMXdZV1JrYVc1bkxYTnVkV2NnSUNBZ0lDQTZJR05oYkdNb2RtRnlLQzB0Y21oNWRHaHRLU0FxSUM0eU5TazdYRzRnSUMwdFFuVjBkRzl1TFhCaFpHUnBibWN0YzIxaGJHd2dJQ0FnSURvZ1kyRnNZeWgyWVhJb0xTMXlhSGwwYUcwcElDb2dMakV5TlNrZ1kyRnNZeWgyWVhJb0xTMXlhSGwwYUcwcElDb2dMalVwTzF4dUlDQXRMVUoxZEhSdmJpMWpiMnh2Y2kxMFpYaDBMV2x1ZG1WeWRDQTZJSFpoY2lndExXTnZiRzl5TFhkb2FYUmxLVHRjYmlBZ0xTMUNkWFIwYjI0dFkyOXNiM0l0WkdWbVlYVnNkQ0FnSUNBZ09pQmpiMnh2Y2loMllYSW9MUzFqYjJ4dmNpMXpaV052Ym1SaGNua3BJSFJwYm5Rb09EVWxLU2s3WEc0Z0lDMHRRblYwZEc5dUxXTnZiRzl5TFhCeWFXMWhjbmtnSUNBZ0lEb2dkbUZ5S0MwdFkyOXNiM0l0Y0hKcGJXRnllU2s3WEc0Z0lDMHRRblYwZEc5dUxXTnZiRzl5TFhObFkyOXVaR0Z5ZVNBZ0lEb2dkbUZ5S0MwdFkyOXNiM0l0YzJWamIyNWtZWEo1S1R0Y2JpQWdMUzFDZFhSMGIyNHRZMjlzYjNJdGFHbG5hR3hwWjJoMElDQWdPaUIyWVhJb0xTMWpiMnh2Y2kxb2FXZG9iR2xuYUhRcE8xeHVJQ0F0TFVKMWRIUnZiaTFqYjJ4dmNpMXpkV05qWlhOeklDQWdJQ0E2SUhaaGNpZ3RMV052Ykc5eUxYTjFZMk5sYzNNcE8xeHVJQ0F0TFVKMWRIUnZiaTFqYjJ4dmNpMTFibk4xY21VZ0lDQWdJQ0E2SUhaaGNpZ3RMV052Ykc5eUxYVnVjM1Z5WlNrN1hHNGdJQzB0UW5WMGRHOXVMV052Ykc5eUxXNWxkWFJ5WVd3Z0lDQWdJRG9nWTI5c2IzSW9kbUZ5S0MwdFkyOXNiM0l0YzJWamIyNWtZWEo1S1NCMGFXNTBLRFV3SlNrcE8xeHVJQ0F0TFVKMWRIUnZiaTFqYjJ4dmNpMTNZWEp1YVc1bklDQWdJQ0E2SUhaaGNpZ3RMV052Ykc5eUxYZGhjbTVwYm1jcE8xeHVJQ0F0TFVKMWRIUnZiaTFqYjJ4dmNpMWtZVzVuWlhJZ0lDQWdJQ0E2SUhaaGNpZ3RMV052Ykc5eUxXUmhibWRsY2lrN1hHNGdJQzB0UW5WMGRHOXVMWFJ5WVc1emFYUnBiMjRnSUNBZ0lDQWdJRG9nWVd4c0lDNHlOWE1nZG1GeUtDMHRkSEpoYm5OcGRHbHZiaTFsWVhObExXOTFkQzFqYVhKaktUdGNibjFjYmx4dVhHNHZLaXBjYmlBcUlFSjFkSFJ2YmlCSGNtOTFjRnh1SUNvdlhHNWNianB5YjI5MElIdGNiaUFnTFMxQ2RYUjBiMjVIY205MWNDMW1iMjUwTFhOcGVtVWdJQ0FnSUNBZ0lDQWdJRG9nTVhKbGJUdGNiaUFnTFMxQ2RYUjBiMjVIY205MWNDMWlkWFIwYjI0dFltOXlaR1Z5TFhkcFpIUm9JRG9nTUR0Y2JuMWNibHh1WEc0dktpcGNiaUFxSUVSeWIzQmtiM2R1WEc0Z0tpOWNibHh1T25KdmIzUWdlMXh1SUNBdExVUnliM0JrYjNkdUxYSm9lWFJvYlNBZ0lDQWdJQ0FnSUNBZ0lDQWdPaUIyWVhJb0xTMXlhSGwwYUcwcE8xeHVJQ0F0TFVSeWIzQmtiM2R1TFhSeVlXNXphWFJwYjI0Z0lDQWdJQ0FnSUNBZ09pQmhiR3dnTGpKeklIWmhjaWd0TFhSeVlXNXphWFJwYjI0dFpXRnpaUzF2ZFhRdFltRmpheWs3WEc0Z0lDMHRSSEp2Y0dSdmQyNHRlaTFwYm1SbGVDQWdJQ0FnSUNBZ0lDQWdJQ0E2SUhaaGNpZ3RMWG90YzJOaGJHVXRNU2s3WEc0Z0lDMHRSSEp2Y0dSdmQyNHRZV04wYVhabExYb3RhVzVrWlhnZ0lDQWdJQ0E2SUhaaGNpZ3RMWG90YzJOaGJHVXRNVEFwTzF4dUlDQXRMVVJ5YjNCa2IzZHVMV052Ym5SbGJuUXRZMjlzYjNJdFltY2dJQ0FnT2lCMllYSW9MUzFqYjJ4dmNpMTNhR2wwWlNrN1hHNGdJQzB0UkhKdmNHUnZkMjR0WTI5dWRHVnVkQzFpYjNKa1pYSWdJQ0FnSUNBNklIWmhjaWd0TFdSbFptRjFiSFF0WW05eVpHVnlLVHRjYmlBZ0xTMUVjbTl3Wkc5M2JpMWpiMjUwWlc1MExYb3RhVzVrWlhnZ0lDQWdJRG9nZG1GeUtDMHRlaTF6WTJGc1pTMDRLVHRjYmlBZ0xTMUVjbTl3Wkc5M2JpMTBhWFJzWlMxemFYcGxJQ0FnSUNBZ0lDQWdJRG9nWTJGc1l5Z3hOQzh4TmlBcUlERnlaVzBwTzF4dUlDQXRMVVJ5YjNCa2IzZHVMWFJwZEd4bExXTnZiRzl5SUNBZ0lDQWdJQ0FnT2lCamIyeHZjaWgyWVhJb0xTMWpiMnh2Y2kxelpXTnZibVJoY25rcElIUnBiblFvTkRBbEtTazdYRzRnSUMwdFJISnZjR1J2ZDI0dGRHbDBiR1V0WTI5c2IzSXRZbWNnSUNBZ0lDQTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQXRMVVJ5YjNCa2IzZHVMV2wwWlcwdFkyOXNiM0lnSUNBZ0lDQWdJQ0FnT2lCMllYSW9MUzFqYjJ4dmNpMW9hV2RvYkdsbmFIUXBPMXh1SUNBdExVUnliM0JrYjNkdUxXbDBaVzB0YUc5MlpYSXRZMjlzYjNJZ0lDQWdPaUIyWVhJb0xTMUVjbTl3Wkc5M2JpMWpiMjUwWlc1MExXTnZiRzl5TFdKbktUdGNiaUFnTFMxRWNtOXdaRzkzYmkxcGRHVnRMV2h2ZG1WeUxXTnZiRzl5TFdKbklEb2dkbUZ5S0MwdFJISnZjR1J2ZDI0dGFYUmxiUzFqYjJ4dmNpazdYRzRnSUMwdFJISnZjR1J2ZDI0dGFYUmxiUzEwY21GdWMybDBhVzl1SUNBZ0lDQTZJR0ZzYkNBdU1uTWdaV0Z6WlMxdmRYUTdYRzU5WEc1Y2JseHVMeW9xWEc0Z0tpQklaV0ZrWlhKY2JpQXFMMXh1WEc0NmNtOXZkQ0I3WEc0Z0lDMHRTR1ZoWkdWeUxXSmhZMnRuY205MWJtUWdPaUIyWVhJb0xTMWpiMnh2Y2kxd2NtbHRZWEo1S1R0Y2JpQWdMUzFJWldGa1pYSXRjbWg1ZEdodElDQWdJQ0E2SUhaaGNpZ3RMWEpvZVhSb2JTazdYRzRnSUMwdFNHVmhaR1Z5TFhvdGFXNWtaWGdnSUNBZ09pQjJZWElvTFMxNkxYTmpZV3hsTFRrcE8xeHVmVnh1WEc1Y2JpOHFLbHh1SUNvZ1NHVmhaR2x1WjNOY2JpQXFMMXh1WEc0NmNtOXZkQ0I3WEc0Z0lDMHRTR1ZoWkdsdVp5MW1iMjUwTFdaaGJXbHNlU0E2SUhaaGNpZ3RMV1p2Ym5RdFptRnRhV3g1TFdKaGMyVXBPMXh1SUNBdExVaGxZV1JwYm1jdFptOXVkQzEzWldsbmFIUWdPaUEyTURBN1hHNGdJQzB0U0dWaFpHbHVaeTF6YVhwbExXZ3hJQ0FnSUNBNklETTJjSGc3WEc0Z0lDMHRTR1ZoWkdsdVp5MXphWHBsTFdneUlDQWdJQ0E2SURJNGNIZzdYRzRnSUMwdFNHVmhaR2x1WnkxemFYcGxMV2d6SUNBZ0lDQTZJREkwY0hnN1hHNGdJQzB0U0dWaFpHbHVaeTF6YVhwbExXZzBJQ0FnSUNBNklESXdjSGc3WEc0Z0lDMHRTR1ZoWkdsdVp5MXphWHBsTFdnMUlDQWdJQ0E2SURFNGNIZzdYRzRnSUMwdFNHVmhaR2x1WnkxemFYcGxMV2cySUNBZ0lDQTZJREUyY0hnN1hHNTlYRzVjYmx4dUx5b3FYRzRnS2lCSlkyOXVYRzRnS2k5Y2JseHVPbkp2YjNRZ2UxeHVJQ0F0TFVsamIyNHRjbWg1ZEdodElDQWdJQ0FnSUNBZ0lEb2dkbUZ5S0MwdGNtaDVkR2h0S1R0Y2JpQWdMUzFKWTI5dUxYUnlZVzV6YVhScGIyNHRaV0Z6WlNBNklIWmhjaWd0TFhSeVlXNXphWFJwYjI0dFpXRnpaUzF2ZFhRdFltRmpheWs3WEc0Z0lDMHRTV052YmkxMGNtRnVjMmwwYVc5dUlDQWdJQ0FnT2lBdU1qVnpJR0ZzYkNCMllYSW9MUzFKWTI5dUxYUnlZVzV6YVhScGIyNHRaV0Z6WlNrN1hHNTlYRzVjYmk4cUtseHVJQ29nVEdsdWEzTmNiaUFxTDF4dVhHNDZjbTl2ZENCN1hHNGdJQzB0VEdsdWF5MWpiMnh2Y2lBZ0lDQWdJQ0FnSUNBZ09pQjJZWElvTFMxaVlYTmxMV3hwYm1zdFkyOXNiM0lwTzF4dUlDQXRMVXhwYm1zdFkyOXNiM0l0YUc5MlpYSWdJQ0FnSURvZ1kyOXNiM0lvZG1GeUtDMHRUR2x1YXkxamIyeHZjaWtnYzJoaFpHVW9NVEFsS1NrN1hHNGdJQzB0VEdsdWF5MWpiMnh2Y2kxaFkzUnBkbVVnSUNBZ09pQmpiMnh2Y2loMllYSW9MUzFNYVc1ckxXTnZiRzl5S1NCemFHRmtaU2d5TUNVcEtUdGNiaUFnTFMxTWFXNXJMV052Ykc5eUxXbHVkbVZ5ZENBZ0lDQTZJSFpoY2lndExXTnZiRzl5TFhkb2FYUmxLVHRjYmlBZ0xTMU1hVzVyTFdOdmJHOXlMVzVsZFhSeVlXd2dJQ0E2SUhaaGNpZ3RMV052Ykc5eUxXNWxkWFJ5WVd3cE8xeHVJQ0F0TFV4cGJtc3RZMjlzYjNJdFpHRnVaMlZ5SUNBZ0lEb2dkbUZ5S0MwdFkyOXNiM0l0WkdGdVoyVnlLVHRjYmlBZ0xTMU1hVzVyTFdOdmJHOXlMWGRoY201cGJtY2dJQ0E2SUhaaGNpZ3RMV052Ykc5eUxYZGhjbTVwYm1jcE8xeHVJQ0F0TFV4cGJtc3RZMjlzYjNJdGRXNXpkWEpsSUNBZ0lEb2dkbUZ5S0MwdFkyOXNiM0l0ZFc1emRYSmxLVHRjYmlBZ0xTMU1hVzVyTFdOdmJHOXlMWE4xWTJObGMzTWdJQ0E2SUhaaGNpZ3RMV052Ykc5eUxYTjFZMk5sYzNNcE8xeHVJQ0F0TFV4cGJtc3RZMjlzYjNJdGFHbG5hR3hwWjJoMElEb2dkbUZ5S0MwdFkyOXNiM0l0YUdsbmFHeHBaMmgwS1R0Y2JuMWNibHh1THlvcVhHNGdLaUJFYVdabVpYSmxibU5sWEc0Z0tpOWNibHh1T25KdmIzUWdlMXh1SUNBdExXUnBabVpsY21WdVkyVXRZMjlzYjNJdFlXUmthWFJwYjI0NklHTnZiRzl5S0haaGNpZ3RMV052Ykc5eUxYTjFZMk5sYzNNcElIUnBiblFvTmpjbEtTazdYRzRnSUMwdFpHbG1abVZ5Wlc1alpTMWpiMnh2Y2kxa1pXeGxkR2x2YmpvZ1kyOXNiM0lvZG1GeUtDMHRZMjlzYjNJdFpHRnVaMlZ5S1NCMGFXNTBLRGcwSlNrcE8xeHVmVnh1WEc0dktpcGNiaUFxSUV4dloyOU1iMkZrWlhKY2JpQXFMMXh1WEc0NmNtOXZkQ0I3WEc0Z0lDMHRURzluYjB4dllXUmxjaTFqYjJ4dmNpMXNiMmR2SUNBZ0lDQWdJQ0E2SUhaaGNpZ3RMV052Ykc5eUxYZG9hWFJsS1R0Y2JpQWdMUzFNYjJkdlRHOWhaR1Z5TFdOdmJHOXlMV3h2WjI4dGFXNTJaWEowSURvZ2RtRnlLQzB0WTI5c2IzSXRjSEpwYldGeWVTazdYRzRnSUMwdFRHOW5iMHh2WVdSbGNpMXlhSGwwYUcwZ0lDQWdJQ0FnSUNBZ0lDQTZJSFpoY2lndExYSm9lWFJvYlNrN1hHNGdJQzB0VEc5bmIweHZZV1JsY2kxMGNtRnVjMmwwYVc5dUxXVmhjMlVnSUNBNklIWmhjaWd0TFhSeVlXNXphWFJwYjI0dFpXRnpaUzF2ZFhRdFltRmpheWs3WEc1OVhHNWNiaThxS2x4dUlDb2dUVzlrWVd4Y2JpQXFMMXh1WEc0NmNtOXZkQ0I3WEc0Z0lDMHRUVzlrWVd3dGNtaDVkR2h0SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ09pQXhMalZ5WlcwN1hHNGdJQzB0VFc5a1lXd3RZMjlzYjNJdFltY2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdPaUJqYjJ4dmNpaDJZWElvTFMxamIyeHZjaTFpWnlrZ1lXeHdhR0VvTGprMUtTazdYRzRnSUMwdFRXOWtZV3d0ZEhKaGJuTnBkR2x2YmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnT2lCaGJHd2dMakUxY3lCc2FXNWxZWEk3WEc0Z0lDMHRUVzlrWVd3dFltOXlaR1Z5SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ09pQXhjSGdnYzI5c2FXUWdZMjlzYjNJb2RtRnlLQzB0WTI5c2IzSXRjMlZqYjI1a1lYSjVLU0JoYkhCb1lTZ3hNaVVwS1R0Y2JpQWdMUzFOYjJSaGJDMWthV0ZzYjJjdGRISmhibk5wZEdsdmJpQWdJQ0FnSUNBZ0lDQTZJR0ZzYkNBdU1qVnpJR04xWW1sakxXSmxlbWxsY2lndU1UYzFMQ0F1T0RnMUxDQXVNekl3TENBeExqRXBPMXh1SUNBdExVMXZaR0ZzTFdScFlXeHZaeTFpYjNKa1pYSXRZbTkwZEc5dExYZHBaSFJvSURvZ01uQjRPMXh1SUNBdExVMXZaR0ZzTFdScFlXeHZaeTFqYjJ4dmNpMWlaeUFnSUNBZ0lDQWdJQ0FnSURvZ1kyOXNiM0lvZG1GeUtDMHRZMjlzYjNJdFltY3BJSFJwYm5Rb05qQWxLU2s3WEc0Z0lDMHRUVzlrWVd3dGFHVmhaR1Z5TFdOdmJHOXlMV0puSUNBZ0lDQWdJQ0FnSUNBZ09pQjJZWElvTFMxamIyeHZjaTEzYUdsMFpTazdYRzRnSUMwdFRXOWtZV3d0ZEdsMGJHVXRabTl1ZEMxemFYcGxJQ0FnSUNBZ0lDQWdJQ0FnT2lCallXeGpLREl5THpFMklDb2dNWEpsYlNrN1hHNGdJQzB0VFc5a1lXd3RZMnh2YzJVdGRISmhibk5wZEdsdmJpQWdJQ0FnSUNBZ0lDQWdPaUJoYkd3Z0xqSTFjeUJsWVhObExXOTFkRHRjYmlBZ0xTMU5iMlJoYkMxamJHOXpaUzFqYjJ4dmNpMWlaeTFvYjNabGNpQWdJQ0FnSUNBNklHTnZiRzl5S0haaGNpZ3RMV052Ykc5eUxYTmxZMjl1WkdGeWVTa2dZV3h3YUdFb05TVXBLVHRjYmlBZ0xTMU5iMlJoYkMxamJHOXpaUzFqYjJ4dmNpMWlaeTFoWTNScGRtVWdJQ0FnSUNBNklHTnZiRzl5S0haaGNpZ3RMV052Ykc5eUxYTmxZMjl1WkdGeWVTa2dZV3h3YUdFb01UQWxLU2s3WEc0Z0lDMHRUVzlrWVd3dGVpMXBibVJsZUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ09pQjJZWElvTFMxNkxYTmpZV3hsTFRFd0tUdGNiaUFnTFMxTmIyUmhiQzFvWldGa1pYSXRlaTFwYm1SbGVDQWdJQ0FnSUNBZ0lDQWdJQ0E2SUhaaGNpZ3RMWG90YzJOaGJHVXRNU2s3WEc1OVhHNWNiaThxS2x4dUlDb2dVSEp2WjNKbGMzTmlZWEpjYmlBcUwxeHVYRzQ2Y205dmRDQjdYRzRnSUMwdFVISnZaM0psYzNOaVlYSXRjbWg1ZEdodElDQWdJQ0FnSUNBZ0lDQTZJSFpoY2lndExYSm9lWFJvYlNrN1hHNGdJQzB0VUhKdlozSmxjM05pWVhJdGFHbG5hR3hwWjJoMElDQWdJQ0FnSUNBNklIWmhjaWd0TFdOdmJHOXlMV2hwWjJoc2FXZG9kQ2s3WEc0Z0lDMHRVSEp2WjNKbGMzTmlZWEl0YzNWalkyVnpjeUFnSUNBZ0lDQWdJQ0E2SUhaaGNpZ3RMV052Ykc5eUxYTjFZMk5sYzNNcE8xeHVJQ0F0TFZCeWIyZHlaWE56WW1GeUxYVnVjM1Z5WlNBZ0lDQWdJQ0FnSUNBZ09pQjJZWElvTFMxamIyeHZjaTExYm5OMWNtVXBPMXh1SUNBdExWQnliMmR5WlhOelltRnlMVzVsZFhSeVlXd2dJQ0FnSUNBZ0lDQWdPaUIyWVhJb0xTMWpiMnh2Y2kxdVpYVjBjbUZzS1R0Y2JpQWdMUzFRY205bmNtVnpjMkpoY2kxM1lYSnVhVzVuSUNBZ0lDQWdJQ0FnSURvZ2RtRnlLQzB0WTI5c2IzSXRkMkZ5Ym1sdVp5azdYRzRnSUMwdFVISnZaM0psYzNOaVlYSXRaR0Z1WjJWeUlDQWdJQ0FnSUNBZ0lDQTZJSFpoY2lndExXTnZiRzl5TFdSaGJtZGxjaWs3WEc0Z0lDMHRVSEp2WjNKbGMzTmlZWEl0YVhSbGJTMTZMV2x1WkdWNElDQWdJQ0E2SUhaaGNpZ3RMWG90YzJOaGJHVXRNU2s3WEc0Z0lDMHRVSEp2WjNKbGMzTmlZWEl0WVhCd2NtOTJaV1F0ZWkxcGJtUmxlQ0E2SUhaaGNpZ3RMWG90YzJOaGJHVXRNaWs3WEc1OVhHNWNibHh1THlvcVhHNGdLaUJVYjJkbmJHVmNiaUFxTDF4dVhHNDZjbTl2ZENCN1hHNGdJQzB0Vkc5bloyeGxMWEpvZVhSb2JTQWdJQ0FnSUNBZ0lDQWdJQ0FnT2lCMllYSW9MUzF5YUhsMGFHMHBPMXh1SUNBdExWUnZaMmRzWlMxamIyeHZjaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lEb2dZM1Z5Y21WdWRFTnZiRzl5TzF4dUlDQXRMVlJ2WjJkc1pTMWpiMnh2Y2kxaFkzUnBkbVVnSUNBZ0lDQWdJRG9nZG1GeUtDMHRZMjlzYjNJdGQyaHBkR1VwTzF4dUlDQXRMVlJ2WjJkc1pTMWpiMnh2Y2kxaFkzUnBkbVV0YVc1MlpYSjBJRG9nZG1GeUtDMHRZMjlzYjNJdFlteGhZMnNwTzF4dUlDQXRMVlJ2WjJkc1pTMWpiMnh2Y2kxaVp5MWhZM1JwZG1VZ0lDQWdJRG9nZG1GeUtDMHRWRzluWjJ4bExXTnZiRzl5S1R0Y2JpQWdMUzFVYjJkbmJHVXRkSEpoYm5OcGRHbHZiaUFnSUNBZ0lDQWdJQ0E2SUdGc2JDQXVNalZ6SUhaaGNpZ3RMWFJ5WVc1emFYUnBiMjR0WldGelpTMXZkWFF0WTJseVl5azdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1ZISmhibk5WYm1sMFhHNGdLaTljYmx4dU9uSnZiM1FnZTF4dUlDQXRMVlJ5WVc1elZXNXBkQzFpYjNKa1pYSXRZMjlzYjNJZ0lDQWdJQ0FnSUNBZ0lEb2dkbUZ5S0MwdFpHVm1ZWFZzZEMxaWIzSmtaWEl0WTI5c2IzSXBPMXh1SUNBdExWUnlZVzV6Vlc1cGRDMWpiMnh2Y2kxa1lXNW5aWElnSUNBZ0lDQWdJQ0FnSURvZ2RtRnlLQzB0WTI5c2IzSXRaR0Z1WjJWeUtUdGNiaUFnTFMxVWNtRnVjMVZ1YVhRdFkyOXNiM0l0YUdsbmFHeHBaMmgwSUNBZ0lDQWdJQ0E2SUhaaGNpZ3RMV052Ykc5eUxXaHBaMmhzYVdkb2RDazdYRzRnSUMwdFZISmhibk5WYm1sMExXTnZiRzl5TFc1bGRYUnlZV3dnSUNBZ0lDQWdJQ0FnT2lCMllYSW9MUzFqYjJ4dmNpMXVaWFYwY21Gc0tUdGNiaUFnTFMxVWNtRnVjMVZ1YVhRdFkyOXNiM0l0YzNWalkyVnpjeUFnSUNBZ0lDQWdJQ0E2SUhaaGNpZ3RMV052Ykc5eUxYTjFZMk5sYzNNcE8xeHVJQ0F0TFZSeVlXNXpWVzVwZEMxamIyeHZjaTExYm5OMWNtVWdJQ0FnSUNBZ0lDQWdJRG9nZG1GeUtDMHRZMjlzYjNJdGRXNXpkWEpsS1R0Y2JpQWdMUzFVY21GdWMxVnVhWFF0WTI5c2IzSXRkMkZ5Ym1sdVp5QWdJQ0FnSUNBZ0lDQTZJSFpoY2lndExXTnZiRzl5TFhkaGNtNXBibWNwTzF4dUlDQXRMVlJ5WVc1elZXNXBkQzFvWldGa1pYSXRabTl2ZEdWeUxXTnZiRzl5TFdKbklEb2dkbUZ5S0MwdFkyOXNiM0l0ZDJocGRHVXBPMXh1SUNBdExWUnlZVzV6Vlc1cGRDMW9aV0ZrYVc1bkxXWnZiblF0YzJsNlpTQWdJQ0FnSURvZ01YSmxiVHRjYmlBZ0xTMVVjbUZ1YzFWdWFYUXRhR1ZoWkdWeUxYb3RhVzVrWlhnZ0lDQWdJQ0FnSUNBNklIWmhjaWd0TFhvdGMyTmhiR1V0TWlrN1hHNGdJQzB0VkhKaGJuTlZibWwwTFcxbGRHRkVZWFJoUW5WMGRHOXVMWE5wZW1VZ0lDQWdPaUJqWVd4aktERXlMekUySUNvZ01YSmxiU2s3WEc0Z0lDMHRWSEpoYm5OVmJtbDBMWEpvZVhSb2JTQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ09pQjJZWElvTFMxeWFIbDBhRzBwTzF4dUlDQXRMVlJ5WVc1elZXNXBkQzEwWlhoMExXWnZiblF0Wm1GdGFXeDVJQ0FnSUNBZ0lEb2dkbUZ5S0MwdFptOXVkQzFtWVcxcGJIa3RZbUZ6WlNrN1hHNGdJQzB0VkhKaGJuTlZibWwwTFhSbGVIUXRabTl1ZEMxemFYcGxJQ0FnSUNBZ0lDQWdPaUIyWVhJb0xTMW1iMjUwTFhOcGVtVXRZbUZ6WlNrN1hHNGdJQzB0VkhKaGJuTlZibWwwTFhSbGVIUXRiR2x1WlMxb1pXbG5hSFFnSUNBZ0lDQWdPaUIyWVhJb0xTMWtaV1poZFd4MExXeHBibVV0YUdWcFoyaDBLVHRjYmlBZ0xTMVVjbUZ1YzFWdWFYUXRkR1Y0ZEMxamIyeHZjaUFnSUNBZ0lDQWdJQ0FnSUNBNklIWmhjaWd0TFdOdmJHOXlMV0poYzJVdFptOXVkQ2s3WEc0Z0lDMHRWSEpoYm5OVmJtbDBMWFJ5WVc1emFYUnBiMjR0WldGelpTQWdJQ0FnSUNBZ09pQjJZWElvTFMxMGNtRnVjMmwwYVc5dUxXVmhjMlV0YjNWMExXTnBjbU1wTzF4dUlDQXRMVlJ5WVc1elZXNXBkQzEwY21GdWMybDBhVzl1SUNBZ0lDQWdJQ0FnSUNBZ0lEb2dZV3hzSUM0eU5YTWdkbUZ5S0MwdFZISmhibk5WYm1sMExYUnlZVzV6YVhScGIyNHRaV0Z6WlNrN1hHNGdJQzB0VkhKaGJuTlZibWwwTFdadlkzVnpMV052Ykc5eUxXSm5JQ0FnSUNBZ0lDQWdPaUIyWVhJb0xTMWpiMnh2Y2kxM2FHbDBaU2s3WEc0Z0lDMHRWSEpoYm5OVmJtbDBMV2h2ZG1WeUxXTnZiRzl5TFdKbklDQWdJQ0FnSUNBZ09pQjJZWElvTFMxamIyeHZjaTFpWnkxc2FXZG9kR1Z5S1R0Y2JpQWdMUzFVY21GdWMxVnVhWFF0YzNSaGRIVnpMWG90YVc1a1pYZ2dJQ0FnSUNBZ0lDQTZJSFpoY2lndExYb3RjMk5oYkdVdE1pazdYRzRnSUMwdFZISmhibk5WYm1sMExYTjBZWFIxY3kxaVpXWnZjbVV0ZWkxcGJtUmxlQ0FnT2lCMllYSW9MUzE2TFhOallXeGxMVE1wTzF4dWZWeHVYRzR2S2lwY2JpQXFYRzRnS2lCV2FXVjNjMXh1SUNwY2JpQXFMMXh1WEc0dktpcGNiaUFxSUVWa2FYUnZjbHh1SUNvdlhHNWNianB5YjI5MElIdGNiaUFnTFMxRlpHbDBiM0l0Y21oNWRHaHRJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ09pQjJZWElvTFMxeWFIbDBhRzBwTzF4dUlDQXRMVVZrYVhSdmNpMTBjbUZ1YzJsMGFXOXVMV1ZoYzJVZ0lDQWdJQ0E2SUhaaGNpZ3RMWFJ5WVc1emFYUnBiMjR0WldGelpTMXZkWFF0WW1GamF5azdYRzRnSUMwdFJXUnBkRzl5TFdOdmJHOXlMWE4wWVhSMWN5MWlaeUFnSUNBZ0lEb2dZMjlzYjNJb2RtRnlLQzB0WTI5c2IzSXRjMlZqYjI1a1lYSjVLU0IwYVc1MEtEZ3lKU2twTzF4dUlDQXRMVVZrYVhSdmNpMWpiMnh2Y2kxMGNtRnVjMnhoZEdsdmJpMWlaeUE2SUhaaGNpZ3RMV052Ykc5eUxXSm5LVHRjYmlBZ0xTMUZaR2wwYjNJdGJHOWhaR1Z5TFhvdGFXNWtaWGdnSUNBZ0lDQWdPaUIyWVhJb0xTMTZMWE5qWVd4bExUa3BPMXh1ZlZ4dUlsMTkgKi8iLCIvKipcbiAqIENvbnRhaW4gZmxvYXRzXG4gKlxuICogTWFrZSBhbiBlbGVtZW50IGV4cGFuZCB0byBjb250YWluIGZsb2F0ZWQgY2hpbGRyZW4uXG4gKiBVc2VzIHBzZXVkby1lbGVtZW50cyAobWljcm8gY2xlYXJmaXgpLlxuICpcbiAqIDEuIFRoZSBzcGFjZSBjb250ZW50IGlzIG9uZSB3YXkgdG8gYXZvaWQgYW4gT3BlcmEgYnVnIHdoZW4gdGhlXG4gKiAgICBgY29udGVudGVkaXRhYmxlYCBhdHRyaWJ1dGUgaXMgaW5jbHVkZWQgYW55d2hlcmUgZWxzZSBpbiB0aGUgZG9jdW1lbnQuXG4gKiAgICBPdGhlcndpc2UgaXQgY2F1c2VzIHNwYWNlIHRvIGFwcGVhciBhdCB0aGUgdG9wIGFuZCBib3R0b20gb2YgdGhlXG4gKiAgICBlbGVtZW50LlxuICogMi4gVGhlIHVzZSBvZiBgdGFibGVgIHJhdGhlciB0aGFuIGBibG9ja2AgaXMgb25seSBuZWNlc3NhcnkgaWYgdXNpbmdcbiAqICAgIGA6YmVmb3JlYCB0byBjb250YWluIHRoZSB0b3AtbWFyZ2lucyBvZiBjaGlsZCBlbGVtZW50cy5cbiAqL1xuXG4udS1jZjpiZWZvcmUsXG4udS1jZjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiOyAvKiAxICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAyICovXG59XG5cbi51LWNmOmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi8qKlxuICogTmV3IGJsb2NrIGZvcm1hdHRpbmcgY29udGV4dFxuICpcbiAqIFRoaXMgYWZmb3JkcyBzb21lIHVzZWZ1bCBwcm9wZXJ0aWVzIHRvIHRoZSBlbGVtZW50LiBJdCB3b24ndCB3cmFwIHVuZGVyXG4gKiBmbG9hdHMuIFdpbGwgYWxzbyBjb250YWluIGFueSBmbG9hdGVkIGNoaWxkcmVuLlxuXG4gKiBOLkIuIFRoaXMgd2lsbCBjbGlwIG92ZXJmbG93LiBVc2UgdGhlIGFsdGVybmF0aXZlIG1ldGhvZCBiZWxvdyBpZiB0aGlzIGlzXG4gKiBwcm9ibGVtYXRpYy5cbiAqL1xuXG4udS1uYmZjIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIE5ldyBibG9jayBmb3JtYXR0aW5nIGNvbnRleHQgKGFsdGVybmF0aXZlKVxuICpcbiAqIEFsdGVybmF0aXZlIG1ldGhvZCB3aGVuIG92ZXJmbG93IG11c3Qgbm90IGJlIGNsaXBwZWQuXG4gKlxuICogMS4gQ3JlYXRlIGEgbmV3IGJsb2NrIGZvcm1hdHRpbmcgY29udGV4dCAoTkJGQykuXG4gKiAyLiBBdm9pZCBzaHJpbmstd3JhcCBiZWhhdmlvdXIgb2YgdGFibGUtY2VsbC5cbiAqXG4gKiBOLkIuIFRoaXMgYnJlYWtzIGRvd24gaW4gc29tZSBicm93c2VycyB3aGVuIGVsZW1lbnRzIHdpdGhpbiB0aGlzIGVsZW1lbnRcbiAqIGV4Y2VlZCBpdHMgd2lkdGguXG4gKi9cblxuLnUtbmJmY0FsdCB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGwgIWltcG9ydGFudDsgLyogMSAqL1xuICB3aWR0aDogMTAwMDBweCAhaW1wb3J0YW50OyAvKiAyICovXG59XG5cbi8qKlxuICogRmxvYXRzXG4gKi9cblxuLnUtZmxvYXRMZWZ0IHtcbiAgZmxvYXQ6IGxlZnQgIWltcG9ydGFudDtcbn1cblxuLnUtZmxvYXRSaWdodCB7XG4gIGZsb2F0OiByaWdodCAhaW1wb3J0YW50O1xufVxuIiwiQGltcG9ydCAnc3VpdGNzcy11dGlscy1sYXlvdXQnO1xuXG5AbWVkaWEgKC0tc20tdmlld3BvcnQpIHtcblxuICAudS1zbS1mbG9hdE5vbmUge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGZsb2F0OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cblxufVxuIiwiOnJvb3Qge1xuICAtLXUtYmctdHJhbnNpdGlvbjogYWxsIC4yNXMgZWFzZS1vdXQ7XG4gIC0tdS1iZy1ib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAtLXUtYmctYm9yZGVyLWJvdHRvbS13aWR0aDogMnB4O1xuICAtLXUtYmctY29sb3I6ICNmMGYyZjQ7XG4gIC0tdS1iZy1jb2xvci1saWdodGVzdDogY29sb3IodmFyKC0tY29sb3ItYmcpIHRpbnQoOTklKSk7XG4gIC0tdS1iZy1jb2xvci1saWdodGVyOiBjb2xvcih2YXIoLS1jb2xvci1iZykgdGludCg5MyUpKTtcbiAgLS11LWJnLWNvbG9yLWxpZ2h0OiBjb2xvcih2YXIoLS1jb2xvci1iZykgdGludCg0NiUpKTtcbiAgLS11LWJnLWNvbG9yLWRhcms6IGNvbG9yKHZhcigtLWNvbG9yLWJnKSBzaGFkZSgzJSkpO1xuICAtLXUtYmctY29sb3ItZGFya2VyOiBjb2xvcih2YXIoLS1jb2xvci1iZykgc2hhZGUoNiUpKTtcbiAgLS11LWJnLWNvbG9yLWRhcmtlc3Q6IGNvbG9yKHZhcigtLWNvbG9yLWJnKSBzaGFkZSg5JSkpO1xuICAtLXUtYmctY29sb3ItcHJpbWFyeTogI2RjZWNmNztcbiAgLS11LWJnLWNvbG9yLXNlY29uZGFyeTogI2Q5ZTFlNztcbiAgLS11LWJnLWNvbG9yLW5ldXRyYWw6IHZhcigtLXUtYmctY29sb3IpO1xuICAtLXUtYmctY29sb3ItZGFuZ2VyOiBjb2xvcigjZTA1NzViIHRpbnQoODAlKSk7XG4gIC0tdS1iZy1jb2xvci13YXJuaW5nOiBjb2xvcigjZTM4MjRlIHRpbnQoODAlKSk7XG4gIC0tdS1iZy1jb2xvci11bnN1cmU6IGNvbG9yKCNlMGMzNTAgdGludCg5MCUpKTtcbiAgLS11LWJnLWNvbG9yLXN1Y2Nlc3M6IGNvbG9yKCM3MGE5OGIgdGludCg4MCUpKTtcbiAgLS11LWJnLWNvbG9yLWhpZ2hsaWdodDogY29sb3IoIzRlOWZkZCB0aW50KDgwJSkpO1xufVxuXG4udS1iZ0ZhaW50IHtcbiAgb3BhY2l0eTogLjk7XG59XG5cbi51LWJnSGlnaCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXUtYmctY29sb3ItbGlnaHQpO1xufVxuXG4udS1iZ0hpZ2hlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXUtYmctY29sb3ItbGlnaHRlcik7XG59XG5cbi51LWJnSGlnaGVzdCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXUtYmctY29sb3ItbGlnaHRlc3QpO1xufVxuXG4udS1iZ0xvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXUtYmctY29sb3ItZGFyayk7XG59XG5cbi51LWJnTG93ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS11LWJnLWNvbG9yLWRhcmtlcik7XG59XG5cbi51LWJnTG93ZXN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdS1iZy1jb2xvci1kYXJrZXN0KTtcbn1cblxuLnUtYmdQb3Age1xuICBib3JkZXI6IHZhcigtLXUtYmctYm9yZGVyKTtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogdmFyKC0tdS1iZy1ib3JkZXItYm90dG9tLXdpZHRoKTtcbn1cblxuLnUtYmdOZXV0cmFsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdS1iZy1jb2xvci1uZXV0cmFsKTtcbn1cblxuLnUtYmdQcmltYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdS1iZy1jb2xvci1wcmltYXJ5KTtcbn1cblxuLnUtYmdTZWNvbmRhcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS11LWJnLWNvbG9yLXNlY29uZGFyeSk7XG59XG5cbi51LWJnRGFuZ2VyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdS1iZy1jb2xvci1kYW5nZXIpO1xufVxuXG4udS1iZ1dhcm5pbmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS11LWJnLWNvbG9yLXdhcm5pbmcpO1xufVxuXG4udS1iZ1Vuc3VyZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXUtYmctY29sb3ItdW5zdXJlKTtcbn1cblxuLnUtYmdTdWNjZXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdS1iZy1jb2xvci1zdWNjZXNzKTtcbn1cblxuLnUtYmdIaWdobGlnaHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS11LWJnLWNvbG9yLWhpZ2hsaWdodCk7XG59XG4iLCIvKipcbiAqIERpc3BsYXktdHlwZSB1dGlsaXRpZXNcbiAqL1xuXG4udS1ibG9jayB7XG4gIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG59XG5cbi51LWhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBDb21wbGV0ZWx5IHJlbW92ZSBmcm9tIHRoZSBmbG93IGJ1dCBsZWF2ZSBhdmFpbGFibGUgdG8gc2NyZWVuIHJlYWRlcnMuXG4gKi9cblxuLnUtaGlkZGVuVmlzdWFsbHkge1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xuICB3aWR0aDogMXB4ICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMXB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgYm9yZGVyOiAwICFpbXBvcnRhbnQ7XG4gIGNsaXA6IHJlY3QoMXB4LCAxcHgsIDFweCwgMXB4KSAhaW1wb3J0YW50O1xufVxuXG4udS1pbmxpbmUge1xuICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiAxLiBGaXggZm9yIEZpcmVmb3ggYnVnOiBhbiBpbWFnZSBzdHlsZWQgYG1heC13aWR0aDoxMDAlYCB3aXRoaW4gYW5cbiAqIGlubGluZS1ibG9jayB3aWxsIGRpc3BsYXkgYXQgaXRzIGRlZmF1bHQgc2l6ZSwgYW5kIG5vdCBsaW1pdCBpdHMgd2lkdGggdG9cbiAqIDEwMCUgb2YgYW4gYW5jZXN0cmFsIGNvbnRhaW5lci5cbiAqL1xuXG4udS1pbmxpbmVCbG9jayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50O1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbn1cblxuLnUtdGFibGUge1xuICBkaXNwbGF5OiB0YWJsZSAhaW1wb3J0YW50O1xufVxuXG4udS10YWJsZUNlbGwge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsICFpbXBvcnRhbnQ7XG59XG5cbi51LXRhYmxlUm93IHtcbiAgZGlzcGxheTogdGFibGUtcm93ICFpbXBvcnRhbnQ7XG59XG4iLCJAaW1wb3J0ICdzdWl0Y3NzLXV0aWxzLWRpc3BsYXknO1xuXG46cm9vdCB7XG4gIC0tdS1kaXNwbGF5LXJoeXRobTogMS41cmVtO1xufVxuXG4vKipcbiAqIFJvdW5kIGJveFxuICpcbiAqIFVzZSBvZiAlIGhlcmUgd2lsbCBkaXN0b3J0IGJveCBpZiBpdCBpcyBub3Qgc3F1YXJlXG4gKi9cblxuLnUtcm91bmQge1xuICBib3JkZXItcmFkaXVzOiAxMDAwcHggIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xufVxuXG4udS1yb3VuZGlzaCB7XG4gIGJvcmRlci1yYWRpdXM6IGNhbGModmFyKC0tdS1kaXNwbGF5LXJoeXRobSkgKiAuMzc1KSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG59XG5cbi51LXJvdW5kZWQge1xuICBib3JkZXItcmFkaXVzOiBjYWxjKHZhcigtLXUtZGlzcGxheS1yaHl0aG0pICogLjc1KSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG59XG5cbkBtZWRpYSAoLS1zbS12aWV3cG9ydCkge1xuICAudS1zbS1oaWRkZW4ge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgKC0tbWQtdmlld3BvcnQpIHtcbiAgLnUtbWQtaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhICgtLWx0ZW1kLXZpZXdwb3J0KSB7XG4gIC51LWx0ZW1kLWhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG59XG5cblxuQG1lZGlhICgtLWd0ZW1kLXZpZXdwb3J0KSB7XG4gIC51LWd0ZW1kLWhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAoLS1sZy12aWV3cG9ydCkge1xuICAudS1sZy1oaWRkZW4ge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgKC0tZ3RlbGctdmlld3BvcnQpIHtcbiAgLnUtZ3RlbGctaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbn1cbiIsIjpyb290IHtcbiAgLS11LWxpc3Qtcmh5dGhtOiAxLjVyZW07XG59XG5cbi8qKlxuICogRGVmaW5pdGlvbiBsaXN0c1xuICpcbiAqIFJlbW92ZSBkZWZhdWx0IHN0eWxpbmdcbiAqL1xuXG4udS1kbFVuc3R5bGVkID4gZGQge1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLyoqXG4gKiBEaXNwbGF5IGRlZmluaXRpb24gbGlzdHMgaW5saW5lXG4gKi9cblxuLnUtZGxJbmxpbmUgZHQsXG4udS1kbElubGluZSBkZCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiBjYWxjKHZhcigtLXUtbGlzdC1yaHl0aG0pICogLjEyNSk7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG4vKipcbiAqIFN0YW5kYXJkIGxpc3RzXG4gKlxuICogUmVtb3ZlIGRlZmF1bHQgc3R5bGluZ1xuICovXG5cbi51LWxpc3RVbnN0eWxlZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLnUtbGlzdFVuc3R5bGVkID4gbGkge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBEaXNwbGF5IGxpc3QgaXRlbXMgaW5saW5lXG4gKi9cblxuLnUtbGlzdElubGluZSB7XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKHZhcigtLXUtbGlzdC1yaHl0aG0pICogLS4xMjUpO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi51LWxpc3RJbmxpbmUgPiBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZy1yaWdodDogY2FsYyh2YXIoLS11LWxpc3Qtcmh5dGhtKSAqIC4xMjUpO1xuICBwYWRkaW5nLWxlZnQ6IGNhbGModmFyKC0tdS1saXN0LXJoeXRobSkgKiAuMTI1KTtcbn1cblxuLyoqXG4gKiBEaXNwbGF5IGxpc3QgaXRlbXMgaW5saW5lXG4gKi9cblxuLnUtbGlzdEhvcml6b250YWwge1xuICAvKiBSZW1vdmUgZXh0cmEgc3BhY2luZyBpbmxpbmUtYmxvY2sgYWRkcyAqL1xuICBmb250LXNpemU6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi51LWxpc3RIb3Jpem9udGFsID4gbGkge1xuICAvKiBSZXR1cm4gZm9udCB0byBub3JtYWwgc2l6ZSAqL1xuICBmb250LXNpemU6IDFyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cbiIsIi51LXBvc0Fic29sdXRlIHtcbiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogUGlucyB0byBhbGwgY29ybmVycyBieSBkZWZhdWx0LiBCdXQgd2hlbiBhIHdpZHRoIGFuZC9vciBoZWlnaHQgYXJlXG4gKiBwcm92aWRlZCwgdGhlIGVsZW1lbnQgd2lsbCBiZSBjZW50ZXJlZCBpbiBpdHMgbmVhcmVzdCByZWxhdGl2ZWx5LXBvc2l0aW9uZWRcbiAqIGFuY2VzdG9yLlxuICovXG5cbi51LXBvc0Fic29sdXRlQ2VudGVyIHtcbiAgYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gIGxlZnQ6IDAgIWltcG9ydGFudDtcbiAgbWFyZ2luOiBhdXRvICFpbXBvcnRhbnQ7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICByaWdodDogMCAhaW1wb3J0YW50O1xuICB0b3A6IDAgIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiAxLiBNYWtlIHN1cmUgZml4ZWQgZWxlbWVudHMgYXJlIHByb21vdGVkIGludG8gYSBuZXcgbGF5ZXIsIGZvciBwZXJmb3JtYW5jZVxuICogICAgcmVhc29ucy5cbiAqL1xuXG4udS1wb3NGaXhlZCB7XG4gIHBvc2l0aW9uOiBmaXhlZCAhaW1wb3J0YW50O1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IC8qIDEgKi9cbn1cblxuLnUtcG9zUmVsYXRpdmUge1xuICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcbn1cblxuLnUtcG9zU3RhdGljIHtcbiAgcG9zaXRpb246IHN0YXRpYyAhaW1wb3J0YW50O1xufVxuIiwiQGltcG9ydCAnc3VpdGNzcy11dGlscy1wb3NpdGlvbic7XG5cbi51LXBvc0Fic29sdXRlTGVmdCB7XG4gIGJvdHRvbTogMCAhaW1wb3J0YW50O1xuICBsZWZ0OiAwICFpbXBvcnRhbnQ7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICB0b3A6IDAgIWltcG9ydGFudDtcbn1cblxuLnUtcG9zQWJzb2x1dGVSaWdodCB7XG4gIGJvdHRvbTogMCAhaW1wb3J0YW50O1xuICByaWdodDogMCAhaW1wb3J0YW50O1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgdG9wOiAwICFpbXBvcnRhbnQ7XG59XG5cbi51LXBvc0NlbnRlckNlbnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG4iLCIvKipcbiAqIFNpemluZyB1dGlsaXRpZXNcbiAqL1xuXG4vKiBJbnRyaW5zaWMgd2lkdGhzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIE1ha2UgYW4gZWxlbWVudCBzaHJpbmsgd3JhcCBpdHMgY29udGVudC5cbiAqL1xuXG4udS1zaXplRml0LFxuLnUtc2l6ZUZpdEFsdCB7XG4gIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVGaXRBbHQge1xuICBmbG9hdDogcmlnaHQgIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBNYWtlIGFuIGVsZW1lbnQgZmlsbCB0aGUgcmVtYWluaW5nIHNwYWNlLlxuICogTi5CLiBUaGlzIHdpbGwgaGlkZSBvdmVyZmxvdy5cbiAqL1xuXG4udS1zaXplRmlsbCB7XG4gIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbiAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBBbiBhbHRlcm5hdGl2ZSBtZXRob2QgdG8gbWFrZSBhbiBlbGVtZW50IGZpbGwgdGhlIHJlbWFpbmluZyBzcGFjZS5cbiAqIE4uQi4gRG8gbm90IHVzZSBpZiBjaGlsZCBlbGVtZW50cyBtaWdodCBiZSB3aWRlciB0aGFuIHRoZSByZW1haW5pbmcgc3BhY2UuXG4gKiBJbiBDaHJvbWUsIFNhZmFyaSwgYW5kIEZpcmVmb3ggaXQgcmVzdWx0cyBpbiB1bmRlc2lyZWQgbGF5b3V0LlxuICovXG5cbi51LXNpemVGaWxsQWx0IHtcbiAgZGlzcGxheTogdGFibGUtY2VsbCAhaW1wb3J0YW50O1xuICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMDAwcHggIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBNYWtlIGFuIGVsZW1lbnQgdGhlIHdpZHRoIG9mIGl0cyBwYXJlbnQuXG4gKi9cblxuLnUtc2l6ZUZ1bGwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94ICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG59XG5cbi8qIFByb3BvcnRpb25hbCB3aWR0aHNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogU3BlY2lmeSB0aGUgcHJvcG9ydGlvbmFsIHdpZHRoIG9mIGFuIG9iamVjdC5cbiAqIEludGVudGlvbmFsIHJlZHVuZGFuY3kgYnVpbGQgaW50byBlYWNoIHNldCBvZiB1bml0IGNsYXNzZXMuXG4gKiBTdXBwb3J0czogMiwgMywgNCwgNSwgNiwgOCwgMTAsIDEyIHBhcnRcbiAqL1xuXG4udS1zaXplMW9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMSAvIDEyKSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMW9mMTAge1xuICB3aWR0aDogMTAlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUxb2Y4IHtcbiAgd2lkdGg6IDEyLjUlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUxb2Y2LFxuLnUtc2l6ZTJvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMW9mNSxcbi51LXNpemUyb2YxMCB7XG4gIHdpZHRoOiAyMCUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTFvZjQsXG4udS1zaXplMm9mOCxcbi51LXNpemUzb2YxMiB7XG4gIHdpZHRoOiAyNSUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTNvZjEwIHtcbiAgd2lkdGg6IDMwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMW9mMyxcbi51LXNpemUyb2Y2LFxuLnUtc2l6ZTRvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAzKSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplM29mOCB7XG4gIHdpZHRoOiAzNy41JSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMm9mNSxcbi51LXNpemU0b2YxMCB7XG4gIHdpZHRoOiA0MCUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTVvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyAxMikgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTFvZjIsXG4udS1zaXplMm9mNCxcbi51LXNpemUzb2Y2LFxuLnUtc2l6ZTRvZjgsXG4udS1zaXplNW9mMTAsXG4udS1zaXplNm9mMTIge1xuICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemU3b2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiA3IC8gMTIpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUzb2Y1LFxuLnUtc2l6ZTZvZjEwIHtcbiAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplNW9mOCB7XG4gIHdpZHRoOiA2Mi41JSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMm9mMyxcbi51LXNpemU0b2Y2LFxuLnUtc2l6ZThvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDIgLyAzKSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplN29mMTAge1xuICB3aWR0aDogNzAlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUzb2Y0LFxuLnUtc2l6ZTZvZjgsXG4udS1zaXplOW9mMTIge1xuICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemU0b2Y1LFxuLnUtc2l6ZThvZjEwIHtcbiAgd2lkdGg6IDgwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplNW9mNixcbi51LXNpemUxMG9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogNSAvIDYpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemU3b2Y4IHtcbiAgd2lkdGg6IDg3LjUlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemU5b2YxMCB7XG4gIHdpZHRoOiA5MCUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTExb2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiAxMSAvIDEyKSAhaW1wb3J0YW50O1xufVxuIiwiLyoqXG4gKiBTaXplOiBicmVha3BvaW50IDEgKHNtYWxsKVxuICovXG5cbkBtZWRpYSAoLS1zbS12aWV3cG9ydCkge1xuXG4gIC8qKlxuICAgKiBNYWtlIGFuIGVsZW1lbnQgc2hyaW5rIHdyYXAgaXRzIGNvbnRlbnQuXG4gICAqL1xuXG4gIC51LXNtLXNpemVGaXQsXG4gIC51LXNtLXNpemVGaXRBbHQge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gICAgZmxvYXQ6IGxlZnQgIWltcG9ydGFudDtcbiAgICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZUZpdEFsdCB7XG4gICAgZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7XG4gIH1cblxuICAvKipcbiAgICogTWFrZSBhbiBlbGVtZW50IGZpbGwgdGhlIHJlbWFpbmluZyBzcGFjZS5cbiAgICogTi5CLiBUaGlzIHdpbGwgaGlkZSBvdmVyZmxvdy5cbiAgICovXG5cbiAgLnUtc20tc2l6ZUZpbGwge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xuICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG4gIH1cblxuICAvKipcbiAgICogQW4gYWx0ZXJuYXRpdmUgbWV0aG9kIHRvIG1ha2UgYW4gZWxlbWVudCBmaWxsIHRoZSByZW1haW5pbmcgc3BhY2UuXG4gICAqIE4uQi4gRG8gbm90IHVzZSBpZiBjaGlsZCBlbGVtZW50cyBtaWdodCBiZSB3aWRlciB0aGFuIHRoZSByZW1haW5pbmcgc3BhY2UuXG4gICAqIEluIENocm9tZSwgU2FmYXJpLCBhbmQgRmlyZWZveCBpdCByZXN1bHRzIGluIHVuZGVzaXJlZCBsYXlvdXQuXG4gICAqL1xuXG4gIC51LXNtLXNpemVGaWxsQWx0IHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsICFpbXBvcnRhbnQ7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IDEwMDAwcHggIWltcG9ydGFudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYWtlIGFuIGVsZW1lbnQgdGhlIHdpZHRoIG9mIGl0cyBwYXJlbnQuXG4gICAqL1xuXG4gIC51LXNtLXNpemVGdWxsIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94ICFpbXBvcnRhbnQ7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLyogUHJvcG9ydGlvbmFsIHdpZHRoczogYnJlYWtwb2ludCAxIChzbWFsbClcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAvKipcbiAgICogU3BlY2lmeSB0aGUgcHJvcG9ydGlvbmFsIHdpZHRoIG9mIGFuIG9iamVjdC5cbiAgICogSW50ZW50aW9uYWwgcmVkdW5kYW5jeSBidWlsZCBpbnRvIGVhY2ggc2V0IG9mIHVuaXQgY2xhc3Nlcy5cbiAgICogU3VwcG9ydHM6IDIsIDMsIDQsIDUsIDYsIDgsIDEwLCAxMiBwYXJ0XG4gICAqL1xuXG4gIC51LXNtLXNpemUxb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAxMikgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemUxb2YxMCB7XG4gICAgd2lkdGg6IDEwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTFvZjgge1xuICAgIHdpZHRoOiAxMi41JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTFvZjYsXG4gIC51LXNtLXNpemUyb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTFvZjUsXG4gIC51LXNtLXNpemUyb2YxMCB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTFvZjQsXG4gIC51LXNtLXNpemUyb2Y4LFxuICAudS1zbS1zaXplM29mMTIge1xuICAgIHdpZHRoOiAyNSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemUzb2YxMCB7XG4gICAgd2lkdGg6IDMwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTFvZjMsXG4gIC51LXNtLXNpemUyb2Y2LFxuICAudS1zbS1zaXplNG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMykgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemUzb2Y4IHtcbiAgICB3aWR0aDogMzcuNSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemUyb2Y1LFxuICAudS1zbS1zaXplNG9mMTAge1xuICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemU1b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyAxMikgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemUxb2YyLFxuICAudS1zbS1zaXplMm9mNCxcbiAgLnUtc20tc2l6ZTNvZjYsXG4gIC51LXNtLXNpemU0b2Y4LFxuICAudS1zbS1zaXplNW9mMTAsXG4gIC51LXNtLXNpemU2b2YxMiB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTdvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNyAvIDEyKSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTNvZjUsXG4gIC51LXNtLXNpemU2b2YxMCB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTVvZjgge1xuICAgIHdpZHRoOiA2Mi41JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTJvZjMsXG4gIC51LXNtLXNpemU0b2Y2LFxuICAudS1zbS1zaXplOG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAyIC8gMykgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemU3b2YxMCB7XG4gICAgd2lkdGg6IDcwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtc20tc2l6ZTNvZjQsXG4gIC51LXNtLXNpemU2b2Y4LFxuICAudS1zbS1zaXplOW9mMTIge1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemU0b2Y1LFxuICAudS1zbS1zaXplOG9mMTAge1xuICAgIHdpZHRoOiA4MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemU1b2Y2LFxuICAudS1zbS1zaXplMTBvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNSAvIDYpICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1zbS1zaXplN29mOCB7XG4gICAgd2lkdGg6IDg3LjUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1zbS1zaXplOW9mMTAge1xuICAgIHdpZHRoOiA5MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LXNtLXNpemUxMW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxMSAvIDEyKSAhaW1wb3J0YW50O1xuICB9XG5cbn1cbiIsIi8qKlxuICogU2l6ZTogYnJlYWtwb2ludCAyIChtZWRpdW0pXG4gKi9cblxuQG1lZGlhICgtLW1kLXZpZXdwb3J0KSB7XG5cbiAgLyoqXG4gICAqIE1ha2UgYW4gZWxlbWVudCBzaHJpbmsgd3JhcCBpdHMgY29udGVudC5cbiAgICovXG5cbiAgLnUtbWQtc2l6ZUZpdCxcbiAgLnUtbWQtc2l6ZUZpdEFsdCB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgICBmbG9hdDogbGVmdCAhaW1wb3J0YW50O1xuICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1tZC1zaXplRml0QWx0IHtcbiAgICBmbG9hdDogcmlnaHQgIWltcG9ydGFudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYWtlIGFuIGVsZW1lbnQgZmlsbCB0aGUgcmVtYWluaW5nIHNwYWNlLlxuICAgKiBOLkIuIFRoaXMgd2lsbCBoaWRlIG92ZXJmbG93LlxuICAgKi9cblxuICAudS1tZC1zaXplRmlsbCB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBbiBhbHRlcm5hdGl2ZSBtZXRob2QgdG8gbWFrZSBhbiBlbGVtZW50IGZpbGwgdGhlIHJlbWFpbmluZyBzcGFjZS5cbiAgICogTi5CLiBEbyBub3QgdXNlIGlmIGNoaWxkIGVsZW1lbnRzIG1pZ2h0IGJlIHdpZGVyIHRoYW4gdGhlIHJlbWFpbmluZyBzcGFjZS5cbiAgICogSW4gQ2hyb21lLCBTYWZhcmksIGFuZCBGaXJlZm94IGl0IHJlc3VsdHMgaW4gdW5kZXNpcmVkIGxheW91dC5cbiAgICovXG5cbiAgLnUtbWQtc2l6ZUZpbGxBbHQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGwgIWltcG9ydGFudDtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICB3aWR0aDogMTAwMDBweCAhaW1wb3J0YW50O1xuICB9XG5cbiAgLyoqXG4gICAqIE1ha2UgYW4gZWxlbWVudCB0aGUgd2lkdGggb2YgaXRzIHBhcmVudC5cbiAgICovXG5cbiAgLnUtbWQtc2l6ZUZ1bGwge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3ggIWltcG9ydGFudDtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAvKiBQcm9wb3J0aW9uYWwgd2lkdGhzOiBicmVha3BvaW50IDIgKG1lZGl1bSlcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAvKipcbiAgICogU3BlY2lmeSB0aGUgcHJvcG9ydGlvbmFsIHdpZHRoIG9mIGFuIG9iamVjdC5cbiAgICogSW50ZW50aW9uYWwgcmVkdW5kYW5jeSBidWlsZCBpbnRvIGVhY2ggc2V0IG9mIHVuaXQgY2xhc3Nlcy5cbiAgICogU3VwcG9ydHM6IDIsIDMsIDQsIDUsIDYsIDgsIDEwLCAxMiBwYXJ0XG4gICAqL1xuXG4gIC51LW1kLXNpemUxb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAxMikgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemUxb2YxMCB7XG4gICAgd2lkdGg6IDEwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTFvZjgge1xuICAgIHdpZHRoOiAxMi41JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTFvZjYsXG4gIC51LW1kLXNpemUyb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTFvZjUsXG4gIC51LW1kLXNpemUyb2YxMCB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTFvZjQsXG4gIC51LW1kLXNpemUyb2Y4LFxuICAudS1tZC1zaXplM29mMTIge1xuICAgIHdpZHRoOiAyNSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemUzb2YxMCB7XG4gICAgd2lkdGg6IDMwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTFvZjMsXG4gIC51LW1kLXNpemUyb2Y2LFxuICAudS1tZC1zaXplNG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMykgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemUzb2Y4IHtcbiAgICB3aWR0aDogMzcuNSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemUyb2Y1LFxuICAudS1tZC1zaXplNG9mMTAge1xuICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemU1b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyAxMikgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemUxb2YyLFxuICAudS1tZC1zaXplMm9mNCxcbiAgLnUtbWQtc2l6ZTNvZjYsXG4gIC51LW1kLXNpemU0b2Y4LFxuICAudS1tZC1zaXplNW9mMTAsXG4gIC51LW1kLXNpemU2b2YxMiB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTdvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNyAvIDEyKSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTNvZjUsXG4gIC51LW1kLXNpemU2b2YxMCB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTVvZjgge1xuICAgIHdpZHRoOiA2Mi41JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTJvZjMsXG4gIC51LW1kLXNpemU0b2Y2LFxuICAudS1tZC1zaXplOG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAyIC8gMykgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemU3b2YxMCB7XG4gICAgd2lkdGg6IDcwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbWQtc2l6ZTNvZjQsXG4gIC51LW1kLXNpemU2b2Y4LFxuICAudS1tZC1zaXplOW9mMTIge1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemU0b2Y1LFxuICAudS1tZC1zaXplOG9mMTAge1xuICAgIHdpZHRoOiA4MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemU1b2Y2LFxuICAudS1tZC1zaXplMTBvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNSAvIDYpICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1tZC1zaXplN29mOCB7XG4gICAgd2lkdGg6IDg3LjUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1tZC1zaXplOW9mMTAge1xuICAgIHdpZHRoOiA5MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LW1kLXNpemUxMW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxMSAvIDEyKSAhaW1wb3J0YW50O1xuICB9XG5cbn1cbiIsIi8qKlxuICogU2l6ZTogYnJlYWtwb2ludCAzIChsYXJnZSlcbiAqL1xuXG5AbWVkaWEgKC0tbGctdmlld3BvcnQpIHtcblxuICAvKipcbiAgICogTWFrZSBhbiBlbGVtZW50IHNocmluayB3cmFwIGl0cyBjb250ZW50LlxuICAgKi9cblxuICAudS1sZy1zaXplRml0LFxuICAudS1sZy1zaXplRml0QWx0IHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICAgIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemVGaXRBbHQge1xuICAgIGZsb2F0OiByaWdodCAhaW1wb3J0YW50O1xuICB9XG5cbiAgLyoqXG4gICAqIE1ha2UgYW4gZWxlbWVudCBmaWxsIHRoZSByZW1haW5pbmcgc3BhY2UuXG4gICAqIE4uQi4gVGhpcyB3aWxsIGhpZGUgb3ZlcmZsb3cuXG4gICAqL1xuXG4gIC51LWxnLXNpemVGaWxsIHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICAgIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbiAgICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEFuIGFsdGVybmF0aXZlIG1ldGhvZCB0byBtYWtlIGFuIGVsZW1lbnQgZmlsbCB0aGUgcmVtYWluaW5nIHNwYWNlLlxuICAgKiBOLkIuIERvIG5vdCB1c2UgaWYgY2hpbGQgZWxlbWVudHMgbWlnaHQgYmUgd2lkZXIgdGhhbiB0aGUgcmVtYWluaW5nIHNwYWNlLlxuICAgKiBJbiBDaHJvbWUsIFNhZmFyaSwgYW5kIEZpcmVmb3ggaXQgcmVzdWx0cyBpbiB1bmRlc2lyZWQgbGF5b3V0LlxuICAgKi9cblxuICAudS1sZy1zaXplRmlsbEFsdCB7XG4gICAgZGlzcGxheTogdGFibGUtY2VsbCAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIHdpZHRoOiAxMDAwMHB4ICFpbXBvcnRhbnQ7XG4gIH1cblxuICAvKipcbiAgICogTWFrZSBhbiBlbGVtZW50IHRoZSB3aWR0aCBvZiBpdHMgcGFyZW50LlxuICAgKi9cblxuICAudS1sZy1zaXplRnVsbCB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveCAhaW1wb3J0YW50O1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC8qIFByb3BvcnRpb25hbCB3aWR0aHM6IGJyZWFrcG9pbnQgMyAobGFyZ2UpXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgLyoqXG4gICAqIFNwZWNpZnkgdGhlIHByb3BvcnRpb25hbCB3aWR0aCBvZiBhbiBvYmplY3QuXG4gICAqIEludGVudGlvbmFsIHJlZHVuZGFuY3kgYnVpbGQgaW50byBlYWNoIHNldCBvZiB1bml0IGNsYXNzZXMuXG4gICAqIFN1cHBvcnRzOiAyLCAzLCA0LCA1LCA2LCA4LCAxMCwgMTIgcGFydFxuICAgKi9cblxuICAudS1sZy1zaXplMW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMTIpICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplMW9mMTAge1xuICAgIHdpZHRoOiAxMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUxb2Y4IHtcbiAgICB3aWR0aDogMTIuNSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUxb2Y2LFxuICAudS1sZy1zaXplMm9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gNikgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUxb2Y1LFxuICAudS1sZy1zaXplMm9mMTAge1xuICAgIHdpZHRoOiAyMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUxb2Y0LFxuICAudS1sZy1zaXplMm9mOCxcbiAgLnUtbGctc2l6ZTNvZjEyIHtcbiAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplM29mMTAge1xuICAgIHdpZHRoOiAzMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUxb2YzLFxuICAudS1sZy1zaXplMm9mNixcbiAgLnUtbGctc2l6ZTRvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDMpICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplM29mOCB7XG4gICAgd2lkdGg6IDM3LjUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplMm9mNSxcbiAgLnUtbGctc2l6ZTRvZjEwIHtcbiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplNW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA1IC8gMTIpICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplMW9mMixcbiAgLnUtbGctc2l6ZTJvZjQsXG4gIC51LWxnLXNpemUzb2Y2LFxuICAudS1sZy1zaXplNG9mOCxcbiAgLnUtbGctc2l6ZTVvZjEwLFxuICAudS1sZy1zaXplNm9mMTIge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemU3b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDcgLyAxMikgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUzb2Y1LFxuICAudS1sZy1zaXplNm9mMTAge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemU1b2Y4IHtcbiAgICB3aWR0aDogNjIuNSUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUyb2YzLFxuICAudS1sZy1zaXplNG9mNixcbiAgLnUtbGctc2l6ZThvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMiAvIDMpICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplN29mMTAge1xuICAgIHdpZHRoOiA3MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC51LWxnLXNpemUzb2Y0LFxuICAudS1sZy1zaXplNm9mOCxcbiAgLnUtbGctc2l6ZTlvZjEyIHtcbiAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplNG9mNSxcbiAgLnUtbGctc2l6ZThvZjEwIHtcbiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplNW9mNixcbiAgLnUtbGctc2l6ZTEwb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyA2KSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbGctc2l6ZTdvZjgge1xuICAgIHdpZHRoOiA4Ny41JSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnUtbGctc2l6ZTlvZjEwIHtcbiAgICB3aWR0aDogOTAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudS1sZy1zaXplMTFvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMTEgLyAxMikgIWltcG9ydGFudDtcbiAgfVxuXG59XG4iLCJAaW1wb3J0ICdzdWl0Y3NzLXV0aWxzLXNpemUnO1xuXG46cm9vdCB7XG4gIC0tdS1zaXplLXJoeXRobTogMS41cmVtO1xufVxuXG4vKiBXaWR0aCAqL1xuXG4udS1zaXplV2lkdGgtMS00IHtcbiAgd2lkdGg6IGNhbGModmFyKC0tdS1zaXplLXJoeXRobSkgKiAuMjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVXaWR0aC0xLTIge1xuICB3aWR0aDogY2FsYyh2YXIoLS11LXNpemUtcmh5dGhtKSAqIC41KSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplV2lkdGgtMy00IHtcbiAgd2lkdGg6IGNhbGModmFyKC0tdS1zaXplLXJoeXRobSkgKiAuNzUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVXaWR0aC0xIHtcbiAgd2lkdGg6IHZhcigtLXUtc2l6ZS1yaHl0aG0pICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVXaWR0aC0xXzEtMiB7XG4gIHdpZHRoOiBjYWxjKHZhcigtLXUtc2l6ZS1yaHl0aG0pICogMS41KSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplV2lkdGgtMiB7XG4gIHdpZHRoOiBjYWxjKHZhcigtLXUtc2l6ZS1yaHl0aG0pICogMikgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZVdpZHRoLTYge1xuICB3aWR0aDogY2FsYyh2YXIoLS11LXNpemUtcmh5dGhtKSAqIDYpICFpbXBvcnRhbnQ7XG59XG5cbi8qIEhlaWdodCAqL1xuXG4udS1zaXplSGVpZ2h0LTEtNCB7XG4gIGhlaWdodDogY2FsYyh2YXIoLS11LXNpemUtcmh5dGhtKSAqIC4yNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZUhlaWdodC0xLTIge1xuICBoZWlnaHQ6IGNhbGModmFyKC0tdS1zaXplLXJoeXRobSkgKiAuNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZUhlaWdodC0zLTQge1xuICBoZWlnaHQ6IGNhbGModmFyKC0tdS1zaXplLXJoeXRobSkgKiAuNzUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVIZWlnaHQtMSB7XG4gIGhlaWdodDogdmFyKC0tdS1zaXplLXJoeXRobSkgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZUhlaWdodC0xXzEtNCB7XG4gIGhlaWdodDogY2FsYyh2YXIoLS11LXNpemUtcmh5dGhtKSAqIDEuMjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVIZWlnaHQtMV8xLTIge1xuICBoZWlnaHQ6IGNhbGModmFyKC0tdS1zaXplLXJoeXRobSkgKiAxLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemVIZWlnaHQtMiB7XG4gIGhlaWdodDogY2FsYyh2YXIoLS11LXNpemUtcmh5dGhtKSAqIDIpICFpbXBvcnRhbnQ7XG59XG5cbi8qIExpbmUgSGVpZ2h0ICovXG5cbi51LXNpemVMaW5lSGVpZ2h0LTEtNCB7XG4gIGxpbmUtaGVpZ2h0OiBjYWxjKHZhcigtLXUtc2l6ZS1yaHl0aG0pICogLjI1KSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplTGluZUhlaWdodC0xLTIge1xuICBsaW5lLWhlaWdodDogY2FsYyh2YXIoLS11LXNpemUtcmh5dGhtKSAqIC41KSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplTGluZUhlaWdodC0zLTQge1xuICBsaW5lLWhlaWdodDogY2FsYyh2YXIoLS11LXNpemUtcmh5dGhtKSAqIC43NSkgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZUxpbmVIZWlnaHQtMSB7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS11LXNpemUtcmh5dGhtKSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplTGluZUhlaWdodC0xXzEtNCB7XG4gIGxpbmUtaGVpZ2h0OiBjYWxjKHZhcigtLXUtc2l6ZS1yaHl0aG0pICogMS4yNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZUxpbmVIZWlnaHQtMV8xLTIge1xuICBsaW5lLWhlaWdodDogY2FsYyh2YXIoLS11LXNpemUtcmh5dGhtKSAqIDEuNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZUxpbmVIZWlnaHQtMiB7XG4gIGxpbmUtaGVpZ2h0OiBjYWxjKHZhcigtLXUtc2l6ZS1yaHl0aG0pICogMikgIWltcG9ydGFudDtcbn1cbiIsIjpyb290IHtcbiAgLS11LXNwYWNlLXJoeXRobTogMS41cmVtO1xufVxuXG4vKipcbiAqIFV0aWxzIC0gU3BhY2VcbiAqXG4gKiBNYXJnaW4gYW5kIFBhZGRpbmdcbiAqIFNpemVzOiAxLzQsIDEvMiwgMy80LCAxLCAxIDEvMiwgMlxuICogU2lkZXM6IGFsbCwgdG9wLCByaWdodCwgYm90dG9tLCBsZWZ0LCB2ZXJ0aWNhbCwgaG9yaXpvbnRhbDtcbiAqL1xuXG4vKipcbiAqIE1hcmdpblxuICpcbiAqIHUtc01cbiAqL1xuXG4gLyogQWxsICovXG5cbiAudS1zTS0xLTgge1xuICAgbWFyZ2luOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4xMjUpICFpbXBvcnRhbnQ7XG4gfVxuXG4gLnUtc00tMS00IHtcbiAgIG1hcmdpbjogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuMjUpICFpbXBvcnRhbnQ7XG4gfVxuXG4gLnUtc00tMS0yIHtcbiAgIG1hcmdpbjogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuNSkgIWltcG9ydGFudDtcbiB9XG5cbiAudS1zTS0zLTQge1xuICAgbWFyZ2luOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC43NSkgIWltcG9ydGFudDtcbiB9XG5cbiAudS1zTS0xIHtcbiAgIG1hcmdpbjogdmFyKC0tdS1zcGFjZS1yaHl0aG0pICFpbXBvcnRhbnQ7XG4gfVxuXG4gLnUtc00tMV8xLTIge1xuICAgbWFyZ2luOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIDEuNSkgIWltcG9ydGFudDtcbiB9XG5cbiAudS1zTS0yIHtcbiAgIG1hcmdpbjogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAyKSAhaW1wb3J0YW50O1xuIH1cblxuLyogVG9wICovXG5cbi51LXNNVC0xLTgge1xuICBtYXJnaW4tdG9wOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4xMjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNVC0xLTQge1xuICBtYXJnaW4tdG9wOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4yNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc01ULTEtMiB7XG4gIG1hcmdpbi10b3A6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNVC0zLTQge1xuICBtYXJnaW4tdG9wOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC43NSkgIWltcG9ydGFudDtcbn1cblxuLnUtc01ULTEge1xuICBtYXJnaW4tdG9wOiB2YXIoLS11LXNwYWNlLXJoeXRobSkgIWltcG9ydGFudDtcbn1cblxuLnUtc01ULTFfMS0yIHtcbiAgbWFyZ2luLXRvcDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAxLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNVC0yIHtcbiAgbWFyZ2luLXRvcDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAyKSAhaW1wb3J0YW50O1xufVxuXG4vKiBSaWdodCAqL1xuXG4udS1zTVItMS00IHtcbiAgbWFyZ2luLXJpZ2h0OiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4yNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc01SLTEtMiB7XG4gIG1hcmdpbi1yaWdodDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc01SLTMtNCB7XG4gIG1hcmdpbi1yaWdodDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuNzUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNUi0xIHtcbiAgbWFyZ2luLXJpZ2h0OiB2YXIoLS11LXNwYWNlLXJoeXRobSkgIWltcG9ydGFudDtcbn1cblxuLnUtc01SLTFfMS0yIHtcbiAgbWFyZ2luLXJpZ2h0OiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIDEuNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc01SLTIge1xuICBtYXJnaW4tcmlnaHQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogMikgIWltcG9ydGFudDtcbn1cblxuLyogQm90dG9tICovXG5cbi51LXNNQi0xLTQge1xuICBtYXJnaW4tYm90dG9tOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4yNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc01CLTEtMiB7XG4gIG1hcmdpbi1ib3R0b206IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNQi0zLTQge1xuICBtYXJnaW4tYm90dG9tOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC43NSkgIWltcG9ydGFudDtcbn1cblxuLnUtc01CLTEge1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS11LXNwYWNlLXJoeXRobSkgIWltcG9ydGFudDtcbn1cblxuLnUtc01CLTFfMS0yIHtcbiAgbWFyZ2luLWJvdHRvbTogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAxLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNQi0yIHtcbiAgbWFyZ2luLWJvdHRvbTogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAyKSAhaW1wb3J0YW50O1xufVxuXG4vKiBMZWZ0ICovXG5cbi51LXNNTC0xLTgge1xuICBtYXJnaW4tbGVmdDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuMTI1KSAhaW1wb3J0YW50O1xufVxuXG4udS1zTUwtMS00IHtcbiAgbWFyZ2luLWxlZnQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjI1KSAhaW1wb3J0YW50O1xufVxuXG4udS1zTUwtMS0yIHtcbiAgbWFyZ2luLWxlZnQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNTC0zLTQge1xuICBtYXJnaW4tbGVmdDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuNzUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNTC0xIHtcbiAgbWFyZ2luLWxlZnQ6IHZhcigtLXUtc3BhY2Utcmh5dGhtKSAhaW1wb3J0YW50O1xufVxuXG4udS1zTUwtMV8xLTIge1xuICBtYXJnaW4tbGVmdDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAxLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNTC0yIHtcbiAgbWFyZ2luLWxlZnQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogMikgIWltcG9ydGFudDtcbn1cblxuLyogVmVydGljYWwgKi9cblxuLnUtc01WLTEtNCB7XG4gIG1hcmdpbi10b3A6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjI1KSAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4yNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc01WLTEtMiB7XG4gIG1hcmdpbi10b3A6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjUpICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1ib3R0b206IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNVi0zLTQge1xuICBtYXJnaW4tdG9wOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC43NSkgIWltcG9ydGFudDtcbiAgbWFyZ2luLWJvdHRvbTogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuNzUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNVi0xIHtcbiAgbWFyZ2luLXRvcDogdmFyKC0tdS1zcGFjZS1yaHl0aG0pICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLXUtc3BhY2Utcmh5dGhtKSAhaW1wb3J0YW50O1xufVxuXG4udS1zTVYtMV8xLTIge1xuICBtYXJnaW4tdG9wOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIDEuNSkgIWltcG9ydGFudDtcbiAgbWFyZ2luLWJvdHRvbTogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAxLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNVi0yIHtcbiAgbWFyZ2luLXRvcDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAyKSAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIDIpICFpbXBvcnRhbnQ7XG59XG5cbi8qIEhvcml6b250YWwgKi9cblxuLnUtc01ILTEtNCB7XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4yNSkgIWltcG9ydGFudDtcbiAgbWFyZ2luLXJpZ2h0OiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4yNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc01ILTEtMiB7XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC41KSAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNSC0zLTQge1xuICBtYXJnaW4tbGVmdDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuNzUpICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1yaWdodDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuNzUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNSC0xIHtcbiAgbWFyZ2luLWxlZnQ6IHZhcigtLXUtc3BhY2Utcmh5dGhtKSAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IHZhcigtLXUtc3BhY2Utcmh5dGhtKSAhaW1wb3J0YW50O1xufVxuXG4udS1zTUgtMV8xLTIge1xuICBtYXJnaW4tbGVmdDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAxLjUpICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1yaWdodDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAxLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNNSC0yIHtcbiAgbWFyZ2luLWxlZnQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogMikgIWltcG9ydGFudDtcbiAgbWFyZ2luLXJpZ2h0OiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIDIpICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogUGFkZGluZ1xuICpcbiAqIHUtc1BcbiAqL1xuXG4gLyogQWxsICovXG5cbiAudS1zUC0xLTQge1xuICAgcGFkZGluZzogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuMjUpICFpbXBvcnRhbnQ7XG4gfVxuXG4gLnUtc1AtMS0yIHtcbiAgIHBhZGRpbmc6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjUpICFpbXBvcnRhbnQ7XG4gfVxuXG4gLnUtc1AtMy00IHtcbiAgIHBhZGRpbmc6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjc1KSAhaW1wb3J0YW50O1xuIH1cblxuIC51LXNQLTEge1xuICAgcGFkZGluZzogdmFyKC0tdS1zcGFjZS1yaHl0aG0pICFpbXBvcnRhbnQ7XG4gfVxuXG4gLnUtc1AtMV8xLTIge1xuICAgcGFkZGluZzogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAxLjUpICFpbXBvcnRhbnQ7XG4gfVxuXG4gLnUtc1AtMiB7XG4gICBwYWRkaW5nOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIDIpICFpbXBvcnRhbnQ7XG4gfVxuXG4vKiBUb3AgKi9cblxuLnUtc1BULTEtNCB7XG4gIHBhZGRpbmctdG9wOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4yNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BULTEtMiB7XG4gIHBhZGRpbmctdG9wOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC41KSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFQtMy00IHtcbiAgcGFkZGluZy10b3A6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjc1KSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFQtMSB7XG4gIHBhZGRpbmctdG9wOiB2YXIoLS11LXNwYWNlLXJoeXRobSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BULTFfMS0yIHtcbiAgcGFkZGluZy10b3A6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogMS41KSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFQtMiB7XG4gIHBhZGRpbmctdG9wOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIDIpICFpbXBvcnRhbnQ7XG59XG5cbi8qIFJpZ2h0ICovXG5cbi51LXNQUi0xLTQge1xuICBwYWRkaW5nLXJpZ2h0OiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4yNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BSLTEtMiB7XG4gIHBhZGRpbmctcmlnaHQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQUi0zLTQge1xuICBwYWRkaW5nLXJpZ2h0OiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC43NSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BSLTEge1xuICBwYWRkaW5nLXJpZ2h0OiB2YXIoLS11LXNwYWNlLXJoeXRobSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BSLTFfMS0yIHtcbiAgcGFkZGluZy1yaWdodDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAxLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQUi0yIHtcbiAgcGFkZGluZy1yaWdodDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAyKSAhaW1wb3J0YW50O1xufVxuXG4vKiBCb3R0b20gKi9cblxuLnUtc1BCLTEtNCB7XG4gIHBhZGRpbmctYm90dG9tOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4yNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BCLTEtMiB7XG4gIHBhZGRpbmctYm90dG9tOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC41KSAhaW1wb3J0YW50O1xufVxuXG4udS1zUEItMy00IHtcbiAgcGFkZGluZy1ib3R0b206IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjc1KSAhaW1wb3J0YW50O1xufVxuXG4udS1zUEItMSB7XG4gIHBhZGRpbmctYm90dG9tOiB2YXIoLS11LXNwYWNlLXJoeXRobSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BCLTFfMS0yIHtcbiAgcGFkZGluZy1ib3R0b206IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogMS41KSAhaW1wb3J0YW50O1xufVxuXG4udS1zUEItMiB7XG4gIHBhZGRpbmctYm90dG9tOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIDIpICFpbXBvcnRhbnQ7XG59XG5cbi8qIExlZnQgKi9cblxuLnUtc1BMLTEtNCB7XG4gIHBhZGRpbmctbGVmdDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuMjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQTC0xLTIge1xuICBwYWRkaW5nLWxlZnQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQTC0zLTQge1xuICBwYWRkaW5nLWxlZnQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjc1KSAhaW1wb3J0YW50O1xufVxuXG4udS1zUEwtMSB7XG4gIHBhZGRpbmctbGVmdDogdmFyKC0tdS1zcGFjZS1yaHl0aG0pICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQTC0xXzEtMiB7XG4gIHBhZGRpbmctbGVmdDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAxLjUpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNQTC0yIHtcbiAgcGFkZGluZy1sZWZ0OiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIDIpICFpbXBvcnRhbnQ7XG59XG5cbi8qIFZlcnRpY2FsICovXG5cbi51LXNQVi0xLTQge1xuICBwYWRkaW5nLXRvcDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuMjUpICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4yNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BWLTEtMiB7XG4gIHBhZGRpbmctdG9wOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC41KSAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BWLTMtNCB7XG4gIHBhZGRpbmctdG9wOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC43NSkgIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjc1KSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFYtMSB7XG4gIHBhZGRpbmctdG9wOiB2YXIoLS11LXNwYWNlLXJoeXRobSkgIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IHZhcigtLXUtc3BhY2Utcmh5dGhtKSAhaW1wb3J0YW50O1xufVxuXG4udS1zUFYtMV8xLTIge1xuICBwYWRkaW5nLXRvcDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAxLjUpICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIDEuNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BWLTIge1xuICBwYWRkaW5nLXRvcDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAyKSAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAyKSAhaW1wb3J0YW50O1xufVxuXG4vKiBIb3Jpem9udGFsICovXG5cbi51LXNQSC0xLTQge1xuICBwYWRkaW5nLWxlZnQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjI1KSAhaW1wb3J0YW50O1xuICBwYWRkaW5nLXJpZ2h0OiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIC4yNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BILTEtMiB7XG4gIHBhZGRpbmctbGVmdDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuNSkgIWltcG9ydGFudDtcbiAgcGFkZGluZy1yaWdodDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BILTMtNCB7XG4gIHBhZGRpbmctbGVmdDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAuNzUpICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogLjc1KSAhaW1wb3J0YW50O1xufVxuXG4udS1zUEgtMSB7XG4gIHBhZGRpbmctbGVmdDogdmFyKC0tdS1zcGFjZS1yaHl0aG0pICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IHZhcigtLXUtc3BhY2Utcmh5dGhtKSAhaW1wb3J0YW50O1xufVxuXG4udS1zUEgtMV8xLTIge1xuICBwYWRkaW5nLWxlZnQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogMS41KSAhaW1wb3J0YW50O1xuICBwYWRkaW5nLXJpZ2h0OiBjYWxjKHZhcigtLXUtc3BhY2Utcmh5dGhtKSAqIDEuNSkgIWltcG9ydGFudDtcbn1cblxuLnUtc1BILTIge1xuICBwYWRkaW5nLWxlZnQ6IGNhbGModmFyKC0tdS1zcGFjZS1yaHl0aG0pICogMikgIWltcG9ydGFudDtcbiAgcGFkZGluZy1yaWdodDogY2FsYyh2YXIoLS11LXNwYWNlLXJoeXRobSkgKiAyKSAhaW1wb3J0YW50O1xufVxuIiwiLyoqXG4gKiBXb3JkIGJyZWFraW5nXG4gKlxuICogQnJlYWsgc3RyaW5ncyB3aGVuIHRoZWlyIGxlbmd0aCBleGNlZWRzIHRoZSB3aWR0aCBvZiB0aGVpciBjb250YWluZXIuXG4gKi9cblxuLnUtdGV4dEJyZWFrIHtcbiAgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogSG9yaXpvbnRhbCB0ZXh0IGFsaWdubWVudFxuICovXG5cbi51LXRleHRDZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cblxuLnUtdGV4dExlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7XG59XG5cbi51LXRleHRSaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogSW5oZXJpdCB0aGUgYW5jZXN0b3IncyB0ZXh0IGNvbG9yLlxuICovXG5cbi51LXRleHRJbmhlcml0Q29sb3Ige1xuICBjb2xvcjogaW5oZXJpdCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEVuYWJsZXMgZm9udCBrZXJuaW5nIGluIGFsbCBicm93c2Vycy5cbiAqIGh0dHA6Ly9ibG9nLnR5cGVraXQuY29tLzIwMTQvMDIvMDUva2VybmluZy1vbi10aGUtd2ViL1xuICpcbiAqIDEuIENocm9tZSAobm90IFdpbmRvd3MpLCBGaXJlZm94LCBTYWZhcmkgNissIGlPUywgQW5kcm9pZFxuICogMi4gQ2hyb21lIChub3QgV2luZG93cyksIEZpcmVmb3gsIElFIDEwK1xuICogMy4gU2FmYXJpIDcgYW5kIGZ1dHVyZSBicm93c2Vyc1xuICovXG5cbi51LXRleHRLZXJuIHtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTsgLyogMSAqL1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwia2VyblwiIDE7IC8qIDIgKi9cbiAgZm9udC1rZXJuaW5nOiBub3JtYWw7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHdoaXRlc3BhY2Ugd3JhcHBpbmdcbiAqL1xuXG4udS10ZXh0Tm9XcmFwIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIFRleHQgdHJ1bmNhdGlvblxuICpcbiAqIFByZXZlbnQgdGV4dCBmcm9tIHdyYXBwaW5nIG9udG8gbXVsdGlwbGUgbGluZXMsIGFuZCB0cnVuY2F0ZSB3aXRoIGFuXG4gKiBlbGxpcHNpcy5cbiAqXG4gKiAxLiBFbnN1cmUgdGhhdCB0aGUgbm9kZSBoYXMgYSBtYXhpbXVtIHdpZHRoIGFmdGVyIHdoaWNoIHRydW5jYXRpb24gY2FuXG4gKiAgICBvY2N1ci5cbiAqIDIuIEZpeCBmb3IgSUUgOC85IGlmIGB3b3JkLXdyYXA6IGJyZWFrLXdvcmRgIGlzIGluIGVmZmVjdCBvbiBhbmNlc3RvclxuICogICAgbm9kZXMuXG4gKi9cblxuLnUtdGV4dFRydW5jYXRlIHtcbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXMgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50O1xuICB3b3JkLXdyYXA6IG5vcm1hbCAhaW1wb3J0YW50OyAvKiAyICovXG59XG4iLCJAaW1wb3J0ICdzdWl0Y3NzLXV0aWxzLXRleHQnO1xuXG46cm9vdCB7XG4gIC0tdS10ZXh0LWNvbG9yLWludmVydDogI2ZmZjtcbiAgLS11LXRleHQtY29sb3ItcHJpbWFyeTogIzRlOWZkZDtcbiAgLS11LXRleHQtY29sb3Itc2Vjb25kYXJ5OiAjNDE2OTg4O1xuICAtLXUtdGV4dC1jb2xvci1oaWdobGlnaHQ6ICM0ZTlmZGQ7XG4gIC0tdS10ZXh0LWNvbG9yLXN1Y2Nlc3M6ICM3MGE5OGI7XG4gIC0tdS10ZXh0LWNvbG9yLXVuc3VyZTogI2UwYzM1MDtcbiAgLS11LXRleHQtY29sb3ItbmV1dHJhbDogY29sb3IoIzQxNjk4OCB0aW50KDYwJSkpO1xuICAtLXUtdGV4dC1jb2xvci13YXJuaW5nOiAjZTM4MjRlO1xuICAtLXUtdGV4dC1jb2xvci1kYW5nZXI6ICNlMDU3NWI7XG4gIC0tdS10ZXh0LWNvbG9yLWVtcHR5OiBjb2xvcih2YXIoLS11LXRleHQtY29sb3Itc2Vjb25kYXJ5KSB0aW50KDUwJSkpO1xuICAtLXUtdGV4dC1tdXRlZC1vcGFjaXR5OiAuNTtcbiAgLS11LXRleHQtcmh5dGhtOiAxLjVyZW07XG59XG5cbi51LXRleHRVcHBlciB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi51LXRleHRMb3dlciB7XG4gIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7XG59XG5cbi51LXRleHRDYXBpdGFsaXplIHtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG5cbi51LXRleHRJbnZlcnQge1xuICBjb2xvcjogdmFyKC0tdS10ZXh0LWNvbG9yLWludmVydCk7XG59XG5cbi51LXRleHRNdXRlZCB7XG4gIG9wYWNpdHk6IHZhcigtLXUtdGV4dC1tdXRlZC1vcGFjaXR5KTtcbn1cblxuLnUtdGV4dEVtcHR5IHtcbiAgY29sb3I6IHZhcigtLXUtdGV4dC1jb2xvci1lbXB0eSk7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbi51LXRleHRNaWNybyB7XG4gIGZvbnQtc2l6ZTogY2FsYygxMi8xNiAqIDFyZW0pO1xufVxuXG4udS10ZXh0TWluaSB7XG4gIGZvbnQtc2l6ZTogY2FsYygxNC8xNiAqIDFyZW0pO1xufVxuXG4udS10ZXh0TWV0YSB7XG4gIGZvbnQtc2l6ZTogY2FsYygxNC8xNiAqIDFyZW0pO1xuICBjb2xvcjogY29sb3IodmFyKC0tdS10ZXh0LWNvbG9yLXNlY29uZGFyeSkgdGludCg1MCUpKTtcbn1cblxuLnUtdGV4dExlYWQge1xuICBmb250LXNpemU6IGNhbGMoMjQvMTYgKiAxcmVtKTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbn1cblxuLnUtdGV4dFByaW1hcnkge1xuICBjb2xvcjogdmFyKC0tdS10ZXh0LWNvbG9yLXByaW1hcnkpO1xufVxuXG4udS10ZXh0U2Vjb25kYXJ5IHtcbiAgY29sb3I6IHZhcigtLXUtdGV4dC1jb2xvci1zZWNvbmRhcnkpO1xufVxuXG4udS10ZXh0SGlnaGxpZ2h0IHtcbiAgY29sb3I6IHZhcigtLXUtdGV4dC1jb2xvci1oaWdobGlnaHQpO1xufVxuXG4udS10ZXh0U3VjY2VzcyB7XG4gIGNvbG9yOiB2YXIoLS11LXRleHQtY29sb3Itc3VjY2Vzcyk7XG59XG5cbi51LXRleHRVbnN1cmUge1xuICBjb2xvcjogdmFyKC0tdS10ZXh0LWNvbG9yLXVuc3VyZSk7XG59XG5cbi51LXRleHROZXV0cmFsIHtcbiAgY29sb3I6IHZhcigtLXUtdGV4dC1jb2xvci1uZXV0cmFsKTtcbn1cblxuLnUtdGV4dFdhcm5pbmcge1xuICBjb2xvcjogdmFyKC0tdS10ZXh0LWNvbG9yLXdhcm5pbmcpO1xufVxuXG4udS10ZXh0RGFuZ2VyIHtcbiAgY29sb3I6IHZhcigtLXUtdGV4dC1jb2xvci1kYW5nZXIpO1xufVxuXG4udS10ZXh0UGlsY3JvdzpiZWZvcmUge1xuICBjb250ZW50OiAnXFwwMGI2JztcbiAgY29sb3I6IHZhcigtLXUtdGV4dC1jb2xvci1uZXV0cmFsKTtcbiAgcGFkZGluZzogMCBjYWxjKHZhcigtLXUtdGV4dC1yaHl0aG0pICogMC4xMjUpO1xufVxuXG4udS10ZXh0VGFiIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxLjJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4udS10ZXh0VGFiOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXDIxRTUnO1xuICBjb2xvcjogdmFyKC0tdS10ZXh0LWNvbG9yLW5ldXRyYWwpO1xufVxuXG4udS10ZXh0U3BhY2Uge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4udS10ZXh0U3BhY2U6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiAnLic7XG4gIGNvbG9yOiB2YXIoLS11LXRleHQtY29sb3ItbmV1dHJhbCk7XG59XG5cbi51LXRleHROb1NlbGVjdCB7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufSIsIi8qKiBAZGVmaW5lIEdyaWQ7IHVzZSBzdHJpY3QgKi9cblxuOnJvb3Qge1xuICAtLUdyaWQtZm9udC1zaXplOiAxcmVtO1xuICAtLUdyaWQtZ3V0dGVyLXNpemU6IDIwcHg7XG59XG5cbi8qKlxuICogQ29yZSBncmlkIGNvbXBvbmVudFxuICpcbiAqIERPIE5PVCBhcHBseSBkaW1lbnNpb24gb3Igb2Zmc2V0IHV0aWxpdGllcyB0byB0aGUgYEdyaWRgIGVsZW1lbnQuIEFsbCBjZWxsXG4gKiB3aWR0aHMgYW5kIG9mZnNldHMgc2hvdWxkIGJlIGFwcGxpZWQgdG8gY2hpbGQgZ3JpZCBjZWxscy5cbiAqL1xuXG4vKiBHcmlkIGNvbnRhaW5lclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBbGwgY29udGVudCBtdXN0IGJlIGNvbnRhaW5lZCB3aXRoaW4gY2hpbGQgYEdyaWQtY2VsbGAgZWxlbWVudHMuXG4gKlxuICogMS4gQWNjb3VudCBmb3IgYnJvd3NlciBkZWZhdWx0cyBvZiBlbGVtZW50cyB0aGF0IG1pZ2h0IGJlIHRoZSByb290IG5vZGUgb2ZcbiAqICAgIHRoZSBjb21wb25lbnQuXG4gKiAyLiBSZW1vdmUgaW50ZXItY2VsbCB3aGl0ZXNwYWNlIHRoYXQgYXBwZWFycyBiZXR3ZWVuIGBpbmxpbmUtYmxvY2tgIGNoaWxkXG4gKiAgICBlbGVtZW50cy5cbiAqIDMuIEVuc3VyZSBjb25zaXN0ZW50IGRlZmF1bHQgYWxpZ25tZW50LlxuICovXG5cbi5HcmlkIHtcbiAgZGlzcGxheTogYmxvY2s7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAwOyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAxICovXG4gIHRleHQtYWxpZ246IGxlZnQ7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBNb2RpZmllcjogY2VudGVyIGFsaWduIGFsbCBncmlkIGNlbGxzXG4gKi9cblxuLkdyaWQtLWFsaWduQ2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiByaWdodCBhbGlnbiBhbGwgZ3JpZCBjZWxsc1xuICovXG5cbi5HcmlkLS1hbGlnblJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi8qKlxuICogTW9kaWZpZXI6IG1pZGRsZS1hbGlnbiBncmlkIGNlbGxzXG4gKi9cblxuLkdyaWQtLWFsaWduTWlkZGxlID4gLkdyaWQtY2VsbCB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi8qKlxuICogTW9kaWZpZXI6IGJvdHRvbS1hbGlnbiBncmlkIGNlbGxzXG4gKi9cblxuLkdyaWQtLWFsaWduQm90dG9tID4gLkdyaWQtY2VsbCB7XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG59XG5cbi8qKlxuICogTW9kaWZpZXI6IGd1dHRlcnNcbiAqXG4gKiBOT1RFOiB0aGlzIGNhbiB0cmlnZ2VyIGEgaG9yaXpvbnRhbCBzY3JvbGxiYXIgaWYgdGhlIGNvbXBvbmVudCBpcyBhcyB3aWRlIGFzXG4gKiB0aGUgdmlld3BvcnQuIFVzZSBwYWRkaW5nIG9uIGEgY29udGFpbmVyLCBvciBgb3ZlcmZsb3cteDpoaWRkZW5gIHRvIHByb3RlY3RcbiAqIGFnYWluc3QgaXQuXG4gKi9cblxuLkdyaWQtLXdpdGhHdXR0ZXIge1xuICBtYXJnaW46IDAgY2FsYygtMC41ICogdmFyKC0tR3JpZC1ndXR0ZXItc2l6ZSkpO1xufVxuXG4uR3JpZC0td2l0aEd1dHRlciA+IC5HcmlkLWNlbGwge1xuICBwYWRkaW5nOiAwIGNhbGMoMC41ICogdmFyKC0tR3JpZC1ndXR0ZXItc2l6ZSkpO1xufVxuXG4vKiBHcmlkIGNlbGxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogTm8gZXhwbGljaXQgd2lkdGggYnkgZGVmYXVsdC4gUmVseSBvbiBjb21iaW5pbmcgYEdyaWQtY2VsbGAgd2l0aCBhIGRpbWVuc2lvblxuICogdXRpbGl0eSBvciBhIGNvbXBvbmVudCBjbGFzcyB0aGF0IGV4dGVuZHMgJ2dyaWQnLlxuICpcbiAqIDEuIEZ1bmRhbWVudGFscyBvZiB0aGUgbm9uLWZsb2F0IGdyaWQgbGF5b3V0LlxuICogMi4gUmVzZXQgZm9udCBzaXplIGNoYW5nZSBtYWRlIGluIGBHcmlkYC5cbiAqIDMuIEtlZXBzIGNvbnRlbnQgY29ycmVjdGx5IGFsaWduZWQgd2l0aCB0aGUgZ3JpZCBkaXJlY3Rpb24uXG4gKiA0LiBDb250cm9scyB2ZXJ0aWNhbCBwb3NpdGlvbmluZyBvZiB1bml0cy5cbiAqIDUuIE1ha2UgY2VsbHMgZnVsbC13aWR0aCBieSBkZWZhdWx0LlxuICovXG5cbi5HcmlkLWNlbGwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgZm9udC1zaXplOiB2YXIoLS1HcmlkLWZvbnQtc2l6ZSk7IC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0OyAvKiAzICovXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7IC8qIDQgKi9cbiAgd2lkdGg6IDEwMCU7IC8qIDUgKi9cbn1cblxuLyoqXG4gKiBNb2RpZmllcjogaG9yaXpvbnRhbGx5IGNlbnRlciBvbmUgdW5pdFxuICogU2V0IGEgc3BlY2lmaWMgdW5pdCB0byBiZSBob3Jpem9udGFsbHkgY2VudGVyZWQuIERvZXNuJ3QgYWZmZWN0XG4gKiBhbnkgb3RoZXIgdW5pdHMuIENhbiBzdGlsbCBjb250YWluIGEgY2hpbGQgYEdyaWRgIG9iamVjdC5cbiAqL1xuXG4uR3JpZC1jZWxsLS1jZW50ZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2My4wLjMgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIGFuZCBJRSB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIGRldmljZSBvcmllbnRhdGlvbiBjaGFuZ2UsXG4gKiAgICB3aXRob3V0IGRpc2FibGluZyB1c2VyIHpvb20uXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cblxuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IG9mIGZvY3VzZWQgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBhbHNvIGluIGFuXG4gKiBhY3RpdmUvaG92ZXIgc3RhdGUuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXI6IDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xuICBtYXJnaW46IDA7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjsgLyogMyAqL1xufVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cblxuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8qKlxuICogSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAqXG4gKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKiBUYWJsZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwO1xufVxuIiwiOnJvb3Qge1xuICAtLWJhc2UtZm9ybS1jb2xvci1wbGFjZWhvbGRlcjogIzk5OTtcbn1cblxuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgLyogV2ViS2l0IGJyb3dzZXJzICovXG4gIGNvbG9yOiB2YXIoLS1iYXNlLWZvcm0tY29sb3ItcGxhY2Vob2xkZXIpO1xufVxuOi1tb3otcGxhY2Vob2xkZXIge1xuICAvKiBNb3ppbGxhIEZpcmVmb3ggNCB0byAxOCAqL1xuICBjb2xvcjogdmFyKC0tYmFzZS1mb3JtLWNvbG9yLXBsYWNlaG9sZGVyKTtcbn1cbjo6LW1vei1wbGFjZWhvbGRlciB7XG4gIC8qIE1vemlsbGEgRmlyZWZveCAxOSsgKi9cbiAgY29sb3I6IHZhcigtLWJhc2UtZm9ybS1jb2xvci1wbGFjZWhvbGRlcik7XG59XG46LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgLyogSW50ZXJuZXQgRXhwbG9yZXIgMTArICovXG4gIGNvbG9yOiB2YXIoLS1iYXNlLWZvcm0tY29sb3ItcGxhY2Vob2xkZXIpO1xufVxuXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKiBSZXNldCBidXR0b25zIHNvIHRoZXkgY2FuIGJlIHVzZWQgbGlrZSBsaW5rcyAqL1xuYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbiAgdGV4dC1hbGlnbjogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBXb3JrIGFyb3VuZCBhIEZpcmVmb3gvSUUgYnVnIHdoZXJlIHRoZSB0cmFuc3BhcmVudCBgYnV0dG9uYCBiYWNrZ3JvdW5kXG4gKiByZXN1bHRzIGluIGEgbG9zcyBvZiB0aGUgZGVmYXVsdCBgYnV0dG9uYCBmb2N1cyBzdHlsZXMuXG4gKi9cblxuYnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZDtcbiAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xufVxuXG5idXR0b246aG92ZXIsXG5idXR0b246YWN0aXZlIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDA7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuaW5wdXRbdHlwZT1cInRleHRcIl0sXG5pbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sXG5pbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbmlucHV0W3R5cGU9XCJkYXRldGltZVwiXSxcbmlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbmlucHV0W3R5cGU9XCJudW1iZXJcIl0sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdLFxuaW5wdXRbdHlwZT1cInRlbFwiXSxcbmlucHV0W3R5cGU9XCJ0aW1lXCJdLFxuaW5wdXRbdHlwZT1cInVybFwiXSxcbnRleHRhcmVhIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuIiwiOnJvb3Qge1xuICAtLWJhc2UtZm9udC1zaXplOiAxNnB4O1xuICAtLWJhc2UtZm9udC1mYW1pbHk6ICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYU5ldWUsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIC0tYmFzZS1jb2xvci1mb250OiAjNDQ0YzU0O1xuICAtLWJhc2UtbGluZS1oZWlnaHQ6IDEuNTtcbiAgLS1iYXNlLWJnLWNvbG9yOiAjZWVlO1xufVxuXG5AY2hhcnNldCAnVVRGLTgnO1xuXG5ALW1zLXZpZXdwb3J0IHtcbiAgd2lkdGg6IGRldmljZS13aWR0aDtcbn1cblxuQHZpZXdwb3J0IHtcbiAgd2lkdGg6IGRldmljZS13aWR0aDtcbn1cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1iYXNlLWZvbnQtZmFtaWx5KTtcbiAgZm9udC1zaXplOiB2YXIoLS1iYXNlLWZvbnQtc2l6ZSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1iYXNlLWxpbmUtaGVpZ2h0KTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgY29sb3I6IHZhcigtLWJhc2UtY29sb3ItZm9udCk7XG59XG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG5ib2R5IHtcbiAgbWluLXdpZHRoOiAzMjBweDtcbiAgYmFja2dyb3VuZDogdmFyKC0tYmFzZS1iZy1jb2xvcik7XG59XG5cbjphY3RpdmUsXG46aG92ZXIge1xuICBvdXRsaW5lOiBub25lO1xufVxuIiwiOnJvb3Qge1xuICAtLWJhc2UtaGVhZGluZy1zaXplOiAxNnB4O1xuICAtLWJhc2UtaGVhZGluZy1jb2xvcjogIzQxNjk4ODtcbn1cblxuXG4vKipcbiAqIEhlYWRpbmdzXG4gKlxuICogUmVzZXQgdG8gZGVmYXVsdCBmb250IHNpemUgdG8gYWxsb3cgZWFzeSByZXVzZVxuICogVXNlIGV4dHJhIGNsYXNzZXMgZm9yIHN0eWxpbmdcbiAqL1xuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBmb250LXNpemU6IHZhcigtLWJhc2UtaGVhZGluZy1zaXplKTtcbiAgbWFyZ2luOiAwO1xuICBjb2xvcjogdmFyKC0tYmFzZS1oZWFkaW5nLWNvbG9yKTtcbn1cbiIsIjpyb290IHtcbiAgLS1iYXNlLWxpbmstY29sb3I6ICM0ZTlmZGQ7XG4gIC0tYmFzZS1saW5rLWNvbG9yLWhvdmVyOiBjb2xvcih2YXIoLS1iYXNlLWxpbmstY29sb3IpIHNoYWRlKDEwJSkpO1xuICAtLWJhc2UtbGluay1jb2xvci1hY3RpdmU6IGNvbG9yKHZhcigtLWJhc2UtbGluay1jb2xvcikgc2hhZGUoMjAlKSk7XG59XG5cbmEge1xuICBjb2xvcjogdmFyKC0tYmFzZS1saW5rLWNvbG9yKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmE6aG92ZXIge1xuICBjb2xvcjogdmFyKC0tYmFzZS1saW5rLWNvbG9yLWhvdmVyKTtcbn1cblxuYTphY3RpdmUge1xuICBjb2xvcjogdmFyKC0tYmFzZS1saW5rLWNvbG9yLWFjdGl2ZSk7XG59XG4iLCI6cm9vdCB7XG4gIC0tYmFzZS1saXN0LXJoeXRobTogMS41cmVtO1xufVxuXG5vbCxcbnVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG51bDplbXB0eSxcbm9sOmVtcHR5IHtcbiAgLyogSGlkZSBlbXB0eSBsaXN0cyAqL1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5kZCB7XG4gIG1hcmdpbjogMDtcbn1cbiIsIjpyb290IHtcbiAgLS1tZWRpYS1maWd1cmUtY29sb3I6ICM5OTk7XG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG5maWd1cmUge1xuICBtYXJnaW46IDA7XG59XG5cbmZpZ2NhcHRpb24ge1xuICBjb2xvcjogdmFyKC0tbWVkaWEtZmlndXJlLWNvbG9yKTtcbn1cbiIsIjpyb290IHtcbiAgLS1iYXNlLW1pc2MtaHItYm9yZGVyOiAxcHggc29saWQ7XG4gIC0tYmFzZS1taXNjLWhyLWJvcmRlci1jb2xvcjogIzk5OTtcbn1cblxuaHIge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItYm90dG9tOiB2YXIoLS1iYXNlLW1pc2MtaHItYm9yZGVyKTtcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1iYXNlLW1pc2MtaHItYm9yZGVyLWNvbG9yKTtcbiAgbWFyZ2luOiByaHl0aG0oMSkgMDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbmlmcmFtZSB7XG4gIGJvcmRlcjogMDtcbn1cblxuLyoqXG4gKiBTdXBwcmVzcyB0aGUgZm9jdXMgb3V0bGluZSBvbiBsaW5rcyB0aGF0IGNhbm5vdCBiZSBhY2Nlc3NlZCB2aWEga2V5Ym9hcmQuXG4gKiBUaGlzIHByZXZlbnRzIGFuIHVud2FudGVkIGZvY3VzIG91dGxpbmUgZnJvbSBhcHBlYXJpbmcgYXJvdW5kIGVsZW1lbnRzIHRoYXRcbiAqIG1pZ2h0IHN0aWxsIHJlc3BvbmQgdG8gcG9pbnRlciBldmVudHMuXG4gKi9cblxuW3RhYmluZGV4PVwiLTFcIl06Zm9jdXMge1xuICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7XG59XG4iLCI6cm9vdCB7XG4gIC0tYmFzZS10ZXh0LWNvZGUtZm9udC1mYW1pbHk6ICdNb25hY28nLCBDb3VyaWVyLCAnQ291cmllciBOZXcnLCBtb25vc3BhY2U7XG4gIC0tYmFzZS10ZXh0LWNvZGUtZm9udC1zaXplOiBjYWxjKDE0LzE2ICogMXJlbSk7XG4gIC0tYmFzZS10ZXh0LWNvZGUtZm9udC1jb2xvcjogIzU1NTtcbiAgLS1iYXNlLXRleHQtY29kZS1mb250LXdlaWdodDogNDAwO1xuICAtLWJhc2UtdGV4dC1yaHl0aG06IDEuNXJlbTtcbiAgLS1iYXNlLXRleHQta2JkLWJvcmRlcjogMXB4IHNvbGlkIGNvbG9yKCM0MTY5ODggYWxwaGEoNyUpKTtcbiAgLS1iYXNlLXRleHQta2JkLWJvcmRlci1ib3R0b206IDNweCBzb2xpZCBjb2xvcigjNDE2OTg4IGFscGhhKDIwJSkpO1xuICAtLWJhc2UtdGV4dC1rYmQtY29sb3ItYmc6ICNmZmY7XG59XG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWJhc2UtdGV4dC1jb2RlLWZvbnQtZmFtaWx5KTtcbiAgZm9udC1zaXplOiB2YXIoLS1iYXNlLXRleHQtY29kZS1mb250LXNpemUpO1xuICBmb250LXdlaWdodDogdmFyKC0tYmFzZS10ZXh0LWNvZGUtZm9udC13ZWlnaHQpO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDAgY2FsYyh2YXIoLS1iYXNlLXRleHQtcmh5dGhtKSAqIC4xMjUpO1xuICBjb2xvcjogdmFyKC0tYmFzZS10ZXh0LWNvZGUtZm9udC1jb2xvcik7XG59XG5cbmJsb2NrcXVvdGUsXG5kbCxcbmRkLFxucCxcbnByZSB7XG4gIG1hcmdpbjogMDtcbn1cblxua2JkIHtcbiAgbWFyZ2luOiAwIGNhbGModmFyKC0tYmFzZS10ZXh0LXJoeXRobSkgKiAuMTI1KTtcbiAgcGFkZGluZzogY2FsYyh2YXIoLS1iYXNlLXRleHQtcmh5dGhtKSAqIC4xMjUpIGNhbGModmFyKC0tYmFzZS10ZXh0LXJoeXRobSkgKiAuMzc1KTtcbiAgYm9yZGVyOiB2YXIoLS1iYXNlLXRleHQta2JkLWJvcmRlcik7XG4gIGJvcmRlci1ib3R0b206IHZhcigtLWJhc2UtdGV4dC1rYmQtYm9yZGVyLWJvdHRvbSk7XG4gIGJvcmRlci1yYWRpdXM6IGNhbGModmFyKC0tYmFzZS10ZXh0LXJoeXRobSkgKiAuMjUpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYXNlLXRleHQta2JkLWNvbG9yLWJnKTtcbiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiAnU291cmNlIFNhbnMgUHJvJywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2FOZXVlLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xufVxuIiwiLyoqIEBkZWZpbmUgQnV0dG9uR3JvdXA7IHVzZSBzdHJpY3QgKi9cblxuQGltcG9ydCAnc3VpdGNzcy1jb21wb25lbnRzLWJ1dHRvbi1ncm91cCc7XG5AaW1wb3J0ICdzdWl0Y3NzLWNvbXBvbmVudHMtYnV0dG9uLWdyb3VwL2J1dHRvbi1ncm91cC5wbHVnaW4uY3NzJztcblxuOnJvb3Qge1xuICAvKiBTZXQgb3VyIHZhcnMgaW4gY29ycmVjdCBmb3JtYXQgKi9cbiAgLS1CdXR0b25Hcm91cC1mb250LXNpemU6IDFyZW07XG4gIC0tQnV0dG9uR3JvdXAtYnV0dG9uLWJvcmRlci13aWR0aDogMDtcbiAgLyogRnJvbSBzdWl0Y3NzLWNvbXBvbmVudHMtYnV0dG9uLWdyb3VwICovXG4gIC0tZm9udC1zaXplLUJ1dHRvbkdyb3VwOiB2YXIoLS1CdXR0b25Hcm91cC1mb250LXNpemUpO1xuICAtLWJvcmRlci13aWR0aC1CdXR0b246IHZhcigtLUJ1dHRvbkdyb3VwLWJ1dHRvbi1ib3JkZXItd2lkdGgpO1xufVxuXG4uQnV0dG9uR3JvdXAtLWh6ID4gLkJ1dHRvbkdyb3VwLWl0ZW0ge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uQnV0dG9uR3JvdXAtLXJvdW5kIC5CdXR0b25Hcm91cC1pdGVtOmZpcnN0LWNoaWxkIC5CdXR0b24ge1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxMDBweDtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMTAwcHg7XG59XG5cbi5CdXR0b25Hcm91cC0tcm91bmQgLkJ1dHRvbkdyb3VwLWl0ZW06bGFzdC1jaGlsZCAuQnV0dG9uIHtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwMHB4O1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTAwcHg7XG59XG4iLCIvKiogQGRlZmluZSBCdXR0b25Hcm91cCAqL1xuXG4vKiEgc3VpdC1idXR0b24tZ3JvdXAgdjIuMi4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL3N1aXRjc3MgKi9cblxuOnJvb3Qge1xuICAtLWZvbnQtc2l6ZS1CdXR0b25Hcm91cDogMXJlbTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSB2aXN1YWwgY29ubmVjdGlvbiBiZXR3ZWVuIFVJIGFjdGlvbnMgdGhhdCBiZWxvbmcgdG9nZXRoZXIuXG4gKiBNdXN0IG9ubHkgY29udGFpbiBgQnV0dG9uR3JvdXAtaXRlbWAgb2JqZWN0cyBhcyBjaGlsZHJlbi5cbiAqXG4gKiBFeGFtcGxlIEhUTUw6XG4gKlxuICogPGRpdiBjbGFzcz1cIkJ1dHRvbkdyb3VwIFtCdXR0b25Hcm91cC0taHpdXCI+XG4gKiAgIDxkaXYgY2xhc3M9XCJCdXR0b25Hcm91cC1pdGVtXCI+XG4gKiAgICAgPGEgY2xhc3M9XCJCdXR0b25cIiBocmVmPVwiI1wiPkRhc2hib2FyZDwvYT5cbiAqICAgPC9kaXY+XG4gKiAgIDxkaXYgY2xhc3M9XCJCdXR0b25Hcm91cC1pdGVtXCI+XG4gKiAgICAgPGEgY2xhc3M9XCJCdXR0b25cIiBocmVmPVwiI1wiPkFjY291bnQ8L2E+XG4gKiAgIDwvZGl2PlxuICogICA8ZGl2IGNsYXNzPVwiQnV0dG9uR3JvdXAtaXRlbVwiPlxuICogICAgIDxhIGNsYXNzPVwiQnV0dG9uXCIgaHJlZj1cIiNcIj5Mb2dvdXQ8L2E+XG4gKiAgIDwvZGl2PlxuICogPC9kaXY+XG4gKi9cblxuLyoqXG4gKiBCdXR0b24gZ3JvdXBcbiAqXG4gKiAxLiBFbnN1cmUgY29tcG9uZW50IGlzIGZ1bGwtd2lkdGggaWYgYXBwbGllZCB0byBlbGVtZW50cyB0aGF0IGFyZVxuICogICAgYGlubGluZS1ibG9ja2AgYnkgZGVmYXVsdC5cbiAqIDIuIENvbGxhcHNlIHdoaXRlc3BhY2UgYmV0d2VlbiBjaGlsZCBlbGVtZW50cy4gT25seSBuZWNlc3NhcnkgZm9yIHRoZVxuICogICAgYEJ1dHRvbkdyb3VwLS1oemAgbW9kaWZpZXIgd2hpY2ggbGF5cyBpdGVtcyBvdXQgYXMgYGlubGluZS1ibG9ja2AsIGJ1dFxuICogICAgaW5jbHVkZWQgaW4gdGhlIGJhc2UgY29tcG9uZW50IHNvIHRoYXQgYWZmZWN0cyBvbiBgZm9udC1zaXplYCBhcmVcbiAqICAgIGNvbnNpc3RlbnQuXG4gKiAzLiBSZW1vdmUgYW55IGRlZmF1bHQgc3R5bGVzIHRoYXQgbWlnaHQgYmUgcHJlc2VudCB3aGVuIGBvbGAgb3IgYHVsYCBhcmUgdGhlXG4gKiAgICByb290IGVsZW1lbnQuXG4gKi9cblxuLkJ1dHRvbkdyb3VwIHtcbiAgZGlzcGxheTogYmxvY2s7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAwOyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMyAqL1xuICBsaXN0LXN0eWxlOiBub25lOyAvKiAzICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBCdXR0b24gZ3JvdXAgaXRlbVxuICpcbiAqIDEuIE1ha2UgaXQgZnVsbC13aWR0aCBpZiBhcHBsaWVkIHRvIGVsZW1lbnRzIHRoYXQgYXJlIGBpbmxpbmUtYmxvY2tgIGJ5XG4gKiAgICBkZWZhdWx0LlxuICogMi4gUmVzZXQgdGhlIGZvbnQgc2l6ZSBvZiB0aGUgYnV0dG9ucyB0byB0aGUgcm9vdCBmb250IHNpemUuXG4gKi9cblxuLkJ1dHRvbkdyb3VwLWl0ZW0ge1xuICBkaXNwbGF5OiBibG9jazsgLyogMSAqL1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1CdXR0b25Hcm91cCk7IC8qIDIgKi9cbn1cblxuLkJ1dHRvbkdyb3VwLWl0ZW0gPiAuQnV0dG9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKipcbiAqIEVuc3VyZSB0aGF0IGludGVyYWN0aW9ucyB3aXRoIGEgYnV0dG9uIG1ha2UgaXQgc2l0IG9uIHRvcCBvZiBvdGhlciBidXR0b25zXG4gKiBpbiB0aGUgZ3JvdXAuXG4gKi9cblxuLkJ1dHRvbkdyb3VwLWl0ZW0gPiAuQnV0dG9uOmhvdmVyLFxuLkJ1dHRvbkdyb3VwLWl0ZW0gPiAuQnV0dG9uOmZvY3VzLFxuLkJ1dHRvbkdyb3VwLWl0ZW0gPiAuQnV0dG9uOmFjdGl2ZSxcbi5CdXR0b25Hcm91cC1pdGVtID4gLkJ1dHRvbi5pcy1wcmVzc2VkIHtcbiAgei1pbmRleDogMTtcbn1cblxuXG4vKiBNb2RpZmllcjogaG9yaXpvbnRhbCBidXR0b25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4uQnV0dG9uR3JvdXAtLWh6ID4gLkJ1dHRvbkdyb3VwLWl0ZW0ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG4iLCIvKiogQGRlZmluZSBCdXR0b25Hcm91cCAqL1xuXG4vKiEgc3VpdC1idXR0b24tZ3JvdXAgdjIuMi4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL3N1aXRjc3MgKi9cblxuLyogTW9kaWZpZXI6IGNvbGxhcHNlIGJ1dHRvbiBib3JkZXJzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEluY2x1ZGVzIGFwcHJvcHJpYXRlIHJlbW92YWwgb2YgYGJvcmRlci1yYWRpdXNgLlxuICogQWxsIGJyb3dzZXJzIHRoYXQgc3VwcG9ydCBgYm9yZGVyLXJhZGl1c2AgYWxzbyBzdXBwb3J0IENTUyAzIHBzZXVkby1jbGFzc2VzLlxuICovXG5cbi8qKlxuICogVmVydGljYWwgY29sbGFwc2VcbiAqL1xuXG4uQnV0dG9uR3JvdXAtLWJvcmRlckNvbGxhcHNlOm5vdCguQnV0dG9uR3JvdXAtLWh6KSA+IC5CdXR0b25Hcm91cC1pdGVtIHtcbiAgbWFyZ2luLXRvcDogY2FsYyh2YXIoLS1ib3JkZXItd2lkdGgtQnV0dG9uKSAqIC0xcHgpO1xufVxuXG4uQnV0dG9uR3JvdXAtLWJvcmRlckNvbGxhcHNlOm5vdCguQnV0dG9uR3JvdXAtLWh6KSA+IC5CdXR0b25Hcm91cC1pdGVtOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLkJ1dHRvbkdyb3VwLS1ib3JkZXJDb2xsYXBzZTpub3QoLkJ1dHRvbkdyb3VwLS1oeikgPiAuQnV0dG9uR3JvdXAtaXRlbTpub3QoOmZpcnN0LWNoaWxkKTpub3QoOmxhc3QtY2hpbGQpID4gLkJ1dHRvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG59XG5cbi5CdXR0b25Hcm91cC0tYm9yZGVyQ29sbGFwc2U6bm90KC5CdXR0b25Hcm91cC0taHopID4gLkJ1dHRvbkdyb3VwLWl0ZW06Zmlyc3QtY2hpbGQ6bm90KDpvbmx5LWNoaWxkKSA+IC5CdXR0b24ge1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcbn1cblxuLkJ1dHRvbkdyb3VwLS1ib3JkZXJDb2xsYXBzZTpub3QoLkJ1dHRvbkdyb3VwLS1oeikgPiAuQnV0dG9uR3JvdXAtaXRlbTpsYXN0LWNoaWxkOm5vdCg6b25seS1jaGlsZCkgPiAuQnV0dG9uIHtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XG59XG5cbi8qKlxuICogSG9yaXpvbnRhbCBjb2xsYXBzZVxuICovXG5cbi5CdXR0b25Hcm91cC0tYm9yZGVyQ29sbGFwc2UuQnV0dG9uR3JvdXAtLWh6ID4gLkJ1dHRvbkdyb3VwLWl0ZW0ge1xuICBtYXJnaW4tbGVmdDogY2FsYyh2YXIoLS1ib3JkZXItd2lkdGgtQnV0dG9uKSAqIC0xcHgpO1xufVxuXG4uQnV0dG9uR3JvdXAtLWJvcmRlckNvbGxhcHNlLkJ1dHRvbkdyb3VwLS1oeiA+IC5CdXR0b25Hcm91cC1pdGVtOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi5CdXR0b25Hcm91cC0tYm9yZGVyQ29sbGFwc2UuQnV0dG9uR3JvdXAtLWh6ID4gLkJ1dHRvbkdyb3VwLWl0ZW06bm90KDpmaXJzdC1jaGlsZCk6bm90KDpsYXN0LWNoaWxkKSA+IC5CdXR0b24ge1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuXG4uQnV0dG9uR3JvdXAtLWJvcmRlckNvbGxhcHNlLkJ1dHRvbkdyb3VwLS1oeiA+IC5CdXR0b25Hcm91cC1pdGVtOmZpcnN0LWNoaWxkOm5vdCg6b25seS1jaGlsZCkgPiAuQnV0dG9uIHtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xufVxuXG4uQnV0dG9uR3JvdXAtLWJvcmRlckNvbGxhcHNlLkJ1dHRvbkdyb3VwLS1oeiA+IC5CdXR0b25Hcm91cC1pdGVtOmxhc3QtY2hpbGQ6bm90KDpvbmx5LWNoaWxkKSA+IC5CdXR0b24ge1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xufVxuIiwiLyoqIEBkZWZpbmUgQnV0dG9uOyB1c2Ugc3RyaWN0ICovXG5cbkBpbXBvcnQgJ3N1aXRjc3MtY29tcG9uZW50cy1idXR0b24nO1xuXG46cm9vdCB7XG4gIC0tQnV0dG9uLXJoeXRobTogMS41cmVtO1xuICAtLUJ1dHRvbi1ib3JkZXItY29sb3I6IGN1cnJlbnRjb2xvcjtcbiAgLS1CdXR0b24tYm9yZGVyLXdpZHRoOiAwO1xuICAtLUJ1dHRvbi1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC0tQnV0dG9uLWRpc2FibGVkLW9wYWNpdHk6IDAuNjtcbiAgLS1CdXR0b24tZm9udDogaW5oZXJpdDtcbiAgLS1CdXR0b24tcGFkZGluZzogLjM3NXJlbSAuNzVyZW07XG4gIC0tQnV0dG9uLXBhZGRpbmctc251ZzogLjM3NXJlbTtcbiAgLS1CdXR0b24tcGFkZGluZy1zbWFsbDogLjE4NzVyZW0gLjc1cmVtO1xuICAtLUJ1dHRvbi1jb2xvci10ZXh0LWludmVydDogI2ZmZjtcbiAgLS1CdXR0b24tY29sb3ItZGVmYXVsdDogY29sb3IoIzQxNjk4OCB0aW50KDg1JSkpO1xuICAtLUJ1dHRvbi1jb2xvci1wcmltYXJ5OiAjNGU5ZmRkO1xuICAtLUJ1dHRvbi1jb2xvci1zZWNvbmRhcnk6ICM0MTY5ODg7XG4gIC0tQnV0dG9uLWNvbG9yLWhpZ2hsaWdodDogIzRlOWZkZDtcbiAgLS1CdXR0b24tY29sb3Itc3VjY2VzczogIzcwYTk4YjtcbiAgLS1CdXR0b24tY29sb3ItdW5zdXJlOiAjZTBjMzUwO1xuICAtLUJ1dHRvbi1jb2xvci1uZXV0cmFsOiBjb2xvcigjNDE2OTg4IHRpbnQoNTAlKSk7XG4gIC0tQnV0dG9uLWNvbG9yLXdhcm5pbmc6ICNlMzgyNGU7XG4gIC0tQnV0dG9uLWNvbG9yLWRhbmdlcjogI2UwNTc1YjtcbiAgLS1CdXR0b24tdHJhbnNpdGlvbjogYWxsIC4yNXMgY3ViaWMtYmV6aWVyKC4wNzUsIC44MjAsIC4xNjUsIDEuMDAwKTtcbn1cblxuLkJ1dHRvbiB7XG4gIHRyYW5zaXRpb246IHZhcigtLUJ1dHRvbi10cmFuc2l0aW9uKTtcbiAgbWluLWhlaWdodDogY2FsYyh2YXIoLS1CdXR0b24tcmh5dGhtKSAqIDEuMjUpO1xuICB0ZXh0LXNoYWRvdzogMXB4IDFweCAwIHJnYmEoMCwwLDAsMC4xNSk7XG59XG5cbi5CdXR0b246ZGlzYWJsZWQsXG4uQnV0dG9uLmlzLWRpc2FibGVkIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi5CdXR0b246aG92ZXIsXG4uQnV0dG9uOmFjdGl2ZSxcbi5CdXR0b24uaXMtYWN0aXZlIHtcbiAgb3V0bGluZTogaW5oZXJpdDtcbn1cblxuLyogRGVmYXVsdCAqL1xuXG4uQnV0dG9uLS1kZWZhdWx0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tQnV0dG9uLWNvbG9yLWRlZmF1bHQpO1xufVxuXG4uQnV0dG9uLS1kZWZhdWx0OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IodmFyKC0tQnV0dG9uLWNvbG9yLWRlZmF1bHQpIHNoYWRlKDEwJSkpO1xufVxuXG4uQnV0dG9uLS1kZWZhdWx0OmFjdGl2ZSxcbi5CdXR0b24tLWRlZmF1bHQuaXMtYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IodmFyKC0tQnV0dG9uLWNvbG9yLWRlZmF1bHQpIHNoYWRlKDE1JSkpO1xufVxuXG4vKipcbiAqIENvbG9yIE1vZGlmaWVyc1xuICovXG5cbi8qIFByaW1hcnkgKi9cblxuLkJ1dHRvbi0tcHJpbWFyeSB7XG4gIGNvbG9yOiB2YXIoLS1CdXR0b24tY29sb3ItdGV4dC1pbnZlcnQpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1CdXR0b24tY29sb3ItcHJpbWFyeSk7XG59XG5cbi5CdXR0b24tLXByaW1hcnk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih2YXIoLS1CdXR0b24tY29sb3ItcHJpbWFyeSkgc2hhZGUoMTAlKSk7XG59XG5cbi5CdXR0b24tLXByaW1hcnk6YWN0aXZlLFxuLkJ1dHRvbi0tcHJpbWFyeS5pcy1hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih2YXIoLS1CdXR0b24tY29sb3ItcHJpbWFyeSkgc2hhZGUoMTUlKSk7XG59XG5cbi8qIFNlY29uZGFyeSAqL1xuXG4uQnV0dG9uLS1zZWNvbmRhcnkge1xuICBjb2xvcjogdmFyKC0tQnV0dG9uLWNvbG9yLXRleHQtaW52ZXJ0KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tQnV0dG9uLWNvbG9yLXNlY29uZGFyeSk7XG59XG5cbi5CdXR0b24tLXNlY29uZGFyeTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IGNvbG9yKHZhcigtLUJ1dHRvbi1jb2xvci1zZWNvbmRhcnkpIHNoYWRlKDEwJSkpO1xufVxuXG4uQnV0dG9uLS1zZWNvbmRhcnk6YWN0aXZlLFxuLkJ1dHRvbi0tc2Vjb25kYXJ5LmlzLWFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGNvbG9yKHZhcigtLUJ1dHRvbi1jb2xvci1zZWNvbmRhcnkpIHNoYWRlKDE1JSkpO1xufVxuXG4vKiBIaWdodGxpZ2h0ICovXG5cbi5CdXR0b24tLWhpZ2hsaWdodCB7XG4gIGNvbG9yOiB2YXIoLS1CdXR0b24tY29sb3ItdGV4dC1pbnZlcnQpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1CdXR0b24tY29sb3ItaGlnaGxpZ2h0KTtcbn1cblxuLkJ1dHRvbi0taGlnaGxpZ2h0OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IodmFyKC0tQnV0dG9uLWNvbG9yLWhpZ2hsaWdodCkgc2hhZGUoMTAlKSk7XG59XG5cbi5CdXR0b24tLWhpZ2hsaWdodDphY3RpdmUsXG4uQnV0dG9uLS1oaWdobGlnaHQuaXMtYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IodmFyKC0tQnV0dG9uLWNvbG9yLWhpZ2hsaWdodCkgc2hhZGUoMTUlKSk7XG59XG5cbi8qIFN1Y2Nlc3MgKi9cblxuLkJ1dHRvbi0tc3VjY2VzcyB7XG4gIGNvbG9yOiB2YXIoLS1CdXR0b24tY29sb3ItdGV4dC1pbnZlcnQpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1CdXR0b24tY29sb3Itc3VjY2Vzcyk7XG59XG5cbi5CdXR0b24tLXN1Y2Nlc3M6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih2YXIoLS1CdXR0b24tY29sb3Itc3VjY2Vzcykgc2hhZGUoMTAlKSk7XG59XG5cbi5CdXR0b24tLXN1Y2Nlc3M6YWN0aXZlLFxuLkJ1dHRvbi0tc3VjY2Vzcy5pcy1hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih2YXIoLS1CdXR0b24tY29sb3Itc3VjY2Vzcykgc2hhZGUoMTUlKSk7XG59XG5cbi8qIFVuc3VyZSAqL1xuXG4uQnV0dG9uLS11bnN1cmUge1xuICBjb2xvcjogdmFyKC0tQnV0dG9uLWNvbG9yLXRleHQtaW52ZXJ0KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tQnV0dG9uLWNvbG9yLXVuc3VyZSk7XG59XG5cbi5CdXR0b24tLXVuc3VyZTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IGNvbG9yKHZhcigtLUJ1dHRvbi1jb2xvci11bnN1cmUpIHNoYWRlKDEwJSkpO1xufVxuXG4uQnV0dG9uLS11bnN1cmU6YWN0aXZlLFxuLkJ1dHRvbi0tdW5zdXJlLmlzLWFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGNvbG9yKHZhcigtLUJ1dHRvbi1jb2xvci11bnN1cmUpIHNoYWRlKDE1JSkpO1xufVxuXG4vKiBOZXV0cmFsICovXG5cbi5CdXR0b24tLW5ldXRyYWwge1xuICBjb2xvcjogdmFyKC0tQnV0dG9uLWNvbG9yLXRleHQtaW52ZXJ0KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tQnV0dG9uLWNvbG9yLW5ldXRyYWwpO1xufVxuXG4uQnV0dG9uLS1uZXV0cmFsOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IodmFyKC0tQnV0dG9uLWNvbG9yLW5ldXRyYWwpIHNoYWRlKDEwJSkpO1xufVxuXG4uQnV0dG9uLS1uZXV0cmFsOmFjdGl2ZSxcbi5CdXR0b24tLW5ldXRyYWwuaXMtYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IodmFyKC0tQnV0dG9uLWNvbG9yLW5ldXRyYWwpIHNoYWRlKDE1JSkpO1xufVxuXG4vKiBXYXJuaW5nICovXG5cbi5CdXR0b24tLXdhcm5pbmcge1xuICBjb2xvcjogdmFyKC0tQnV0dG9uLWNvbG9yLXRleHQtaW52ZXJ0KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tQnV0dG9uLWNvbG9yLXdhcm5pbmcpO1xufVxuXG4uQnV0dG9uLS13YXJuaW5nOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IodmFyKC0tQnV0dG9uLWNvbG9yLXdhcm5pbmcpIHNoYWRlKDEwJSkpO1xufVxuXG4uQnV0dG9uLS13YXJuaW5nOmFjdGl2ZSxcbi5CdXR0b24tLXdhcm5pbmcuaXMtYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IodmFyKC0tQnV0dG9uLWNvbG9yLXdhcm5pbmcpIHNoYWRlKDE1JSkpO1xufVxuXG4vKiBEYW5nZXIgKi9cblxuLkJ1dHRvbi0tZGFuZ2VyIHtcbiAgY29sb3I6IHZhcigtLUJ1dHRvbi1jb2xvci10ZXh0LWludmVydCk7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLUJ1dHRvbi1jb2xvci1kYW5nZXIpO1xufVxuXG4uQnV0dG9uLS1kYW5nZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih2YXIoLS1CdXR0b24tY29sb3ItZGFuZ2VyKSBzaGFkZSgxMCUpKTtcbn1cblxuLkJ1dHRvbi0tZGFuZ2VyOmFjdGl2ZSxcbi5CdXR0b24tLWRhbmdlci5pcy1hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih2YXIoLS1CdXR0b24tY29sb3ItZGFuZ2VyKSBzaGFkZSgxNSUpKTtcbn1cblxuLyogSW52aXNpYmxlICovXG5cbi5CdXR0b24tLWludmlzaWJsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogY29sb3IodmFyKC0tQnV0dG9uLWNvbG9yLXNlY29uZGFyeSkgdGludCg1MCUpKTtcbn1cblxuLkJ1dHRvbi0taW52aXNpYmxlOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IodmFyKC0tQnV0dG9uLWNvbG9yLXNlY29uZGFyeSkgdGludCg5MiUpKTtcbiAgY29sb3I6IGNvbG9yKHZhcigtLUJ1dHRvbi1jb2xvci1zZWNvbmRhcnkpIHRpbnQoMzAlKSk7XG59XG5cbi5CdXR0b24tLWludmlzaWJsZTphY3RpdmUsXG4uQnV0dG9uLS1pbnZpc2libGUuaXMtYWN0aXZlIHtcbiAgY29sb3I6IHZhcigtLUJ1dHRvbi1jb2xvci1zZWNvbmRhcnkpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih2YXIoLS1CdXR0b24tY29sb3Itc2Vjb25kYXJ5KSB0aW50KDg4JSkpO1xufVxuXG4vKipcbiAqIEJ1dHRvbiBUeXBlIE1vZGlmaWVyc1xuICovXG5cbi8qIFNudWcgKi9cblxuLkJ1dHRvbi0tc251ZyB7XG4gIHBhZGRpbmctbGVmdDogdmFyKC0tQnV0dG9uLXBhZGRpbmctc251Zyk7XG4gIHBhZGRpbmctcmlnaHQ6IHZhcigtLUJ1dHRvbi1wYWRkaW5nLXNudWcpO1xufVxuXG4uQnV0dG9uLS1zbWFsbCB7XG4gIG1pbi1oZWlnaHQ6IGNhbGModmFyKC0tQnV0dG9uLXJoeXRobSkgKiAxKTtcbiAgcGFkZGluZzogdmFyKC0tQnV0dG9uLXBhZGRpbmctc21hbGwpO1xuICBmb250LXNpemU6IGNhbGMoMTQvMTYpcmVtO1xufVxuIiwiLyoqIEBkZWZpbmUgQnV0dG9uOyB1c2Ugc3RyaWN0ICovXG5cbjpyb290IHtcbiAgLS1CdXR0b24tYm9yZGVyLWNvbG9yOiBjdXJyZW50Y29sb3I7XG4gIC0tQnV0dG9uLWJvcmRlci13aWR0aDogMXB4O1xuICAtLUJ1dHRvbi1jb2xvcjogaW5oZXJpdDtcbiAgLS1CdXR0b24tZGlzYWJsZWQtb3BhY2l0eTogMC42O1xuICAtLUJ1dHRvbi1mb250OiBpbmhlcml0O1xuICAtLUJ1dHRvbi1wYWRkaW5nOiAwLjRlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogVGhlIGJ1dHRvbiBjbGFzc2VzIGFyZSBiZXN0IGFwcGxpZWQgdG8gbGlua3MsIGJ1dHRvbnMsIGFuZCBzdWJtaXQgaW5wdXRzLlxuICogVGhlc2UgY29tcG9uZW50cyBjYW4gYmUgdXNlZCBpbiBmb3JtcywgYXMgY2FsbHMgdG8gYWN0aW9uLCBvciBhcyBwYXJ0IG9mIHRoZVxuICogZ2VuZXJhbCBVSSBvZiB0aGUgc2l0ZS9hcHAuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0cyBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMi4gTm9ybWFsaXplIGBib3gtc2l6aW5nYCBhY3Jvc3MgYWxsIGVsZW1lbnRzIHRoYXQgdGhpcyBjb21wb25lbnQgY291bGQgYmVcbiAqICAgIGFwcGxpZWQgdG8uXG4gKiAzLiBJbmhlcml0IHRleHQgY29sb3IgZnJvbSBhbmNlc3Rvci5cbiAqIDQuIEluaGVyaXQgZm9udCBzdHlsZXMgZnJvbSBhbmNlc3Rvci5cbiAqIDUuIE5vcm1hbGl6ZSBgbGluZS1oZWlnaHRgLiBGb3IgYGlucHV0YCwgaXQgY2FuJ3QgYmUgY2hhbmdlZCBmcm9tIGBub3JtYWxgIGluIEZpcmVmb3ggNCsuXG4gKiA2LiBQcmV2ZW50IGJ1dHRvbiB0ZXh0IGZyb20gYmVpbmcgc2VsZWN0YWJsZS5cbiAqIDcuIE1ha2Ugc3VyZSBgaW5wdXRgIHdpbGwgd3JhcCB0ZXh0IGFjcm9zcyBtdWx0aXBsZSBsaW5lcy5cbiAqL1xuXG4uQnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyAvKiAxICovXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXItY29sb3I6IHZhcigtLUJ1dHRvbi1ib3JkZXItY29sb3IpO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IHZhcigtLUJ1dHRvbi1ib3JkZXItd2lkdGgpO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAyICovXG4gIGNvbG9yOiB2YXIoLS1CdXR0b24tY29sb3IpOyAvKiAzICovXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250OiB2YXIoLS1CdXR0b24tZm9udCk7IC8qIDQgKi9cbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgLyogNSAqL1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IHZhcigtLUJ1dHRvbi1wYWRkaW5nKTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7IC8qIDYgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogNyAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBleGNlc3MgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCtcbiAqL1xuXG4uQnV0dG9uOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFdvcmsgYXJvdW5kIGEgRmlyZWZveC9JRSBidWcgd2hlcmUgdGhlIHRyYW5zcGFyZW50IGBidXR0b25gIGJhY2tncm91bmRcbiAqIHJlc3VsdHMgaW4gYSBsb3NzIG9mIHRoZSBkZWZhdWx0IGBidXR0b25gIGZvY3VzIHN0eWxlcy5cbiAqL1xuXG4uQnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZDtcbiAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xufVxuXG4vKipcbiAqIFVJIHN0YXRlc1xuICovXG5cbi5CdXR0b246aG92ZXIsXG4uQnV0dG9uOmZvY3VzLFxuLkJ1dHRvbjphY3RpdmUge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5CdXR0b246ZGlzYWJsZWQsXG4uQnV0dG9uLmlzLWRpc2FibGVkIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICBvcGFjaXR5OiB2YXIoLS1CdXR0b24tZGlzYWJsZWQtb3BhY2l0eSk7XG59XG4iLCIvKiogQGRlZmluZSBJbnB1dEdyb3VwOyB1c2Ugc3RyaWN0ICovXG5cbjpyb290IHtcbiAgLS1JbnB1dEdyb3VwLXJoeXRobTogMS41cmVtO1xuICAtLUlucHV0R3JvdXAtaW5wdXQtY29sb3I6ICMyMDcxOEE7XG4gIC0tSW5wdXRHcm91cC1hZGRvbi1jb2xvcjogY29sb3IoIzIwNzE4QSB0aW50KDMwJSkpO1xuICAtLUlucHV0R3JvdXAtYm9yZGVyLWNvbG9yOiBjb2xvcigjMjA3MThBIHRpbnQoNjAlKSk7XG4gIC0tSW5wdXRHcm91cC1ib3JkZXItLWZvY3VzLWNvbG9yOiBjb2xvcigjMjA3MThBIHRpbnQoMzAlKSk7XG4gIC0tSW5wdXRHcm91cC10cmFuc2l0aW9uOiAwLjJzIGN1YmljLWJlemllciguMjYsIC40NywgLjM2LCAuOTQpO1xufVxuXG4uSW5wdXRHcm91cCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogdGFibGU7XG4gIGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7XG59XG5cbi5JbnB1dEdyb3VwLWlucHV0LFxuLklucHV0R3JvdXAtYWRkb24sXG4uSW5wdXRHcm91cC1idXR0b24ge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICB0cmFuc2l0aW9uOiB2YXIoLS1JbnB1dEdyb3VwLXRyYW5zaXRpb24pO1xufVxuXG4uSW5wdXRHcm91cC1pbnB1dCxcbi5JbnB1dEdyb3VwLWFkZG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHBhZGRpbmc6IDAgY2FsYyh2YXIoLS1JbnB1dEdyb3VwLXJoeXRobSkgKiAuMjUpO1xufVxuXG4uSW5wdXRHcm91cC1pbnB1dCB7XG4gIGJvcmRlcjogbm9uZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGNvbG9yOiB2YXIoLS1JbnB1dEdyb3VwLWlucHV0LWNvbG9yKTtcbn1cblxuLklucHV0R3JvdXAtYWRkb24ge1xuICBjb2xvcjogdmFyKC0tSW5wdXRHcm91cC1hZGRvbi1jb2xvcik7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDElO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uSW5wdXRHcm91cC1hZGRvbjpiZWZvcmUge1xuICBjb250ZW50OiAnICc7XG59XG5cbi5JbnB1dEdyb3VwLmlzLWZvY3VzZWQgLklucHV0R3JvdXAtaW5wdXQsXG4uSW5wdXRHcm91cC5pcy1mb2N1c2VkIC5JbnB1dEdyb3VwLWFkZG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cblxuLklucHV0R3JvdXAtLWJvcmRlcmVkIC5JbnB1dEdyb3VwLWlucHV0LFxuLklucHV0R3JvdXAtLWJvcmRlcmVkIC5JbnB1dEdyb3VwLWFkZG9uLFxuLklucHV0R3JvdXAtLW91dGxpbmVkIC5JbnB1dEdyb3VwLWlucHV0LFxuLklucHV0R3JvdXAtLW91dGxpbmVkIC5JbnB1dEdyb3VwLWFkZG9uIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLUlucHV0R3JvdXAtYm9yZGVyLWNvbG9yKTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLUlucHV0R3JvdXAtYm9yZGVyLWNvbG9yKTtcbn1cblxuLklucHV0R3JvdXAtLWJvcmRlcmVkIC5JbnB1dEdyb3VwLWlucHV0IHtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCB2YXIoLS1JbnB1dEdyb3VwLWJvcmRlci1jb2xvcik7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHZhcigtLUlucHV0R3JvdXAtYm9yZGVyLWNvbG9yKTtcbn1cblxuLklucHV0R3JvdXAtLW91dGxpbmVkIC5JbnB1dEdyb3VwLWlucHV0OmZpcnN0LWNoaWxkLFxuLklucHV0R3JvdXAtLW91dGxpbmVkIC5JbnB1dEdyb3VwLWFkZG9uOmZpcnN0LWNoaWxkIHtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCB2YXIoLS1JbnB1dEdyb3VwLWJvcmRlci1jb2xvcik7XG59XG5cbi5JbnB1dEdyb3VwLS1vdXRsaW5lZCAuSW5wdXRHcm91cC1pbnB1dDpsYXN0LWNoaWxkLFxuLklucHV0R3JvdXAtLW91dGxpbmVkIC5JbnB1dEdyb3VwLWFkZG9uOmxhc3QtY2hpbGQge1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCB2YXIoLS1JbnB1dEdyb3VwLWJvcmRlci1jb2xvcik7XG59XG5cbi5JbnB1dEdyb3VwLS1ib3JkZXJlZC5pcy1mb2N1c2VkIC5JbnB1dEdyb3VwLWlucHV0LFxuLklucHV0R3JvdXAtLWJvcmRlcmVkLmlzLWZvY3VzZWQgLklucHV0R3JvdXAtYWRkb24sXG4uSW5wdXRHcm91cC0tb3V0bGluZWQuaXMtZm9jdXNlZCAuSW5wdXRHcm91cC1pbnB1dCxcbi5JbnB1dEdyb3VwLS1vdXRsaW5lZC5pcy1mb2N1c2VkIC5JbnB1dEdyb3VwLWFkZG9uIHtcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1JbnB1dEdyb3VwLWJvcmRlci0tZm9jdXMtY29sb3IpO1xufVxuXG4uSW5wdXRHcm91cC0tcm91bmRlZCAuSW5wdXRHcm91cC1pbnB1dDpmaXJzdC1jaGlsZCxcbi5JbnB1dEdyb3VwLS1yb3VuZGVkIC5JbnB1dEdyb3VwLWFkZG9uOmZpcnN0LWNoaWxkIHtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogY2FsYyh2YXIoLS1JbnB1dEdyb3VwLXJoeXRobSkgKiAxKTtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogY2FsYyh2YXIoLS1JbnB1dEdyb3VwLXJoeXRobSkgKiAxKTtcbiAgcGFkZGluZy1sZWZ0OiBjYWxjKHZhcigtLUlucHV0R3JvdXAtcmh5dGhtKSAqIC4zNzUpO1xufVxuXG4uSW5wdXRHcm91cC0tcm91bmRlZCAuSW5wdXRHcm91cC1pbnB1dDpsYXN0LWNoaWxkLFxuLklucHV0R3JvdXAtLXJvdW5kZWQgLklucHV0R3JvdXAtYWRkb246bGFzdC1jaGlsZCB7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiBjYWxjKHZhcigtLUlucHV0R3JvdXAtcmh5dGhtKSAqIDEpO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogY2FsYyh2YXIoLS1JbnB1dEdyb3VwLXJoeXRobSkgKiAxKTtcbiAgcGFkZGluZy1yaWdodDogY2FsYyh2YXIoLS1JbnB1dEdyb3VwLXJoeXRobSkgKiAuMzc1KTtcbn1cbiIsIi8qKiBAZGVmaW5lIERyb3Bkb3duOyB1c2Ugc3RyaWN0ICovXG5cbjpyb290IHtcbiAgLS1Ecm9wZG93bi1yaHl0aG0gICAgICAgICAgICAgIDogMS41cmVtO1xuICAtLURyb3Bkb3duLXRyYW5zaXRpb24gICAgICAgICAgOiBhbGwgLjJzIGN1YmljLWJlemllciguMTc1LCAuODg1LCAuMzIwLCAxLjI3NSk7XG4gIC0tRHJvcGRvd24tei1pbmRleCAgICAgICAgICAgICA6IDEwMDtcbiAgLS1Ecm9wZG93bi1pcy1hY3RpdmUtei1pbmRleCAgIDogOTAwO1xuICAtLURyb3Bkb3duLWNvbnRlbnQtY29sb3ItYmcgICAgOiAjZmZmO1xuICAtLURyb3Bkb3duLWNvbnRlbnQtYm9yZGVyICAgICAgOiAxcHggc29saWQgcmdiYSgwLDAsMCwuMTUpO1xuICAtLURyb3Bkb3duLWNvbnRlbnQtei1pbmRleCAgICAgOiA4MDA7XG4gIC0tRHJvcGRvd24tdGl0bGUtc2l6ZSAgICAgICAgICA6IGNhbGMoMTQvMTYgKiAxcmVtKTtcbiAgLS1Ecm9wZG93bi10aXRsZS1jb2xvciAgICAgICAgIDogY29sb3IoIzQxNjk4OCB0aW50KDIwJSkpO1xuICAtLURyb3Bkb3duLXRpdGxlLWNvbG9yLWJnICAgICAgOiBjb2xvcigjNDE2OTg4IHRpbnQoOTAlKSk7XG4gIC0tRHJvcGRvd24taXRlbS1jb2xvciAgICAgICAgICA6ICM0ZTlmZGQ7XG4gIC0tRHJvcGRvd24taXRlbS1ob3Zlci1jb2xvciAgICA6IHZhcigtLURyb3Bkb3duLWNvbnRlbnQtY29sb3ItYmcpO1xuICAtLURyb3Bkb3duLWl0ZW0taG92ZXItY29sb3ItYmcgOiB2YXIoLS1Ecm9wZG93bi1pdGVtLWNvbG9yKTtcbiAgLS1Ecm9wZG93bi1pdGVtLXRyYW5zaXRpb24gICAgIDogYWxsIC4ycyBlYXNlLW91dDtcbn1cblxuLkRyb3Bkb3duIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiB2YXIoLS1Ecm9wZG93bi16LWluZGV4KTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLkRyb3Bkb3duLmlzLWFjdGl2ZSB7XG4gIHotaW5kZXg6IHZhcigtLURyb3Bkb3duLWlzLWFjdGl2ZS16LWluZGV4KTtcbn1cblxuLkRyb3Bkb3duLXRvZ2dsZUljb24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRyYW5zaXRpb246IHZhcigtLURyb3Bkb3duLXRyYW5zaXRpb24pO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5Ecm9wZG93bi5pcy1hY3RpdmUgLkRyb3Bkb3duLXRvZ2dsZUljb24ge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuXG4uRHJvcGRvd24tY29udGVudCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogdmFyKC0tRHJvcGRvd24tY29udGVudC16LWluZGV4KTtcbiAgdG9wOiAxMDAlO1xuICBsZWZ0OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIGZsb2F0OiBsZWZ0O1xuICBvdmVyZmxvdzogYXV0bztcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICBtYXgtaGVpZ2h0OiBjYWxjKHZhcigtLURyb3Bkb3duLXJoeXRobSkgKiAxNyk7XG4gIG1pbi13aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICB0cmFuc2l0aW9uOiB2YXIoLS1Ecm9wZG93bi10cmFuc2l0aW9uKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBvcGFjaXR5OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1Ecm9wZG93bi1jb250ZW50LWNvbG9yLWJnKTtcbiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDtcbiAgYm94LXNoYWRvdzogMCAwIHZhcigtLURyb3Bkb3duLXJoeXRobSkgcmdiYSgwLDAsMCwwLjEpO1xufVxuXG4uRHJvcGRvd24tY29udGVudC0tQm9yZGVyZWQge1xuICBib3JkZXI6IHZhcigtLURyb3Bkb3duLWNvbnRlbnQtYm9yZGVyKTtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMnB4O1xufVxuXG4uRHJvcGRvd24uaXMtYWN0aXZlID4gLkRyb3Bkb3duLWNvbnRlbnQge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5Ecm9wZG93bi10aXRsZSB7XG4gIGZvbnQtc2l6ZTogY2FsYygxNC8xNiAqIDFyZW0pO1xuICBwYWRkaW5nOiBjYWxjKHZhcigtLURyb3Bkb3duLXJoeXRobSkgKiAuMTI1KSBjYWxjKHZhcigtLURyb3Bkb3duLXJoeXRobSkgKiAuMjUpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1Ecm9wZG93bi10aXRsZS1jb2xvci1iZyk7XG4gIGJvcmRlci1ib3R0b206IHZhcigtLURyb3Bkb3duLWNvbnRlbnQtYm9yZGVyKTtcbiAgY29sb3I6IHZhcigtLURyb3Bkb3duLXRpdGxlLWNvbG9yKTtcbn1cblxuLkRyb3Bkb3duLWl0ZW0ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbGluZS1oZWlnaHQ6IGNhbGModmFyKC0tRHJvcGRvd24tcmh5dGhtKSAqIC44NzUpO1xuICBwYWRkaW5nOiBjYWxjKHZhcigtLURyb3Bkb3duLXJoeXRobSkgKiAuMjUpIGNhbGModmFyKC0tRHJvcGRvd24tcmh5dGhtKSAqIC4yNSk7XG4gIHRyYW5zaXRpb246IHZhcigtLURyb3Bkb3duLWl0ZW0tdHJhbnNpdGlvbik7XG4gIGNvbG9yOiB2YXIoLS1Ecm9wZG93bi1pdGVtLWNvbG9yKTtcbn1cblxuLkRyb3Bkb3duLWl0ZW06aG92ZXIge1xuICBjb2xvcjogdmFyKC0tRHJvcGRvd24taXRlbS1ob3Zlci1jb2xvcik7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLURyb3Bkb3duLWl0ZW0taG92ZXItY29sb3ItYmcpO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyc1xuICovXG5cbi5Ecm9wZG93bi0tcmlnaHQgLkRyb3Bkb3duLWNvbnRlbnQge1xuICBsZWZ0OiBhdXRvO1xuICByaWdodDogMDtcbn1cbiIsIi8qKiBAZGVmaW5lIEhlYWRlcjsgdXNlIHN0cmljdCAqL1xuXG46cm9vdCB7XG4gIC0tSGVhZGVyLWJhY2tncm91bmQgOiAjNGU5ZmRkO1xuICAtLUhlYWRlci1yaHl0aG0gICAgIDogMS41cmVtO1xuICAtLUhlYWRlci16LWluZGV4ICAgIDogOTAwO1xufVxuXG4uSGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tSGVhZGVyLWJhY2tncm91bmQpO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDEwMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgYm94LXNoYWRvdzogMCBjYWxjKHZhcigtLUhlYWRlci1yaHl0aG0pICogLjI1KSB2YXIoLS1IZWFkZXItcmh5dGhtKSByZ2JhKDAsMCwwLDAuMSk7XG59XG5cbi5IZWFkZXItaXRlbSB7XG4gIGhlaWdodDogY2FsYyh2YXIoLS1IZWFkZXItcmh5dGhtKSAqIDIpO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmctdG9wOiBjYWxjKHZhcigtLUhlYWRlci1yaHl0aG0pICogLjUpO1xuICBwYWRkaW5nLWJvdHRvbTogY2FsYyh2YXIoLS1IZWFkZXItcmh5dGhtKSAqIC41KTtcbn1cblxuLkhlYWRlci1hdmF0YXIge1xuICBtYXJnaW4tdG9wOiBjYWxjKHZhcigtLUhlYWRlci1yaHl0aG0pICogLjM3NSk7XG4gIG1hcmdpbi1ib3R0b206IGNhbGModmFyKC0tSGVhZGVyLXJoeXRobSkgKiAuMzc1KTtcbiAgd2lkdGg6IGNhbGModmFyKC0tSGVhZGVyLXJoeXRobSkgKiAxLjI1KTtcbiAgaGVpZ2h0OiBjYWxjKHZhcigtLUhlYWRlci1yaHl0aG0pICogMS4yNSk7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbiIsIi8qKiBAZGVmaW5lIEhlYWRpbmc7IHVzZSBzdHJpY3QgKi9cblxuOnJvb3Qge1xuICAtLUhlYWRpbmctZm9udC1mYW1pbHkgIDogJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhTmV1ZSwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgLS1IZWFkaW5nLWZvbnQtd2VpZ2h0ICA6IDYwMDtcbiAgLS1IZWFkaW5nLXNpemUtaDEgICAgICA6IDM2cHg7XG4gIC0tSGVhZGluZy1zaXplLWgyICAgICAgOiAyOHB4O1xuICAtLUhlYWRpbmctc2l6ZS1oMyAgICAgIDogMjRweDtcbiAgLS1IZWFkaW5nLXNpemUtaDQgICAgICA6IDIwcHg7XG4gIC0tSGVhZGluZy1zaXplLWg1ICAgICAgOiAxOHB4O1xuICAtLUhlYWRpbmctc2l6ZS1oNiAgICAgIDogMTZweDtcbn1cblxuLmgxLFxuLmgyLFxuLmgzLFxuLmg0LFxuLmg1LFxuLmg2IHtcbiAgZm9udC1mYW1pbHk6IHZhcigtLUhlYWRpbmctZm9udC1mYW1pbHkpO1xuICBmb250LXdlaWdodDogdmFyKC0tSGVhZGluZy1mb250LXdlaWdodCk7XG59XG5cbi5oMSB7XG4gIGZvbnQtc2l6ZTogdmFyKC0tSGVhZGluZy1zaXplLWgxKTtcbn1cblxuLmgyIHtcbiAgZm9udC1zaXplOiB2YXIoLS1IZWFkaW5nLXNpemUtaDIpO1xufVxuXG4uaDMge1xuICBmb250LXNpemU6IHZhcigtLUhlYWRpbmctc2l6ZS1oMyk7XG59XG5cbi5oNCB7XG4gIGZvbnQtc2l6ZTogdmFyKC0tSGVhZGluZy1zaXplLWg0KTtcbn1cblxuLmg1IHtcbiAgZm9udC1zaXplOiB2YXIoLS1IZWFkaW5nLXNpemUtaDUpO1xufVxuXG4uaDYge1xuICBmb250LXNpemU6IHZhcigtLUhlYWRpbmctc2l6ZS1oNik7XG59XG5cbi5IZWFkaW5nLS1wYW5lbCB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbWFyZ2luOiAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuIiwiLyoqIEBkZWZpbmUgSWNvbjsgdXNlIHN0cmljdCAqL1xuXG46cm9vdCB7XG4gIC0tSWNvbi1yaHl0aG06IDEuNXJlbTtcbiAgLS1JY29uLXRyYW5zaXRpb24tZWFzZTogY3ViaWMtYmV6aWVyKC4xNzUsIC44ODUsIC4zMjAsIDEuMjc1KTtcbiAgLS1JY29uLXRyYW5zaXRpb246IC4yNXMgYWxsIHZhcigtLUljb24tdHJhbnNpdGlvbi1lYXNlKTtcbn1cblxuLkljb24ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdHJhbnNpdGlvbjogdmFyKC0tSWNvbi10cmFuc2l0aW9uKTtcbn1cblxuLkljb24uaXMtcm90YXRlZCB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG59XG5cbi5JY29uLWl0ZW0ge1xuICB2ZXJ0aWNhbC1hbGlnbjogLTI1JTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogdmFyKC0tSWNvbi1yaHl0aG0pO1xuICBoZWlnaHQ6IHZhcigtLUljb24tcmh5dGhtKTtcbiAgZmlsbDogY3VycmVudENvbG9yICFpbXBvcnRhbnQ7XG59XG5cbi5JY29uLS14bGcgLkljb24taXRlbSB7XG4gIHdpZHRoOiBjYWxjKHZhcigtLUljb24tcmh5dGhtKSAqIDIpO1xuICBoZWlnaHQ6IGNhbGModmFyKC0tSWNvbi1yaHl0aG0pICogMik7XG59XG5cbi5JY29uLS1sZyAuSWNvbi1pdGVtIHtcbiAgd2lkdGg6IGNhbGModmFyKC0tSWNvbi1yaHl0aG0pICogMS41KTtcbiAgaGVpZ2h0OiBjYWxjKHZhcigtLUljb24tcmh5dGhtKSAqIDEuNSk7XG59XG5cbi5JY29uLS1zbSAuSWNvbi1pdGVtIHtcbiAgdmVydGljYWwtYWxpZ246IC0xNSU7XG4gIHdpZHRoOiBjYWxjKHZhcigtLUljb24tcmh5dGhtKSAqIC43NSk7XG4gIGhlaWdodDogY2FsYyh2YXIoLS1JY29uLXJoeXRobSkgKiAuNzUpO1xufVxuXG4uSWNvbi0teHNtIC5JY29uLWl0ZW0ge1xuICB2ZXJ0aWNhbC1hbGlnbjogLTEwJTtcbiAgd2lkdGg6IGNhbGModmFyKC0tSWNvbi1yaHl0aG0pICogLjYyNSk7XG4gIGhlaWdodDogY2FsYyh2YXIoLS1JY29uLXJoeXRobSkgKiAuNjI1KTtcbn1cblxuLkljb24tLWNpcmNsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogY2FsYyh2YXIoLS1JY29uLXJoeXRobSkgKiAuNSk7XG59XG5cbi5JY29uLS1jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGJvcmRlcjogMnB4IHNvbGlkO1xuICBvcGFjaXR5OiAuMjtcbiAgYm9yZGVyLXJhZGl1czogY2FsYyh2YXIoLS1JY29uLXJoeXRobSkgKiAyKTtcbn1cblxuLkljb24tLWNpcmNsZS5JY29uLS1sZyxcbi5JY29uLS1jaXJjbGUuSWNvbi0teGxnIHtcbiAgYm9yZGVyLXdpZHRoOiAzcHg7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tSWNvbi1yaHl0aG0pICogLjc1KTtcbn1cblxuLkljb24tLWNpcmNsZS5JY29uLS1sZyB7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tSWNvbi1yaHl0aG0pICogLjYyNSk7XG59XG5cbi5JY29uLS1jaXJjbGUuSWNvbi0tc20sXG4uSWNvbi0tY2lyY2xlLkljb24tLXhzbSB7XG4gIGJvcmRlci13aWR0aDogMXB4O1xuICBwYWRkaW5nOiBjYWxjKHZhcigtLUljb24tcmh5dGhtKSAqIC4zNzUpO1xufVxuXG4uSWNvbi0tY2lyY2xlLkljb24tLXhzbSB7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tSWNvbi1yaHl0aG0pICogLjI1KTtcbn1cblxuLkljb24tLXN0cm9rZWQgLkljb24taXRlbSB7XG4gIGZpbGw6IG5vbmU7XG4gIHN0cm9rZTogY3VycmVudENvbG9yO1xuICBzdHJva2Utd2lkdGg6IDM7XG59XG5cbi8qIExvYWRlciBJY29uICovXG5cbi5JY29uLS1sb2FkZXIgLkljb24taXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLkljb24tLWxvYWRlci1kb3Qge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMzYuMSU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDI3LjglO1xuICBoZWlnaHQ6IDI3LjglO1xuICBhbmltYXRpb246IGJvdW5jZWRlbGF5IC45cyBpbmZpbml0ZSB2YXIoLS1JY29uLXRyYW5zaXRpb24tZWFzZSk7XG4gIGJvcmRlci1yYWRpdXM6IGNhbGModmFyKC0tSWNvbi1yaHl0aG0pICogMik7XG4gIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgLyogUHJldmVudCBmaXJzdCBmcmFtZSBmcm9tIGZsaWNrZXJpbmcgd2hlbiBhbmltYXRpb24gc3RhcnRzICovXG5cbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbn1cblxuLkljb24tLWxvYWRlci1kb3Q6bnRoLW9mLXR5cGUoMikge1xuICBsZWZ0OiAzNi4xJTtcbiAgYW5pbWF0aW9uLWRlbGF5OiAuMTVzO1xufVxuXG4uSWNvbi0tbG9hZGVyLWRvdDpudGgtb2YtdHlwZSgzKSB7XG4gIHJpZ2h0OiAwO1xuICBsZWZ0OiBhdXRvO1xuICBhbmltYXRpb24tZGVsYXk6IC4zcztcbn1cblxuQGtleWZyYW1lcyBib3VuY2VkZWxheSB7XG4gIDAlLFxuICA5MCUsXG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMCwgMCk7XG4gICAgb3BhY2l0eTogLjI7XG4gIH1cbiAgNDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEsIDEpO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuIiwiLyoqIEBkZWZpbmUgTGlua3M7IHVzZSBzdHJpY3QgKi9cblxuOnJvb3Qge1xuICAtLUxpbmstY29sb3I6ICM0ZTlmZGQ7XG4gIC0tTGluay1jb2xvci1ob3ZlcjogY29sb3IodmFyKC0tTGluay1jb2xvcikgc2hhZGUoMTAlKSk7XG4gIC0tTGluay1jb2xvci1hY3RpdmU6IGNvbG9yKHZhcigtLUxpbmstY29sb3IpIHNoYWRlKDIwJSkpO1xuICAtLUxpbmstY29sb3ItaW52ZXJ0OiAjZmZmO1xuICAtLUxpbmstY29sb3ItaGlnaGxpZ2h0OiAjNGU5ZmRkO1xuICAtLUxpbmstY29sb3Itc3VjY2VzczogIzcwYTk4YjtcbiAgLS1MaW5rLWNvbG9yLXVuc3VyZTogI2UwYzM1MDtcbiAgLS1MaW5rLWNvbG9yLW5ldXRyYWw6IGNvbG9yKCM0MTY5ODggdGludCg1MCUpKTtcbiAgLS1MaW5rLWNvbG9yLXdhcm5pbmc6ICNlMzgyNGU7XG4gIC0tTGluay1jb2xvci1kYW5nZXI6ICNlMDU3NWI7XG59XG5cbi8qKlxuICogRGVmYXVsdFxuICpcbiAqIE1ha2UgYW55dGhpbmcgbG9vayBsaWtlIGEgbGlua1xuICovXG5cbi5MaW5rIHtcbiAgY29sb3I6IHZhcigtLUxpbmstY29sb3IpO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLkxpbms6aG92ZXIge1xuICBjb2xvcjogdmFyKC0tTGluay1jb2xvci1ob3Zlcik7XG59XG5cbi5MaW5rOmFjdGl2ZSB7XG4gIGNvbG9yOiB2YXIoLS1MaW5rLWNvbG9yLWFjdGl2ZSk7XG59XG5cblxuLyogSW52ZXJ0ICovXG5cbi5MaW5rLS1pbnZlcnQge1xuICBvcGFjaXR5OiAwLjg7XG59XG5cbi5MaW5rLS1pbnZlcnQsXG4uTGluay0taW52ZXJ0OmhvdmVyIHtcbiAgY29sb3I6IHZhcigtLUxpbmstY29sb3ItaW52ZXJ0KSAhaW1wb3J0YW50O1xufVxuXG4uTGluay0taW52ZXJ0OmhvdmVyIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLkxpbmstLWludmVydDphY3RpdmUsXG4uTGluay0taW52ZXJ0LmlzLWFjdGl2ZSB7XG4gIG9wYWNpdHk6IDAuNjtcbn1cblxuLyogU3VjY2VzcyAqL1xuXG4uTGluay0tc3VjY2VzcyB7XG4gIGNvbG9yOiB2YXIoLS1MaW5rLWNvbG9yLXN1Y2Nlc3MpICFpbXBvcnRhbnQ7XG59XG5cbi5MaW5rLS1zdWNjZXNzOmhvdmVyIHtcbiAgY29sb3I6IGNvbG9yKHZhcigtLUxpbmstY29sb3Itc3VjY2Vzcykgc2hhZGUoMzAlKSkgIWltcG9ydGFudDtcbn1cblxuLkxpbmstLXN1Y2Nlc3M6YWN0aXZlLFxuLkxpbmstLXN1Y2Nlc3MuaXMtYWN0aXZlIHtcbiAgY29sb3I6IGNvbG9yKHZhcigtLUxpbmstY29sb3Itc3VjY2Vzcykgc2hhZGUoNjAlKSkgIWltcG9ydGFudDtcbn1cblxuLyogVW5zdXJlICovXG5cbi5MaW5rLS11bnN1cmUge1xuICBjb2xvcjogdmFyKC0tTGluay1jb2xvci11bnN1cmUpICFpbXBvcnRhbnQ7XG59XG5cbi5MaW5rLS11bnN1cmU6aG92ZXIge1xuICBjb2xvcjogY29sb3IodmFyKC0tTGluay1jb2xvci11bnN1cmUpIHNoYWRlKDMwJSkpICFpbXBvcnRhbnQ7XG59XG4uTGluay0tdW5zdXJlOmFjdGl2ZSxcbi5MaW5rLS11bnN1cmUuaXMtYWN0aXZlIHtcbiAgY29sb3I6IGNvbG9yKHZhcigtLUxpbmstY29sb3ItdW5zdXJlKSBzaGFkZSg2MCUpKSAhaW1wb3J0YW50O1xufVxuXG4vKiBOZXV0cmFsICovXG5cbi5MaW5rLS1uZXV0cmFsIHtcbiAgY29sb3I6IHZhcigtLUxpbmstY29sb3ItbmV1dHJhbCkgIWltcG9ydGFudDtcbn1cblxuLkxpbmstLW5ldXRyYWw6aG92ZXIge1xuICBjb2xvcjogY29sb3IodmFyKC0tTGluay1jb2xvci1uZXV0cmFsKSBzaGFkZSgzMCUpKSAhaW1wb3J0YW50O1xufVxuXG4uTGluay0tbmV1dHJhbDphY3RpdmUsXG4uTGluay0tbmV1dHJhbC5pcy1hY3RpdmUge1xuICBjb2xvcjogY29sb3IodmFyKC0tTGluay1jb2xvci1uZXV0cmFsKSBzaGFkZSg2MCUpKSAhaW1wb3J0YW50O1xufVxuXG4vKiBXYXJuaW5nICovXG5cbi5MaW5rLS13YXJuaW5nIHtcbiAgY29sb3I6IHZhcigtLUxpbmstY29sb3Itd2FybmluZykgIWltcG9ydGFudDtcbn1cblxuLkxpbmstLXdhcm5pbmc6aG92ZXIge1xuICBjb2xvcjogY29sb3IodmFyKC0tTGluay1jb2xvci13YXJuaW5nKSBzaGFkZSgzMCUpKSAhaW1wb3J0YW50O1xufVxuXG4uTGluay0td2FybmluZzphY3RpdmUsXG4uTGluay0td2FybmluZy5pcy1hY3RpdmUge1xuICBjb2xvcjogY29sb3IodmFyKC0tTGluay1jb2xvci13YXJuaW5nKSBzaGFkZSg2MCUpKSAhaW1wb3J0YW50O1xufVxuXG4vKiBEYW5nZXIgKi9cblxuLkxpbmstLWRhbmdlciB7XG4gIGNvbG9yOiB2YXIoLS1MaW5rLWNvbG9yLWRhbmdlcikgIWltcG9ydGFudDtcbn1cblxuLkxpbmstLWRhbmdlcjpob3ZlciB7XG4gIGNvbG9yOiBjb2xvcih2YXIoLS1MaW5rLWNvbG9yLWRhbmdlcikgc2hhZGUoMzAlKSkgIWltcG9ydGFudDtcbn1cbi5MaW5rLS1kYW5nZXI6YWN0aXZlLFxuLkxpbmstLWRhbmdlci5pcy1hY3RpdmUge1xuICBjb2xvcjogY29sb3IodmFyKC0tTGluay1jb2xvci1kYW5nZXIpIHNoYWRlKDYwJSkpICFpbXBvcnRhbnQ7XG59XG4iLCI6cm9vdCB7XG4gIC0tZGlmZmVyZW5jZS1jb2xvci1hZGRpdGlvbjogI0UwRjJFNztcbiAgLS1kaWZmZXJlbmNlLWNvbG9yLWRlbGV0aW9uOiAjRjRERURGO1xufVxuXG4uRGlmZmVyZW5jZSBpbnMsXG4uRGlmZmVyZW5jZSBkZWwge1xuICBwYWRkaW5nOiAwIDFweDtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xufVxuXG4uRGlmZmVyZW5jZSBpbnMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1kaWZmZXJlbmNlLWNvbG9yLWFkZGl0aW9uKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uRGlmZmVyZW5jZSBkZWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1kaWZmZXJlbmNlLWNvbG9yLWRlbGV0aW9uKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuIiwiLyoqIEBkZWZpbmUgTG9nb0xvYWRlcjsgdXNlIHN0cmljdCAqL1xuXG46cm9vdCB7XG4gIC0tTG9nb0xvYWRlci1jb2xvci1sb2dvOiAjZmZmO1xuICAtLUxvZ29Mb2FkZXItY29sb3ItbG9nby1pbnZlcnQ6ICMyMDcxOEE7XG4gIC0tTG9nb0xvYWRlci1yaHl0aG06IDEuNXJlbTtcbiAgLS1Mb2dvTG9hZGVyLXRyYW5zaXRpb24tZWFzZTogY3ViaWMtYmV6aWVyKC4xNzUsIC44ODUsIC4zMjAsIDEuMjc1KTtcbn1cblxuLkxvZ29Mb2FkZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXRvcDogY2FsYyh2YXIoLS1yaHl0aG0pICogLS4wNjI1KTtcbiAgd2lkdGg6IGNhbGModmFyKC0tTG9nb0xvYWRlci1yaHl0aG0pICogMS42MjUpO1xuICBoZWlnaHQ6IGNhbGModmFyKC0tTG9nb0xvYWRlci1yaHl0aG0pICogMS42MjUpO1xuICBjb2xvcjogdmFyKC0tTG9nb0xvYWRlci1jb2xvci1sb2dvKTtcbiAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG59XG5cbi5Mb2dvTG9hZGVyLS1pbnZlcnRlZCB7XG4gIGNvbG9yOiB2YXIoLS1Mb2dvTG9hZGVyLWNvbG9yLWxvZ28taW52ZXJ0KTtcbn1cblxuLkxvZ29Mb2FkZXItbG9nbyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cyB2YXIoLS1Mb2dvTG9hZGVyLXRyYW5zaXRpb24tZWFzZSk7XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjtcbn1cblxuXG4uTG9nb0xvYWRlci1zdmcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi5Mb2dvTG9hZGVyIHBhdGgge1xuICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlIDA7XG59XG5cbi5Mb2dvTG9hZGVyOmhvdmVyIC5Mb2dvTG9hZGVyLXoge1xuICBhbmltYXRpb246IHBvcCAuM3MgdmFyKC0tTG9nb0xvYWRlci10cmFuc2l0aW9uLWVhc2UpO1xuICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAyO1xuICBhbmltYXRpb24tZGlyZWN0aW9uOiBhbHRlcm5hdGU7XG59XG5cbi5Mb2dvTG9hZGVyLXoge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEsMSk7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzIHZhcigtLUxvZ29Mb2FkZXItdHJhbnNpdGlvbi1lYXNlKTtcbn1cblxuLkxvZ29Mb2FkZXIgLkxvZ29Mb2FkZXItbG9nbyB7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDUwJSA1MCUgMDtcbiAgLyp0cmFuc2Zvcm06IHNjYWxlKC44LCAuOCk7Ki9cbn1cblxuLkxvZ29Mb2FkZXIgLkxvZ29Mb2FkZXItY2lyY2xlLFxuLkxvZ29Mb2FkZXIgLkxvZ29Mb2FkZXItY2lyY2xlUHVsc2Uge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEsIDEpO1xufVxuXG4uTG9nb0xvYWRlci5pcy1sb2FkaW5nIC5Mb2dvTG9hZGVyLXoge1xuICBhbmltYXRpb246IHB1bHNlQmVnaW4gMXMgaW5maW5pdGUgbGluZWFyO1xufVxuXG4uTG9nb0xvYWRlci5pcy1sb2FkaW5nIC5Mb2dvTG9hZGVyLWNpcmNsZSB7XG4gIGFuaW1hdGlvbjogcHVsc2VCZWdpbiAxcyBpbmZpbml0ZSBsaW5lYXI7XG4gIGFuaW1hdGlvbi1kZWxheTogLjFzO1xufVxuXG4uTG9nb0xvYWRlci5pcy1sb2FkaW5nIC5Mb2dvTG9hZGVyLWNpcmNsZVB1bHNlIHtcbiAgYW5pbWF0aW9uOiBwdWxzZSAxcyBpbmZpbml0ZSBsaW5lYXI7XG4gIGFuaW1hdGlvbi1kZWxheTogLjFzO1xufVxuXG5Aa2V5ZnJhbWVzIHB1bHNlQmVnaW4ge1xuICAwJSB7XG4gICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIH1cbiAgMjAlIHtcbiAgICAgdHJhbnNmb3JtOiBzY2FsZSguNik7XG4gIH1cbiAgNDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG4gIH1cbiAgNjAlIHtcbiAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgfVxuICAxMDAlIHtcbiAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHB1bHNlIHtcbiAgMCUge1xuICAgICB0cmFuc2Zvcm06IHNjYWxlKC42KTtcbiAgICAgb3BhY2l0eTogMDtcbiAgfVxuICAyMCUge1xuICAgICB0cmFuc2Zvcm06IHNjYWxlKC42KTtcbiAgfVxuICA0MCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcbiAgICBvcGFjaXR5OiAwLjU7XG4gIH1cbiAgNjAlIHtcbiAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjYpO1xuICAgICBvcGFjaXR5OiAwLjc7XG4gIH1cbiAgMTAwJSB7XG4gICAgIHRyYW5zZm9ybTogc2NhbGUoMik7XG4gICAgIG9wYWNpdHk6IDAuMDtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHBvcCB7XG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxNWRlZykgc2NhbGUoMS4xLCAxLjEpO1xuICB9XG59XG4iLCIvKiogQGRlZmluZSBQcm9ncmVzc2JhcjsgdXNlIHN0cmljdCAqL1xuXG46cm9vdCB7XG4gIC0tUHJvZ3Jlc3NiYXItcmh5dGhtICAgICAgICAgICA6IDEuNXJlbTtcbiAgLS1Qcm9ncmVzc2Jhci1oaWdobGlnaHQgICAgICAgIDogIzRlOWZkZDtcbiAgLS1Qcm9ncmVzc2Jhci1zdWNjZXNzICAgICAgICAgIDogIzcwYTk4YjtcbiAgLS1Qcm9ncmVzc2Jhci11bnN1cmUgICAgICAgICAgIDogI2UwYzM1MDtcbiAgLS1Qcm9ncmVzc2Jhci1uZXV0cmFsICAgICAgICAgIDogY29sb3IoIzQxNjk4OCB0aW50KDUwJSkpO1xuICAtLVByb2dyZXNzYmFyLXdhcm5pbmcgICAgICAgICAgOiAjZTM4MjRlO1xuICAtLVByb2dyZXNzYmFyLWRhbmdlciAgICAgICAgICAgOiAjZTA1NzViO1xuICAtLVByb2dyZXNzYmFyLWl0ZW0tei1pbmRleCAgICAgOiAxMDA7XG4gIC0tUHJvZ3Jlc3NiYXItYXBwcm92ZWQtei1pbmRleCA6IDIwMDtcbn1cblxuLlByb2dyZXNzYmFyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBjYWxjKHZhcigtLVByb2dyZXNzYmFyLXJoeXRobSkgKiAuNSk7XG4gIG1hcmdpbjogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tUHJvZ3Jlc3NiYXItbmV1dHJhbCk7XG59XG5cbi5Qcm9ncmVzc2Jhci0tc20ge1xuICBoZWlnaHQ6IGNhbGModmFyKC0tUHJvZ3Jlc3NiYXItcmh5dGhtKSAqIC4yNSk7XG59XG5cbi5Qcm9ncmVzc2Jhci0tbGcge1xuICBoZWlnaHQ6IHZhcigtLVByb2dyZXNzYmFyLXJoeXRobSk7XG59XG5cbi5Qcm9ncmVzc2Jhci1pdGVtIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiB2YXIoLS1Qcm9ncmVzc2Jhci1pdGVtLXotaW5kZXgpO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi5Qcm9ncmVzc2Jhci1hcHByb3ZlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLVByb2dyZXNzYmFyLWhpZ2hsaWdodCk7XG4gIHotaW5kZXg6IHZhcigtLVByb2dyZXNzYmFyLWFwcHJvdmVkLXotaW5kZXgpO1xufVxuXG4uUHJvZ3Jlc3NiYXItdHJhbnNsYXRlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLVByb2dyZXNzYmFyLXN1Y2Nlc3MpO1xufVxuXG4uUHJvZ3Jlc3NiYXItbmVlZHNXb3JrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tUHJvZ3Jlc3NiYXItdW5zdXJlKTtcbn1cblxuLlByb2dyZXNzYmFyLXVudHJhbnNsYXRlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLVByb2dyZXNzYmFyLW5ldXRyYWwpO1xufVxuIiwiOnJvb3Qge1xuICAtLU1vZGFsLXJoeXRobTogMS41cmVtO1xuICAtLU1vZGFsLWNvbG9yLWJnOiBjb2xvcigjZjBmMmY0IGFscGhhKC45NSkpO1xuICAtLU1vZGFsLXRyYW5zaXRpb246IGFsbCAuMTVzIGxpbmVhcjtcbiAgLS1Nb2RhbC1ib3JkZXI6IDFweCBzb2xpZCBjb2xvcigjNDE2OTg4IGFscGhhKDEyJSkpO1xuICAtLU1vZGFsLWRpYWxvZy10cmFuc2l0aW9uOiBhbGwgLjI1cyBjdWJpYy1iZXppZXIoLjE3NSwgLjg4NSwgLjMyMCwgMS4xKTtcbiAgLS1Nb2RhbC1kaWFsb2ctYm9yZGVyLWJvdHRvbS13aWR0aDogMnB4O1xuICAtLU1vZGFsLWRpYWxvZy1jb2xvci1iZzogY29sb3IoI2YwZjJmNCB0aW50KDYwJSkpO1xuICAtLU1vZGFsLWhlYWRlci1jb2xvci1iZzogI2ZmZjtcbiAgLS1Nb2RhbC10aXRsZS1mb250LXNpemU6IGNhbGMoMjIvMTYgKiAxcmVtKTtcbiAgLS1Nb2RhbC1jbG9zZS10cmFuc2l0aW9uOiBhbGwgLjI1cyBlYXNlLW91dDtcbiAgLS1Nb2RhbC1jbG9zZS1jb2xvci1iZy1ob3ZlcjogY29sb3IoIzQxNjk4OCBhbHBoYSg1JSkpO1xuICAtLU1vZGFsLWNsb3NlLWNvbG9yLWJnLWFjdGl2ZTogY29sb3IoIzQxNjk4OCBhbHBoYSgxMCUpKTtcbiAgLS1Nb2RhbC16LWluZGV4OiAxMDAwO1xuICAtLU1vZGFsLWhlYWRlci16LWluZGV4OiAxMDA7XG59XG5cbi5Nb2RhbCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogdmFyKC0tTW9kYWwtei1pbmRleCk7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6ICBjYWxjKHZhcigtLU1vZGFsLXJoeXRobSkgKiAzKSB2YXIoLS1Nb2RhbC1yaHl0aG0pIHZhcigtLU1vZGFsLXJoeXRobSk7XG4gIHRyYW5zaXRpb246IHZhcigtLU1vZGFsLXRyYW5zaXRpb24pO1xuICBvcGFjaXR5OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1Nb2RhbC1jb2xvci1iZyk7XG5cbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICBwZXJzcGVjdGl2ZTogY2FsYyh2YXIoLS1Nb2RhbC1yaHl0aG0pICogNTApO1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG59XG5cbi5Nb2RhbC5pcy1hY3RpdmUge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICBvcGFjaXR5OiAxO1xufVxuXG4uTW9kYWwtZGlhbG9nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiA5MCU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIG1heC1oZWlnaHQ6IDEwMCU7XG4gIG1pbi13aWR0aDogMzAwcHg7XG4gIG1heC13aWR0aDogY2FsYyh2YXIoLS1Nb2RhbC1yaHl0aG0pICogMzApO1xuICB0cmFuc2l0aW9uOiB2YXIoLS1Nb2RhbC1kaWFsb2ctdHJhbnNpdGlvbik7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKDEwMCUpO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1Nb2RhbC1kaWFsb2ctY29sb3ItYmcpO1xufVxuXG4uTW9kYWwuaXMtYWN0aXZlIC5Nb2RhbC1kaWFsb2cge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuLk1vZGFsLWhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiBjYWxjKHZhcigtLU1vZGFsLXJoeXRobSkgKiAtMik7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3JkZXI6IHZhcigtLU1vZGFsLWJvcmRlcik7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLU1vZGFsLWhlYWRlci1jb2xvci1iZyk7XG4gIHotaW5kZXg6IHZhcigtLU1vZGFsLWhlYWRlci16LWluZGV4KTtcbn1cblxuLk1vZGFsLXRpdGxlIHtcbiAgZm9udC1zaXplOiB2YXIoLS1Nb2RhbC10aXRsZS1mb250LXNpemUpO1xuICBmb250LXdlaWdodDogMzAwO1xuICBsaW5lLWhlaWdodDogdmFyKC0tTW9kYWwtcmh5dGhtKTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiBjYWxjKHZhcigtLU1vZGFsLXJoeXRobSkgKiAuNSkgY2FsYyh2YXIoLS1Nb2RhbC1yaHl0aG0pICogMS41KSBjYWxjKHZhcigtLU1vZGFsLXJoeXRobSkgKiAuNSkgdmFyKC0tTW9kYWwtcmh5dGhtKTtcbn1cblxuLk1vZGFsLWNsb3NlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogY2FsYyh2YXIoLS1Nb2RhbC1yaHl0aG0pICogMik7XG4gIGhlaWdodDogY2FsYyh2YXIoLS1Nb2RhbC1yaHl0aG0pICogMik7XG4gIHRyYW5zaXRpb246IHZhcigtLU1vZGFsLWNsb3NlLXRyYW5zaXRpb24pO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlci1sZWZ0OiB2YXIoLS1Nb2RhbC1ib3JkZXIpO1xufVxuXG4uTW9kYWwtY2xvc2U6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1Nb2RhbC1jbG9zZS1jb2xvci1iZy1ob3Zlcik7XG59XG5cbi5Nb2RhbC1jbG9zZTphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1Nb2RhbC1jbG9zZS1jb2xvci1iZy1hY3RpdmUpO1xufVxuXG4uTW9kYWwtY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWF4LWhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG4gIGJvcmRlcjogdmFyKC0tTW9kYWwtYm9yZGVyKTtcbiAgYm9yZGVyLXRvcC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IHZhcigtLU1vZGFsLWRpYWxvZy1ib3JkZXItYm90dG9tLXdpZHRoKTtcbn1cblxuLyogYm9keSAqL1xuLk1vZGFsLWNvbnRhaW5lci5pcy1tb2RhbCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGhlaWdodDogMTAwJTtcbn1cbiIsIi8qKiBAZGVmaW5lIFRvZ2dsZTsgdXNlIHN0cmljdCAqL1xuXG46cm9vdCB7XG4gIC0tVG9nZ2xlLXJoeXRobTogMS41cmVtO1xuICAtLVRvZ2dsZS1jb2xvcjogY3VycmVudENvbG9yO1xuICAtLVRvZ2dsZS1jb2xvci1hY3RpdmU6ICNmZmY7XG4gIC0tVG9nZ2xlLWNvbG9yLWFjdGl2ZS1pbnZlcnQ6ICMwMDA7XG4gIC0tVG9nZ2xlLWNvbG9yLWJnLWFjdGl2ZTogdmFyKC0tVG9nZ2xlLWNvbG9yKTtcbiAgLS1Ub2dnbGUtdHJhbnNpdGlvbjogYWxsIC4yNXMgY3ViaWMtYmV6aWVyKC4wNzUsIC44MjAsIC4xNjUsIDEuMDAwKTtcbn1cblxuLlRvZ2dsZSxcbi5Ub2dnbGUtbGFiZWwge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5Ub2dnbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWluLXdpZHRoOiBjYWxjKHZhcigtLVRvZ2dsZS1yaHl0aG0pICogMS4zNzUpO1xuICBtYXJnaW46IDAgY2FsYyh2YXIoLS1Ub2dnbGUtcmh5dGhtKSAqIC4wNjI1KTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG5cbi5Ub2dnbGUtY2hlY2tib3gge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGN1cnNvcjogbm9uZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvcGFjaXR5OiAwO1xufVxuXG4uVG9nZ2xlLWxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMCBjYWxjKHZhcigtLVRvZ2dsZS1yaHl0aG0pICogLjM3NSk7XG4gIHRyYW5zaXRpb246IHZhcigtLVRvZ2dsZS10cmFuc2l0aW9uKTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogdmFyKC0tVG9nZ2xlLWNvbG9yKTtcbn1cblxuLlRvZ2dsZS1mYWtlQ2hlY2tib3gge1xuICBvcGFjaXR5OiAxO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgY29udGVudDogJyc7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4uVG9nZ2xlOmhvdmVyID4gLlRvZ2dsZS1mYWtlQ2hlY2tib3gsXG4uVG9nZ2xlLWNoZWNrYm94OmZvY3VzIH4gLlRvZ2dsZS1mYWtlQ2hlY2tib3gge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1Ub2dnbGUtY29sb3ItYmctYWN0aXZlKTtcbiAgb3BhY2l0eTogLjI7XG59XG5cbi5Ub2dnbGUtY2hlY2tib3g6Y2hlY2tlZCB+IC5Ub2dnbGUtbGFiZWwsXG4uVG9nZ2xlLmlzLWFjdGl2ZSB+IC5Ub2dnbGUtbGFiZWwge1xuICBjb2xvcjogdmFyKC0tVG9nZ2xlLWNvbG9yLWFjdGl2ZSk7XG59XG5cbi5Ub2dnbGUtY2hlY2tib3g6Y2hlY2tlZCB+IC5Ub2dnbGUtZmFrZUNoZWNrYm94LFxuLlRvZ2dsZS5pcy1hY3RpdmUgPiAuVG9nZ2xlLWZha2VDaGVja2JveCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLVRvZ2dsZS1jb2xvci1iZy1hY3RpdmUpO1xufVxuXG4uVG9nZ2xlOmhvdmVyID4gLlRvZ2dsZS1jaGVja2JveDpjaGVja2VkIH4gLlRvZ2dsZS1mYWtlQ2hlY2tib3gsXG4uVG9nZ2xlLWNoZWNrYm94OmNoZWNrZWQ6Zm9jdXMgfiAuVG9nZ2xlLWZha2VDaGVja2JveCxcbi5Ub2dnbGUuaXMtYWN0aXZlOmhvdmVyID4gLlRvZ2dsZS1mYWtlQ2hlY2tib3gge1xuICBvcGFjaXR5OiAuODtcbn1cbiIsIi8qKiBAZGVmaW5lIFN3aXRjaDsgdXNlIHN0cmljdCAqL1xuXG4vKlxuXG48c3BhbiBjbGFzcz1cIlN3aXRjaFwiPlxuICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgY2xhc3M9XCJTd2l0Y2gtY2hlY2tib3hcIiAvPlxuICA8bGFiZWwgY2xhc3M9XCJTd2l0Y2gtbGFiZWxcIj5cbiAgICA8c3BhbiBjbGFzcz1cIlN3aXRjaC1sYWJlbFRleHRcIj5Td2l0Y2g8L3NwYW4+XG4gIDwvbGFiZWw+XG48L3NwYW4+XG5cbiovXG5cbjpyb290IHtcbiAgLS1Td2l0Y2gtY29sb3I6ICMyMDcxOEE7XG4gIC0tU3dpdGNoLXJoeXRobTogMS41cmVtO1xufVxuXG4uU3dpdGNoIHtcbiAgcGFkZGluZy1sZWZ0OiBjYWxjKHZhcigtLVN3aXRjaC1yaHl0aG0pICogMS41KTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uU3dpdGNoLWNoZWNrYm94IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBtYXJnaW4tbGVmdDogLTk5OTlweDtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4uU3dpdGNoLWxhYmVsIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uU3dpdGNoLWxhYmVsOmJlZm9yZSxcbi5Td2l0Y2gtbGFiZWw6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICBib3JkZXItcmFkaXVzOiBjYWxjKHZhcigtLVN3aXRjaC1yaHl0aG0pICogLjc1KTtcbiAgdHJhbnNpdGlvbjogYWxsIC4ycyBlYXNlLW91dDtcbn1cblxuLlN3aXRjaC1sYWJlbDpiZWZvcmUge1xuICB3aWR0aDogY2FsYyh2YXIoLS1Td2l0Y2gtcmh5dGhtKSAqIDEuMjUpO1xuICBoZWlnaHQ6IGNhbGModmFyKC0tU3dpdGNoLXJoeXRobSkgKiAuNzUpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih2YXIoLS1Td2l0Y2gtY29sb3IpIHRpbnQoODApKTtcbn1cblxuLlN3aXRjaC1sYWJlbDphZnRlciB7XG4gIHdpZHRoOiBjYWxjKHZhcigtLVN3aXRjaC1yaHl0aG0pICogLjc1KTtcbiAgaGVpZ2h0OiBjYWxjKHZhcigtLVN3aXRjaC1yaHl0aG0pICogLjc1KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IodmFyKC0tU3dpdGNoLWNvbG9yKSB0aW50KDQwKSk7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGUoLjgsIC44KTtcbn1cblxuLlN3aXRjaC1sYWJlbFRleHQge1xuICBjb2xvcjogY29sb3IodmFyKC0tU3dpdGNoLWNvbG9yKSB0aW50KDQwKSk7XG4gIGZvbnQtc2l6ZTogY2FsYygxNC8xNilyZW07XG59XG5cbi5Td2l0Y2gtY2hlY2tib3g6Y2hlY2tlZCB+IC5Td2l0Y2gtbGFiZWw6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tU3dpdGNoLWNvbG9yKTtcbn1cblxuLlN3aXRjaC1jaGVja2JveDpjaGVja2VkIH4gLlN3aXRjaC1sYWJlbDphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKDY2JSkgc2NhbGUoLjgsIC44KTtcbn1cblxuLlN3aXRjaC1jaGVja2JveDpjaGVja2VkIH4gLlN3aXRjaC1sYWJlbCAuU3dpdGNoLWxhYmVsVGV4dCB7XG4gIGNvbG9yOiB2YXIoLS1Td2l0Y2gtY29sb3IpO1xufVxuIiwiLyoqIEBkZWZpbmUgVHJhbnNVbml0OyB1c2Ugc3RyaWN0ICovXG5cbjpyb290IHtcbiAgLS1UcmFuc1VuaXQtYm9yZGVyLWNvbG9yICAgICAgICAgICA6IGNvbG9yKCM0MTY5ODggYWxwaGEoOCUpKTtcbiAgLS1UcmFuc1VuaXQtY29sb3ItZGFuZ2VyICAgICAgICAgICA6ICNlMDU3NWI7XG4gIC0tVHJhbnNVbml0LWNvbG9yLWhpZ2hsaWdodCAgICAgICAgOiAjNGU5ZmRkO1xuICAtLVRyYW5zVW5pdC1jb2xvci1uZXV0cmFsICAgICAgICAgIDogY29sb3IoIzQxNjk4OCB0aW50KDY1JSkpO1xuICAtLVRyYW5zVW5pdC1jb2xvci1zdWNjZXNzICAgICAgICAgIDogIzcwYTk4YjtcbiAgLS1UcmFuc1VuaXQtY29sb3ItdW5zdXJlICAgICAgICAgICA6ICNlMGMzNTA7XG4gIC0tVHJhbnNVbml0LWNvbG9yLXdhcm5pbmcgICAgICAgICAgOiAjZTM4MjRlO1xuICAtLVRyYW5zVW5pdC1jb2xvci1zZWNvbmRhcnkgICAgICAgIDogIzIwNzE4QTtcbiAgLS1UcmFuc1VuaXQtaGVhZGVyLWZvb3Rlci1jb2xvci1iZyA6ICNmZmY7XG4gIC0tVHJhbnNVbml0LWhlYWRpbmctZm9udC1zaXplICAgICAgOiAxcmVtO1xuICAtLVRyYW5zVW5pdC1tZXRhRGF0YUJ1dHRvbi1zaXplICAgIDogY2FsYygxMi8xNiAqIDFyZW0pO1xuICAtLVRyYW5zVW5pdC1yaHl0aG0gICAgICAgICAgICAgICAgIDogMS41cmVtO1xuICAtLVRyYW5zVW5pdC10ZXh0LWZvbnQtZmFtaWx5ICAgICAgIDogJ1NvdXJjZSBTYW5zIFBybycsICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYU5ldWUsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIC0tVHJhbnNVbml0LXRleHQtZm9udC1zaXplICAgICAgICAgOiAxcmVtO1xuICAtLVRyYW5zVW5pdC10ZXh0LWxpbmUtaGVpZ2h0ICAgICAgIDogMS41O1xuICAtLVRyYW5zVW5pdC10ZXh0LWNvbG9yICAgICAgICAgICAgIDogIzQ0NGM1NDtcbiAgLS1UcmFuc1VuaXQtdHJhbnNpdGlvbiAgICAgICAgICAgICA6IG9wYWNpdHkgLjI1cyB2YXIoLS1UcmFuc1VuaXQtdHJhbnNpdGlvbi1lYXNlKTtcbiAgLS1UcmFuc1VuaXQtdHJhbnNpdGlvbi1lYXNlICAgICAgICA6IGN1YmljLWJlemllciguMDc1LCAuODIwLCAuMTY1LCAxLjAwMCk7XG4gIC0tVHJhbnNVbml0LWZvY3VzLWNvbG9yLWJnICAgICAgICAgOiAjZmZmO1xuICAtLVRyYW5zVW5pdC1ob3Zlci1jb2xvci1iZyAgICAgICAgIDogY29sb3IoI2ZmZiBzaGFkZSgzJSkpO1xuICAtLVRyYW5zVW5pdC1zdGF0dXMtei1pbmRleCAgICAgICAgIDogMjAwO1xuICAtLVRyYW5zVW5pdC1zdGF0dXMtYmVmb3JlLXotaW5kZXggIDogMzAwO1xuICAtLVRyYW5zVW5pdC1zdGF0dXMtYWZ0ZXItei1pbmRleCAgIDogNDAwO1xufVxuXG4uVHJhbnNVbml0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGN1cnNvcjogdGV4dDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB2YXIoLS1UcmFuc1VuaXQtYm9yZGVyLWNvbG9yKTtcbn1cblxuLlRyYW5zVW5pdDpmb2N1cyB7XG4gIG91dGxpbmU6IDA7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG59XG5cbi5UcmFuc1VuaXQuaXMtZm9jdXNlZCB7XG4gIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tVHJhbnNVbml0LWZvY3VzLWNvbG9yLWJnKTtcbn1cblxuLlRyYW5zVW5pdDpiZWZvcmUsXG4uVHJhbnNVbml0OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IHZhcigtLVRyYW5zVW5pdC1yaHl0aG0pO1xuICBjb250ZW50OiAnJztcbiAgLyp0cmFuc2l0aW9uOiB2YXIoLS1UcmFuc1VuaXQtdHJhbnNpdGlvbik7Ki9cbiAgdHJhbnNmb3JtOiBzY2FsZVkoMCk7XG4gIG9wYWNpdHk6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLVRyYW5zVW5pdC1mb2N1cy1jb2xvci1iZyk7XG4gIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG59XG5cbi5UcmFuc1VuaXQ6YmVmb3JlIHtcbiAgYm94LXNoYWRvdzogMCBjYWxjKHZhcigtLVRyYW5zVW5pdC1yaHl0aG0pICogLS4yNSkgY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC41KSByZ2JhKDAsMCwwLC4wNCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbTtcbiAgdG9wOiBjYWxjKHZhcigtLVRyYW5zVW5pdC1yaHl0aG0pICogLS43NSk7XG59XG5cbi5UcmFuc1VuaXQ6YWZ0ZXIge1xuICBib3gtc2hhZG93OiAwIGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAuMjUpIGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAuNSkgcmdiYSgwLDAsMCwuMDQpO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XG4gIGJvdHRvbTogY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC0uNzUpO1xufVxuXG4uVHJhbnNVbml0LmlzLWZvY3VzZWQ6YmVmb3JlLFxuLlRyYW5zVW5pdC5pcy1mb2N1c2VkOmFmdGVyIHtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgdHJhbnNmb3JtOiBzY2FsZVkoMSk7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5UcmFuc1VuaXQuaXMtZmlyc3Qge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgdmFyKC0tVHJhbnNVbml0LWJvcmRlci1jb2xvcik7XG59XG5cbi8qIFBhaXIgd2l0aCAuRWRpdG9yLWNvbnRlbnQgKi9cbi5UcmFuc1VuaXQtY29udGFpbmVyLmlzLXVuaXQtc2VsZWN0ZWQgLlRyYW5zVW5pdCB7XG4gIG9wYWNpdHk6IC44O1xufVxuXG5cbi8qKlxuICogUGFuZWxzXG4gKi9cblxuLlRyYW5zVW5pdC1wYW5lbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy10b3A6IGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAuNzUpO1xuICBwYWRkaW5nLWJvdHRvbTogY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC43NSk7XG4gIHBhZGRpbmctbGVmdDogdmFyKC0tVHJhbnNVbml0LXJoeXRobSk7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG5cbi5UcmFuc1VuaXQtaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLlRyYW5zVW5pdC1zb3VyY2Uge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHVzZXItc2VsZWN0OiB0ZXh0O1xufVxuXG4uVHJhbnNVbml0LmlzLWZvY3VzZWQgLlRyYW5zVW5pdC1zb3VyY2Uge1xuICBjdXJzb3I6IHRleHQ7XG59XG5cbi5UcmFuc1VuaXQtdHJhbnNsYXRpb24ge1xuICBjdXJzb3I6IHRleHQ7XG4gIHVzZXItc2VsZWN0OiB0ZXh0O1xufVxuXG4vKipcbiAqIFRyYW5zbGF0aW9uIGFuZCBzb3VyY2UgSGVhZGVyIGFuZCBGb290ZXJcbiAqL1xuXG4uVHJhbnNVbml0LXBhbmVsSGVhZGVyLFxuLlRyYW5zVW5pdC1wYW5lbEZvb3Rlcixcbi5UcmFuc1VuaXQtaXRlbUhlYWRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogdmFyKC0tVHJhbnNVbml0LWhlYWRlci16LWluZGV4KTtcbiAgcmlnaHQ6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLXJpZ2h0OiBjYWxjKHZhcigtLVRyYW5zVW5pdC1yaHl0aG0pICogLjc1KTtcbiAgcGFkZGluZy1sZWZ0OiBjYWxjKHZhcigtLVRyYW5zVW5pdC1yaHl0aG0pICogLjc1KTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4uVHJhbnNVbml0LXBhbmVsSGVhZGVyLFxuLlRyYW5zVW5pdC1wYW5lbEZvb3RlciB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLyp0cmFuc2l0aW9uOiB2YXIoLS1UcmFuc1VuaXQtdHJhbnNpdGlvbik7Ki9cbiAgb3BhY2l0eTogMDtcbn1cblxuLlRyYW5zVW5pdC5pcy1mb2N1c2VkIC5UcmFuc1VuaXQtcGFuZWxIZWFkZXIsXG4uVHJhbnNVbml0LmlzLWZvY3VzZWQgLlRyYW5zVW5pdC1wYW5lbEZvb3RlciB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5UcmFuc1VuaXQtcGFuZWxIZWFkZXIge1xuICB0b3A6IGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAtLjc1KTtcbn1cblxuLlRyYW5zVW5pdC1pdGVtSGVhZGVyIHtcbiAgdG9wOiAwO1xufVxuXG4uVHJhbnNVbml0LXBhbmVsRm9vdGVyIHtcbiAgYm90dG9tOiBjYWxjKHZhcigtLVRyYW5zVW5pdC1yaHl0aG0pICogLS43NSk7XG59XG5cbi5UcmFuc1VuaXQtaGVhZGluZyB7XG4gIGZvbnQtc2l6ZTogdmFyKC0tVHJhbnNVbml0LWhlYWRpbmctZm9udC1zaXplKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAxLjUpO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW46IDA7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5UcmFuc1VuaXQtdGV4dCB7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1UcmFuc1VuaXQtdGV4dC1mb250LWZhbWlseSk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tVHJhbnNVbml0LXRleHQtZm9udC1zaXplKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLVRyYW5zVW5pdC10ZXh0LWxpbmUtaGVpZ2h0KTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IHZhcigtLVRyYW5zVW5pdC1yaHl0aG0pO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAuNzUpO1xuICByZXNpemU6IG5vbmU7XG4gIHRyYW5zaXRpb246IGhlaWdodCAuMXMgdmFyKC0tVHJhbnNVbml0LXRyYW5zaXRpb24tZWFzZTopO1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgdGFiLXNpemU6IDg7XG4gIGNvbG9yOiB2YXIoLS1UcmFuc1VuaXQtdGV4dC1jb2xvcik7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG5cbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4uVHJhbnNVbml0LXRleHQ6Zm9jdXMge1xuICBib3JkZXI6IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIE92ZXJyaWRlIHRleHQgaGlnaGxpZ2h0aW5nIGNoYW5naW5nIHRleHQgZm9ybWF0XG4gKiBvdGhlcndpc2UgaXQgd29uJ3QgYWxpZ25cbiAqL1xuXG4uVHJhbnNVbml0LXRleHQgc3BhbiB7XG4gIGZvbnQtd2VpZ2h0OiA0MDAgIWltcG9ydGFudDtcbiAgZm9udC1zdHlsZTogbm9ybWFsICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogU3RhdHVzIGJhclxuICovXG5cbi5UcmFuc1VuaXQtc3RhdHVzLFxuLlRyYW5zVW5pdC1zdGF0dXM6YmVmb3JlLFxuLlRyYW5zVW5pdC1zdGF0dXM6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IHZhcigtLVRyYW5zVW5pdC1zdGF0dXMtei1pbmRleCk7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiB2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tVHJhbnNVbml0LWNvbG9yLW5ldXRyYWwpO1xufVxuXG4uVHJhbnNVbml0LXN0YXR1cyB7XG4gIHRvcDogLTE7XG4gIGJvdHRvbTogLTE7XG59XG5cbi5UcmFuc1VuaXQtc3RhdHVzLmlzLWxvYWRpbmcsXG4uVHJhbnNVbml0LXN0YXR1cy5pcy1sb2FkaW5nOmJlZm9yZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQoXG4gICAgNDVkZWcsXG4gICAgdHJhbnNwYXJlbnQsXG4gICAgdHJhbnNwYXJlbnQgY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC4yNSksXG4gICAgcmdiYSgyNTUsMjU1LDI1NSwuNSkgY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC4yNSksXG4gICAgcmdiYSgyNTUsMjU1LDI1NSwuNSkgY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC41KVxuICApO1xuICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwMHB4O1xuICBhbmltYXRpb246IGxvYWRpbmcgN3MgbGluZWFyO1xuICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiBpbmZpbml0ZTtcbn1cblxuLlRyYW5zVW5pdC1zdGF0dXM6YmVmb3JlIHtcbiAgdG9wOiBjYWxjKHZhcigtLVRyYW5zVW5pdC1yaHl0aG0pICogLS43NSk7XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZy10b3A6IGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAuNzUpO1xuICBwYWRkaW5nLWJvdHRvbTogY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC43NSk7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICB6LWluZGV4OiB2YXIoLS1UcmFuc1VuaXQtc3RhdHVzLWJlZm9yZS16LWluZGV4KTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBjb250ZW50OiAnJztcbiAgdHJhbnNmb3JtOiBzY2FsZVkoLjY1KTtcbn1cblxuLlRyYW5zVW5pdC1zdGF0dXM6YWZ0ZXIge1xuICB0cmFuc2l0aW9uOiBub25lO1xuICB6LWluZGV4OiB2YXIoLS1UcmFuc1VuaXQtc3RhdHVzLWFmdGVyLXotaW5kZXgpO1xuICB0b3A6IDA7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICB3aWR0aDogY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC44NzUpO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbnRlbnQ6ICcnO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBvcGFjaXR5OiAuNjtcbn1cblxuLlRyYW5zVW5pdC5pcy1mb2N1c2VkIC5UcmFuc1VuaXQtc3RhdHVzOmJlZm9yZSB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIHRyYW5zZm9ybTogc2NhbGVZKDEpO1xufVxuXG4uVHJhbnNVbml0LmlzLWZvY3VzZWQgLlRyYW5zVW5pdC1zdGF0dXM6YWZ0ZXIge1xuICB0b3A6IGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAtLjc1KTtcbiAgcGFkZGluZy10b3A6IGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAuNzUpO1xuICBwYWRkaW5nLWJvdHRvbTogY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC43NSk7XG4gIG9wYWNpdHk6IC44O1xufVxuXG4vKipcbiAqIE1ldGEgZGF0YVxuICovXG5cbi5UcmFuc1VuaXQtbWV0YURhdGEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHJpZ2h0OiAwO1xuICBsZWZ0OiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLlRyYW5zVW5pdC1tZXRhRGF0YUl0ZW0ge1xuICBsaW5lLWhlaWdodDogY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC43NSk7XG59XG5cbi5UcmFuc1VuaXQtbWV0YURhdGFCdXR0b24ge1xuICBmb250LXNpemU6IHZhcigtLVRyYW5zVW5pdC1tZXRhRGF0YUJ1dHRvbi1zaXplKTtcbiAgbGluZS1oZWlnaHQ6IGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAuNCk7XG4gIG9wYWNpdHk6IC44O1xufVxuXG4uVHJhbnNVbml0LW1ldGFEYXRhQnV0dG9uOmhvdmVyIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLlRyYW5zVW5pdC1tZXRhRGF0YUNvbW1lbnRzLFxuLlRyYW5zVW5pdC1tZXRhRGF0YUVycm9ycyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDA7XG4gIGxlZnQ6IDA7XG59XG5cbi5UcmFuc1VuaXQtbWV0YURhdGFDb21tZW50cyB7XG4gIHRvcDogY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC43NSk7XG59XG5cbi5UcmFuc1VuaXQtbWV0YURhdGFFcnJvcnMge1xuICB0b3A6IGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAxLjc1KTtcbn1cblxuLlRyYW5zVW5pdC1tZXRhRGF0YUVycm9yc0ljb24ge1xuICB0ZXh0LXNoYWRvdzogMCAwIDJweCAjZmZmO1xufVxuXG4vKipcbiAqIFNtYWxsIFNpemUgRG93blxuICovXG5cbkBtZWRpYSAoLS1zbS12aWV3cG9ydCkge1xuICAuVHJhbnNVbml0LUhlYWRpbmcge1xuICAgIHBhZGRpbmctbGVmdDogY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIDEpO1xuICB9XG5cbiAgLlRyYW5zVW5pdC1wYW5lbEZvb3RlckxlZnROYXYge1xuICAgIHBhZGRpbmctbGVmdDogY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIDEpO1xuICB9XG5cbn1cblxuLyoqXG4gKiBNZWRpdW0gU2l6ZSBVcFxuICovXG5cbkBtZWRpYSAoLS1ndGVtZC12aWV3cG9ydCkge1xuICAuVHJhbnNVbml0LFxuICAuVHJhbnNVbml0LWl0ZW0ge1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRhYmxlLWxheW91dDogZml4ZWQ7XG4gIH1cblxuICAuVHJhbnNVbml0LXBhbmVsIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG5cbiAgLlRyYW5zVW5pdC1zb3VyY2Uge1xuICAgIHBhZGRpbmctcmlnaHQ6IGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAuNSk7XG4gIH1cblxuICAuVHJhbnNVbml0LXRyYW5zbGF0aW9uIHtcbiAgICBwYWRkaW5nLWxlZnQ6IGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAuNSk7XG4gIH1cblxuICAvKiBDb3ZlciB0aGUgb3ZlcmxhcHBpbmcgaGVhZGVycyAqL1xuXG4gIC5UcmFuc1VuaXQtcGFuZWxIZWFkZXItLXNvdXJjZSxcbiAgLlRyYW5zVW5pdC1wYW5lbEZvb3Rlci0tc291cmNlIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiBjYWxjKHZhcigtLVRyYW5zVW5pdC1yaHl0aG0pICogMS4yNSk7XG4gICAgcmlnaHQ6IGF1dG87XG4gIH1cblxuICAuVHJhbnNVbml0LXBhbmVsSGVhZGVyLS10cmFuc2xhdGlvbixcbiAgLlRyYW5zVW5pdC1wYW5lbEZvb3Rlci0tdHJhbnNsYXRpb24ge1xuICAgIHBhZGRpbmctbGVmdDogY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIDEuMjUpO1xuICAgIGxlZnQ6IGF1dG87XG4gIH1cblxuICAuVHJhbnNVbml0LXN0YXR1cyxcbiAgLlRyYW5zVW5pdC1zdGF0dXM6YmVmb3JlLFxuICAuVHJhbnNVbml0LXN0YXR1czphZnRlciB7XG4gICAgbGVmdDogNTAlO1xuICAgIG1hcmdpbi1sZWZ0OiBjYWxjKHZhcigtLVRyYW5zVW5pdC1yaHl0aG0pICogLS41KTtcbiAgfVxufVxuXG4vKipcbiAqIFN0YXR1cyBiYXIgTW9kaWZpZXJzXG4gKi9cblxuLlRyYW5zVW5pdC0taGlnaGxpZ2h0IC5UcmFuc1VuaXQtc3RhdHVzLFxuLlRyYW5zVW5pdC0taGlnaGxpZ2h0IC5UcmFuc1VuaXQtc3RhdHVzOmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLVRyYW5zVW5pdC1jb2xvci1oaWdobGlnaHQpO1xufVxuXG4uVHJhbnNVbml0LS1zdWNjZXNzIC5UcmFuc1VuaXQtc3RhdHVzLFxuLlRyYW5zVW5pdC0tc3VjY2VzcyAuVHJhbnNVbml0LXN0YXR1czpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1UcmFuc1VuaXQtY29sb3Itc3VjY2Vzcyk7XG59XG5cbi5UcmFuc1VuaXQtLXVuc3VyZSAuVHJhbnNVbml0LXN0YXR1cyxcbi5UcmFuc1VuaXQtLXVuc3VyZSAuVHJhbnNVbml0LXN0YXR1czpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1UcmFuc1VuaXQtY29sb3ItdW5zdXJlKTtcbn1cblxuLlRyYW5zVW5pdC0td2FybmluZyAuVHJhbnNVbml0LXN0YXR1cyxcbi5UcmFuc1VuaXQtLXdhcm5pbmcgLlRyYW5zVW5pdC1zdGF0dXM6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tVHJhbnNVbml0LWNvbG9yLXdhcm5pbmcpO1xufVxuXG4uVHJhbnNVbml0LS1kYW5nZXIgLlRyYW5zVW5pdC1zdGF0dXMsXG4uVHJhbnNVbml0LS1kYW5nZXIgLlRyYW5zVW5pdC1zdGF0dXM6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tVHJhbnNVbml0LWNvbG9yLWRhbmdlcik7XG59XG5cbi5UcmFuc1VuaXQtLXNlY29uZGFyeSAuVHJhbnNVbml0LXN0YXR1cyxcbi5UcmFuc1VuaXQtLXNlY29uZGFyeSAuVHJhbnNVbml0LXN0YXR1czpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1UcmFuc1VuaXQtY29sb3Itc2Vjb25kYXJ5KTtcbn1cblxuLyoqXG4gKiBUeXBlIE1vZGlmaWVyc1xuICovXG5cbi5UcmFuc1VuaXQtLXN1Z2dlc3Rpb246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1UcmFuc1VuaXQtaG92ZXItY29sb3ItYmcpO1xufVxuXG4uVHJhbnNVbml0LS1zdWdnZXN0aW9uIC5UcmFuc1VuaXQtcGFuZWwge1xuICBwYWRkaW5nLXRvcDogY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC41KTtcbiAgcGFkZGluZy1ib3R0b206IGNhbGModmFyKC0tVHJhbnNVbml0LXJoeXRobSkgKiAuNSk7XG59XG5cbi5UcmFuc1VuaXQtLXN1Z2dlc3Rpb24gLlRyYW5zVW5pdC1kZXRhaWxzIHtcbiAgcGFkZGluZy1sZWZ0OiBjYWxjKHZhcigtLVRyYW5zVW5pdC1yaHl0aG0pICogLjc1KTtcbiAgcGFkZGluZy1yaWdodDogY2FsYyh2YXIoLS1UcmFuc1VuaXQtcmh5dGhtKSAqIC43NSk7XG59XG5cbi5UcmFuc1VuaXQtLXN1Z2dlc3Rpb24gLlRyYW5zVW5pdC10ZXh0LS10aWdodCB7XG4gIHBhZGRpbmctdG9wOiAwO1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbn1cblxuQGtleWZyYW1lcyBsb2FkaW5nIHtcbiAgMCUge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDtcbiAgfVxuICAxMDAlIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMDBweDtcbiAgfVxufVxuIiwiLlJlc2l6ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDEwMDA7XG59XG5cbi5SZXNpemVyLS12ZXJ0aWNhbCB7XG4gIGN1cnNvcjogZXctcmVzaXplO1xuICB3aWR0aDogMTJweDtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG59XG5cbi5SZXNpemVyLS1ob3Jpem9udGFsIHtcbiAgaGVpZ2h0OiAxMnB4O1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgY3Vyc29yOiBucy1yZXNpemU7XG59XG4iLCIgIC8qKiBAZGVmaW5lIEVkaXRvcjsgdXNlIHN0cmljdCAqL1xuXG46cm9vdCB7XG4gIC0tRWRpdG9yLXJoeXRobSAgICAgICAgICAgICAgICAgICAgICAgICA6IDEuNXJlbTtcbiAgLS1FZGl0b3ItdHJhbnNpdGlvbi1lYXNlICAgICAgICAgICAgICAgIDogY3ViaWMtYmV6aWVyKC4xNzUsIC44ODUsIC4zMjAsIDEuMjc1KTtcbiAgLS1FZGl0b3ItY29sb3Itc3RhdHVzLWJnICAgICAgICAgICAgICAgIDogY29sb3IoIzQxNjk4OCB0aW50KDgyJSkpO1xuICAtLUVkaXRvci1jb2xvci10cmFuc2xhdGlvbi1iZyAgICAgICAgICAgOiAjRUNFRkYwO1xuICAtLUVkaXRvci1sb2FkZXItei1pbmRleCAgICAgICAgICAgICAgICAgOiA5MDA7XG4gIC0tRWRpdG9yLXBhbmVsLXotaW5kZXggICAgICAgICAgICAgICAgICA6IDIwMDtcbiAgLS1FZGl0b3Itc3VnZ2VzdGlvbnMtaGVhZGVyLXotaW5kZXggICAgIDogMzAwO1xuICAtLUVkaXRvci1zdWdnZXN0aW9uc1NlYXJjaC16LWluZGV4ICAgICAgOiAzMDA7XG59XG5cbi5FZGl0b3Ige1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uRWRpdG9yLWhlYWRlcixcbi5FZGl0b3ItbG9hZGVyIHtcbiAgdHJhbnNpdGlvbjogLjJzIGFsbCB2YXIoLS1FZGl0b3ItdHJhbnNpdGlvbi1lYXNlKTtcbn1cblxuLkVkaXRvci1oZWFkZXIuaXMtbWluaW1pc2VkIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKGNhbGModmFyKC0tRWRpdG9yLXJoeXRobSkgKiAtMikpO1xufVxuXG4uRWRpdG9yLWhlYWRlci5pcy1taW5pbWlzZWQgLkVkaXRvci1tYWluTmF2IHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4uRWRpdG9yLWxvYWRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogdmFyKC0tRWRpdG9yLWxvYWRlci16LWluZGV4KTtcbiAgdG9wOiAwO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIGNhbGModmFyKC0tRWRpdG9yLXJoeXRobSkgKiAuMjUpKTtcbn1cblxuLkVkaXRvci1sb2FkZXIuaXMtbWluaW1pc2VkIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHNjYWxlKC43NSwgLjc1KTtcbn1cblxuLkVkaXRvci1tYWluTmF2IHtcbiAgaGVpZ2h0OiBjYWxjKHZhcigtLUVkaXRvci1yaHl0aG0pICogMik7XG59XG5cbi5FZGl0b3ItY29udGVudCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogY2FsYyh2YXIoLS1FZGl0b3Itcmh5dGhtKSAqIDMuNzUpO1xuICBib3R0b206IDA7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIHdpZHRoOiAxMDAlO1xuICAtd2Via2l0LW92ZXJsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcbn1cblxuLkVkaXRvci1jb250ZW50LmlzLW1heGltaXNlZCB7XG4gIHRvcDogY2FsYyh2YXIoLS1FZGl0b3Itcmh5dGhtKSAqIDEuNzUpO1xufVxuXG4vKlNvIGZpcmVmb3gga2VlcHMgdGhlIGJhY2tncm91bmQgYXQgMTAwJSBoZWlnaHQgd2hlbiB0aGVyZSBhcmUgb25seSBhIGZldyB0cmFuc2xhdGlvbnMqL1xuLkVkaXRvci10cmFuc2xhdGlvbnNXcmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uRWRpdG9yLXRyYW5zbGF0aW9ucyB7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tRWRpdG9yLXJoeXRobSkgKiAyKSAwO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQobGVmdCwgdmFyKC0tRWRpdG9yLWNvbG9yLXN0YXR1cy1iZyksIHZhcigtLUVkaXRvci1jb2xvci1zdGF0dXMtYmcpKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdCBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogdmFyKC0tcmh5dGhtKSAxMDAlO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuXG4uRWRpdG9yLWN1cnJlbnREb2Mge1xuICBtYXgtd2lkdGg6IGNhbGModmFyKC0tRWRpdG9yLXJoeXRobSkgKiAzLjUpO1xufVxuXG4uRWRpdG9yLWN1cnJlbnRMYW5nIHtcbiAgbWF4LXdpZHRoOiBjYWxjKHZhcigtLUVkaXRvci1yaHl0aG0pICogMy41KTtcbn1cblxuLkVkaXRvci1zdWdnZXN0aW9ucyB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogdmFyKC0tRWRpdG9yLXBhbmVsLXotaW5kZXgpO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtaW4taGVpZ2h0OiAzMCU7XG4gIGJveC1zaGFkb3c6IDAgLWNhbGModmFyKC0tRWRpdG9yLXJoeXRobSkgKiAuMTI1KSB2YXIoLS1IZWFkZXItcmh5dGhtKSByZ2JhKDAsMCwwLC4xKTtcbiAgLyp0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTAwJSk7Ki9cbn1cblxuLkVkaXRvci1zdWdnZXN0aW9uc0hlYWRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm94LXNoYWRvdzogMCAxcHggMXB4IHJnYmEoMCwwLDAsMC4xKTtcbiAgei1pbmRleDogdmFyKC0tRWRpdG9yLXN1Z2dlc3Rpb25zLWhlYWRlci16LWluZGV4KTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi5FZGl0b3Itc3VnZ2VzdGlvbnNCb2R5IHtcbiAgLyogRmFsbGJhY2sgKi9cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IGNhbGModmFyKC0tRWRpdG9yLXJoeXRobSkgKiAxLjUpO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBvdmVyZmxvdzogc2Nyb2xsO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cblxuLkVkaXRvci1zdWdnZXN0aW9ucy5pcy1zZWFyY2gtYWN0aXZlIC5FZGl0b3Itc3VnZ2VzdGlvbnNCb2R5IHtcbiAgdG9wOiBjYWxjKHZhcigtLUVkaXRvci1yaHl0aG0pICogMyk7XG59XG5cbi5FZGl0b3Itc3VnZ2VzdGlvbnNTZWFyY2gge1xuICBjbGVhcjogYm90aDtcbn1cblxuLyoqXG4gKiBNZWRpYSBRdWVyaWVzXG4gKi9cblxuQG1lZGlhICgtLXNtLXZpZXdwb3J0KSB7XG4gIC5FZGl0b3ItY3VycmVudFByb2plY3Qge1xuICAgIG1heC13aWR0aDogY2FsYyh2YXIoLS1FZGl0b3Itcmh5dGhtKSAqIDMuNSk7XG4gIH1cbn1cblxuQG1lZGlhICgtLWd0ZW1kLXZpZXdwb3J0KSB7XG4gIC5FZGl0b3ItdHJhbnNsYXRpb25zIHtcbiAgICBiYWNrZ3JvdW5kOlxuICAgICAgbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB2YXIoLS1FZGl0b3ItY29sb3Itc3RhdHVzLWJnKSwgdmFyKC0tRWRpdG9yLWNvbG9yLXN0YXR1cy1iZykpLFxuICAgICAgbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB2YXIoLS1FZGl0b3ItY29sb3ItdHJhbnNsYXRpb24tYmcpLCB2YXIoLS1FZGl0b3ItY29sb3ItdHJhbnNsYXRpb24tYmcpKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOlxuICAgICAgY2VudGVyLFxuICAgICAgcmlnaHQ7XG4gICAgYmFja2dyb3VuZC1zaXplOlxuICAgICAgdmFyKC0tcmh5dGhtKSAxMDAlLFxuICAgICAgNTAlIDEwMCU7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6XG4gICAgICBuby1yZXBlYXQ7XG4gIH1cbn1cbiIsIi8qKlxuKiBUaGVtZSBkZWZpbml0aW9uXG4qXG4qIFRoaXMgZGVmaW5lcyB0aGUgdGhlbWUgaW4gZnVuZGFtZW50YWwgdGVybXMsIGJ1dCBub3QgaG93IGl0IGlzIGFwcGxpZWQgdG9cbiogdGhlIGNvbXBvbmVudHMuIFRoYXQgaXMgZG9uZSBpbiBgdGhlbWUtbWFwLmNzc2AuXG4qL1xuXG4vKipcbiogQnJlYWtwb2ludHNcbiovXG5cbkBjdXN0b20tbWVkaWEgLS1zbS12aWV3cG9ydCAobWluLXdpZHRoOjApIGFuZCAobWF4LXdpZHRoOjc0MHB4KTtcbkBjdXN0b20tbWVkaWEgLS1tZC12aWV3cG9ydCAobWluLXdpZHRoOjc0MXB4KSBhbmQgKG1heC13aWR0aDo5NjBweCk7XG5AY3VzdG9tLW1lZGlhIC0tbHRlbWQtdmlld3BvcnQgKG1heC13aWR0aDo5NjBweCk7XG5AY3VzdG9tLW1lZGlhIC0tZ3RlbWQtdmlld3BvcnQgKG1pbi13aWR0aDo3NDFweCk7XG5AY3VzdG9tLW1lZGlhIC0tbGctdmlld3BvcnQgKG1pbi13aWR0aDo5NjFweCkgYW5kIChtYXgtd2lkdGg6MTI3MHB4KTtcbkBjdXN0b20tbWVkaWEgLS1sdGVsZy12aWV3cG9ydCAobWF4LXdpZHRoOjEyNzBweCk7XG5AY3VzdG9tLW1lZGlhIC0tZ3RlbGctdmlld3BvcnQgKG1pbi13aWR0aDo5NjFweCk7XG5AY3VzdG9tLW1lZGlhIC0teGxnLXZpZXdwb3J0IChtaW4td2lkdGg6MTI3MXB4KTtcblxuXG4vKipcbiAqIENvbG9yc1xuICovXG5cbjpyb290IHtcblxuICAvKiBQcmltYXJ5IGdyZXlzICovXG4gIC0tY29sb3Itd2hpdGUgICAgICAgICA6ICNmZmY7XG4gIC0tY29sb3ItYmxhY2sgICAgICAgICA6ICMwMDA7XG4gIC0tY29sb3ItbGlnaHRlc3QtZ3JleSA6IGNvbG9yKHZhcigtLWNvbG9yLWJsYWNrKSB0aW50KDk1JSkpO1xuICAtLWNvbG9yLWxpZ2h0ZXItZ3JleSAgOiBjb2xvcih2YXIoLS1jb2xvci1ibGFjaykgdGludCg5MCUpKTtcbiAgLS1jb2xvci1saWdodC1ncmV5ICAgIDogY29sb3IodmFyKC0tY29sb3ItYmxhY2spIHRpbnQoODAlKSk7XG4gIC0tY29sb3ItbGlnaHRpc2gtZ3JleSA6IGNvbG9yKHZhcigtLWNvbG9yLWJsYWNrKSB0aW50KDcwJSkpO1xuICAtLWNvbG9yLWdyZXkgICAgICAgICAgOiBjb2xvcih2YXIoLS1jb2xvci1ibGFjaykgdGludCg1MCUpKTtcbiAgLS1jb2xvci1kYXJraXNoLWdyZXkgIDogY29sb3IodmFyKC0tY29sb3ItYmxhY2spIHRpbnQoMzAlKSk7XG4gIC0tY29sb3ItZGFyay1ncmV5ICAgICA6IGNvbG9yKHZhcigtLWNvbG9yLWJsYWNrKSB0aW50KDIwJSkpO1xuICAtLWNvbG9yLWRhcmtlci1ncmV5ICAgOiBjb2xvcih2YXIoLS1jb2xvci1ibGFjaykgdGludCgxMCUpKTtcbiAgLS1jb2xvci1kYXJrZXN0LWdyZXkgIDogY29sb3IodmFyKC0tY29sb3ItYmxhY2spIHRpbnQoNSUpKTtcblxuICAvKiBNYWluIGNvbG9ycyAqL1xuICAtLWNvbG9yLXByaW1hcnkgICAgICAgOiAjMDNBNkQ3O1xuICAtLWNvbG9yLXNlY29uZGFyeSAgICAgOiAjMjA3MThBO1xuXG4gIC8qIEJhY2tncm91bmQgY29sb3JzICovXG4gIC0tY29sb3ItYmcgICAgICAgICAgICA6ICNFQ0VGRjA7XG4gIC0tY29sb3ItYmctbGlnaHRlc3QgICA6IHZhcigtLWNvbG9yLXdoaXRlKTtcbiAgLS1jb2xvci1iZy1saWdodGVyICAgIDogY29sb3IodmFyKC0tY29sb3ItYmcpIHRpbnQoODAlKSk7XG4gIC0tY29sb3ItYmctbGlnaHQgICAgICA6IGNvbG9yKHZhcigtLWNvbG9yLWJnKSB0aW50KDQ2JSkpO1xuICAtLWNvbG9yLWJnLWRhcmsgICAgICAgOiBjb2xvcih2YXIoLS1jb2xvci1iZykgc2hhZGUoMyUpKTtcbiAgLS1jb2xvci1iZy1kYXJrZXIgICAgIDogY29sb3IodmFyKC0tY29sb3ItYmcpIHNoYWRlKDYlKSk7XG4gIC0tY29sb3ItYmctZGFya2VzdCAgICA6IGNvbG9yKHZhcigtLWNvbG9yLWJnKSBzaGFkZSg5JSkpO1xuXG4gIC8qIFN0YXRlIGNvbG9ycyAqL1xuICAtLWNvbG9yLWhpZ2hsaWdodCAgICAgOiB2YXIoLS1jb2xvci1wcmltYXJ5KTtcbiAgLS1jb2xvci1zdWNjZXNzICAgICAgIDogIzVDQ0E3QjtcbiAgLS1jb2xvci11bnN1cmUgICAgICAgIDogI0U5REYxQjtcbiAgLS1jb2xvci13YXJuaW5nICAgICAgIDogI0ZGQTgwMDtcbiAgLS1jb2xvci1kYW5nZXIgICAgICAgIDogI0ZGM0IzRDtcbiAgLS1jb2xvci1uZXV0cmFsICAgICAgIDogY29sb3IodmFyKC0tY29sb3Itc2Vjb25kYXJ5KSB0aW50KDcwJSkpO1xuXG4gIC8qIEZvbnQgY29sb3JzICovXG4gIC0tY29sb3ItYmFzZS1mb250ICAgICA6ICM0NDRjNTQ7XG5cbn1cblxuXG4vKipcbiAqIEZvbnRcbiAqL1xuXG46cm9vdCB7XG5cbiAgLS1mb250LXNpemUtYmFzZSAgICAgICAgOiAxNnB4O1xuICAtLWZvbnQtZmFtaWx5LWJhc2UgICAgICA6ICdTb3VyY2UgU2FucyBQcm8nLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYU5ldWUsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIC0tZm9udC1mYW1pbHktaGVhZGluZyAgIDogdmFyKC0tZm9udC1mYW1pbHktYmFzZSk7XG4gIC0tZm9udC1mYW1pbHktbW9ub3NwYWNlIDogTW9uYWNvLCBDb3VyaWVyLCBtb25vc3BhY2U7XG5cbn1cblxuXG4vKipcbiAqIFN0eWxlIERlZmF1bHRzXG4gKi9cblxuOnJvb3Qge1xuXG4gIC0tZGVmYXVsdC1ib3JkZXItY29sb3IgICAgIDogY29sb3IodmFyKC0tY29sb3Itc2Vjb25kYXJ5KSBhbHBoYSgxMiUpKTtcbiAgLS1kZWZhdWx0LWJvcmRlciAgICAgICAgICAgOiAxcHggc29saWQgdmFyKC0tZGVmYXVsdC1ib3JkZXItY29sb3IpO1xuICAtLWRlZmF1bHQtYm9yZGVyLXJhZGl1cyAgICA6IDJweDtcbiAgLS1kZWZhdWx0LWJveC1zaGFkb3cgICAgICAgOiAwIDFweCAycHggcmdiYSh2YXIoLS1jb2xvci1ibGFjayksIDAuMSk7XG4gIC0tZGVmYXVsdC1ib3gtc2hhZG93LWluc2V0IDogaW5zZXQgMCAxcHggMnB4IHJnYmEodmFyKC0tY29sb3ItYmxhY2spLCAwLjEpO1xuICAtLWRlZmF1bHQtdGV4dC1zaGFkb3cgICAgICA6IDAgMXB4IDJweCByZ2JhKHZhcigtLWNvbG9yLWJsYWNrKSwgMC4xKTtcbiAgLS1kZWZhdWx0LXRyYW5zaXRpb24gICAgICAgOiAwLjJzIGN1YmljLWJlemllciguMjYsIC40NywgLjM2LCAuOTQpO1xuICAtLWRlZmF1bHQtbGluZS1oZWlnaHQgICAgICA6IDEuNTtcblxufVxuXG5cbi8qKlxuICogUmh5dGhtXG4gKi9cblxuOnJvb3Qge1xuXG4gIC0tcmh5dGhtOiBjYWxjKHZhcigtLWRlZmF1bHQtbGluZS1oZWlnaHQpICogMXJlbSk7XG5cbn1cblxuLyoqXG4gKiBUcmFuc2l0aW9uc1xuICovXG5cbjpyb290IHtcblxuICAtLXRyYW5zaXRpb24tZWFzZS1vdXQtYmFjazogY3ViaWMtYmV6aWVyKC4xNzUsIC44ODUsIC4zMjAsIDEuMjc1KTtcbiAgLS10cmFuc2l0aW9uLWVhc2Utb3V0LWNpcmM6IGN1YmljLWJlemllciguMDc1LCAuODIwLCAuMTY1LCAxLjAwMCk7XG5cbn1cblxuLyoqXG4gKiBaLUluZGV4IFNjYWxlXG4gKi9cblxuOnJvb3Qge1xuICAtLXotc2NhbGUtYmVsb3cgOiAtMTtcbiAgLS16LXNjYWxlLTAgICAgIDogMDtcbiAgLS16LXNjYWxlLTEgICAgIDogMTAwO1xuICAtLXotc2NhbGUtMiAgICAgOiAyMDA7XG4gIC0tei1zY2FsZS0zICAgICA6IDMwMDtcbiAgLS16LXNjYWxlLTQgICAgIDogNDAwO1xuICAtLXotc2NhbGUtNSAgICAgOiA1MDA7XG4gIC0tei1zY2FsZS02ICAgICA6IDYwMDtcbiAgLS16LXNjYWxlLTcgICAgIDogNzAwO1xuICAtLXotc2NhbGUtOCAgICAgOiA4MDA7XG4gIC0tei1zY2FsZS05ICAgICA6IDkwMDtcbiAgLS16LXNjYWxlLTEwICAgIDogMTAwMDtcbn1cbiIsIi8qKlxuICpcbiAqIFV0aWxpdGllc1xuICpcbiAqL1xuXG4vKipcbiAqIEJhY2tncm91bmRcbiAqL1xuXG46cm9vdCB7XG4gIC0tdS1iZy10cmFuc2l0aW9uICAgICAgICAgIDogdmFyKC0tZGVmYXVsdC10cmFuc2l0aW9uKTtcbiAgLS11LWJnLWJvcmRlciAgICAgICAgICAgICAgOiB2YXIoLS1kZWZhdWx0LWJvcmRlcik7XG4gIC0tdS1iZy1ib3JkZXItYm90dG9tLXdpZHRoIDogMnB4O1xuICAtLXUtYmctY29sb3IgICAgICAgICAgICAgICA6IHZhcigtLWNvbG9yLWJnKTtcbiAgLS11LWJnLWNvbG9yLWxpZ2h0ZXN0ICAgICAgOiB2YXIoLS1jb2xvci1iZy1saWdodGVzdCk7XG4gIC0tdS1iZy1jb2xvci1saWdodGVyICAgICAgIDogdmFyKC0tY29sb3ItYmctbGlnaHRlcik7XG4gIC0tdS1iZy1jb2xvci1saWdodCAgICAgICAgIDogdmFyKC0tY29sb3ItYmctbGlnaHQpO1xuICAtLXUtYmctY29sb3ItZGFyayAgICAgICAgICA6IHZhcigtLWNvbG9yLWJnLWRhcmspO1xuICAtLXUtYmctY29sb3ItZGFya2VyICAgICAgICA6IHZhcigtLWNvbG9yLWJnLWRhcmtlcik7XG4gIC0tdS1iZy1jb2xvci1kYXJrZXN0ICAgICAgIDogdmFyKC0tY29sb3ItYmctZGFya2VzdCk7XG4gIC0tdS1iZy1jb2xvci1wcmltYXJ5ICAgICAgIDogdmFyKC0tY29sb3ItcHJpbWFyeSk7XG4gIC0tdS1iZy1jb2xvci1zZWNvbmRhcnkgICAgIDogdmFyKC0tY29sb3Itc2Vjb25kYXJ5KTtcbiAgLS11LWJnLWNvbG9yLW5ldXRyYWwgICAgICAgOiB2YXIoLS11LWJnLWNvbG9yKTtcbiAgLS11LWJnLWNvbG9yLWRhbmdlciAgICAgICAgOiBjb2xvcih2YXIoLS1jb2xvci1kYW5nZXIpIHRpbnQoODAlKSk7XG4gIC0tdS1iZy1jb2xvci13YXJuaW5nICAgICAgIDogY29sb3IodmFyKC0tY29sb3Itd2FybmluZykgdGludCg4MCUpKTtcbiAgLS11LWJnLWNvbG9yLXVuc3VyZSAgICAgICAgOiBjb2xvcih2YXIoLS1jb2xvci11bnN1cmUpIHRpbnQoOTAlKSk7XG4gIC0tdS1iZy1jb2xvci1zdWNjZXNzICAgICAgIDogY29sb3IodmFyKC0tY29sb3Itc3VjY2VzcykgdGludCg4MCUpKTtcbiAgLS11LWJnLWNvbG9yLWhpZ2hsaWdodCAgICAgOiBjb2xvcih2YXIoLS1jb2xvci1oaWdobGlnaHQpIHRpbnQoODAlKSk7XG59XG5cbi8qKlxuICogTGlzdFxuICovXG5cbjpyb290IHtcbiAgLS11LWxpc3Qtcmh5dGhtOiB2YXIoLS1yaHl0aG0pO1xufVxuXG4vKipcbiAqIFNpemVcbiAqL1xuXG46cm9vdCB7XG4gIC0tdS1zaXplLXJoeXRobTogdmFyKC0tcmh5dGhtKTtcbn1cblxuLyoqXG4gKiBTcGFjZVxuICovXG5cbjpyb290IHtcbiAgLS11LXNwYWNlLXJoeXRobTogdmFyKC0tcmh5dGhtKTtcbn1cblxuLyoqXG4gKiBEaXNwbGF5XG4gKi9cblxuOnJvb3Qge1xuICAtLXUtZGlzcGxheS1yaHl0aG06IDEuNXJlbTtcbn1cblxuXG4vKipcbiAqIFRleHRcbiAqL1xuXG46cm9vdCB7XG4gIC0tdS10ZXh0LWNvbG9yLWludmVydCAgICA6IHZhcigtLWNvbG9yLWxpZ2h0ZXN0LWdyZXkpO1xuICAtLXUtdGV4dC1jb2xvci1wcmltYXJ5ICAgOiB2YXIoLS1jb2xvci1wcmltYXJ5KTtcbiAgLS11LXRleHQtY29sb3Itc2Vjb25kYXJ5IDogdmFyKC0tY29sb3Itc2Vjb25kYXJ5KTtcbiAgLS11LXRleHQtY29sb3ItaGlnaGxpZ2h0IDogdmFyKC0tY29sb3ItaGlnaGxpZ2h0KTtcbiAgLS11LXRleHQtY29sb3Itc3VjY2VzcyAgIDogdmFyKC0tY29sb3Itc3VjY2Vzcyk7XG4gIC0tdS10ZXh0LWNvbG9yLXVuc3VyZSAgICA6IHZhcigtLWNvbG9yLXVuc3VyZSk7XG4gIC0tdS10ZXh0LWNvbG9yLW5ldXRyYWwgICA6IHZhcigtLWNvbG9yLW5ldXRyYWwpO1xuICAtLXUtdGV4dC1jb2xvci13YXJuaW5nICAgOiB2YXIoLS1jb2xvci13YXJuaW5nKTtcbiAgLS11LXRleHQtY29sb3ItZGFuZ2VyICAgIDogdmFyKC0tY29sb3ItZGFuZ2VyKTtcbiAgLS11LXRleHQtbXV0ZWQtb3BhY2l0eSAgIDogLjY7XG4gIC0tdS10ZXh0LXJoeXRobSAgICAgICAgICA6IHZhcigtLXJoeXRobSk7XG59XG5cblxuLyoqXG4gKlxuICogQ29tcG9uZW50c1xuICpcbiAqL1xuXG4vKipcbiAqIEJhc2VcbiAqL1xuXG46cm9vdCB7XG5cbiAgLyogRm9ybXMgKi9cbiAgLS1iYXNlLWZvcm0tY29sb3ItcGxhY2Vob2xkZXIgOiBjb2xvcih2YXIoLS1jb2xvci1uZXV0cmFsKSBzaGFkZSgxMCUpKTtcblxuICAvKiBHbG9iYWwgKi9cbiAgLS1iYXNlLWZvbnQtc2l6ZSAgICAgICAgICAgICAgOiB2YXIoLS1mb250LXNpemUtYmFzZSk7XG4gIC0tYmFzZS1mb250LWZhbWlseSAgICAgICAgICAgIDogdmFyKC0tZm9udC1mYW1pbHktYmFzZSk7XG4gIC0tYmFzZS1jb2xvci1mb250ICAgICAgICAgICAgIDogdmFyKC0tY29sb3ItYmFzZS1mb250KTtcbiAgLS1iYXNlLWxpbmUtaGVpZ2h0ICAgICAgICAgICAgOiB2YXIoLS1kZWZhdWx0LWxpbmUtaGVpZ2h0KTtcbiAgLS1iYXNlLWJnLWNvbG9yICAgICAgICAgICAgICAgOiB2YXIoLS1jb2xvci1iZyk7XG5cbiAgLyogSGVhZGluZ3MgKi9cbiAgLS1iYXNlLWhlYWRpbmctc2l6ZSAgICAgICAgICAgOiB2YXIoLS1mb250LXNpemUtYmFzZSk7XG4gIC0tYmFzZS1oZWFkaW5nLWNvbG9yICAgICAgICAgIDogdmFyKC0tY29sb3Itc2Vjb25kYXJ5KTtcblxuICAvKiBMaW5rcyAqL1xuICAtLWJhc2UtbGluay1jb2xvciAgICAgICAgICAgICA6IHZhcigtLWNvbG9yLWhpZ2hsaWdodCk7XG4gIC0tYmFzZS1saW5rLWNvbG9yLWhvdmVyICAgICAgIDogY29sb3IodmFyKC0tYmFzZS1saW5rLWNvbG9yKSBzaGFkZSgxMCUpKTtcbiAgLS1iYXNlLWxpbmstY29sb3ItYWN0aXZlICAgICAgOiBjb2xvcih2YXIoLS1iYXNlLWxpbmstY29sb3IpIHNoYWRlKDIwJSkpO1xuXG4gIC8qIExpc3RzICovXG4gIC0tYmFzZS1saXN0LXJoeXRobSAgICAgICAgICAgIDogdmFyKC0tcmh5dGhtKTtcblxuICAvKiBNZWRpYSAqL1xuICAtLW1lZGlhLWZpZ3VyZS1jb2xvciAgICAgICAgICA6IHZhcigtLWNvbG9yLWdyZXkpO1xuXG4gIC8qIE1pc2MgKi9cbiAgLS1iYXNlLW1pc2MtaHItYm9yZGVyICAgICAgICAgOiAxcHggc29saWQ7XG4gIC0tYmFzZS1taXNjLWhyLWJvcmRlci1jb2xvciAgIDogdmFyKC0tZGVmYXVsdC1ib3JkZXItY29sb3IpO1xuXG4gIC8qIFRleHQgKi9cbiAgLS1iYXNlLXRleHQtY29kZS1mb250LWZhbWlseSAgOiB2YXIoLS1mb250LWZhbWlseS1tb25vc3BhY2UpO1xuICAtLWJhc2UtdGV4dC1jb2RlLWZvbnQtc2l6ZSAgICA6IGNhbGMoMTMvMTYgKiAxcmVtKTtcbiAgLS1iYXNlLXRleHQtY29kZS1mb250LWNvbG9yICAgOiB2YXIoLS1jb2xvci1kYXJraXNoLWdyZXkpO1xuICAtLWJhc2UtdGV4dC1jb2RlLWZvbnQtd2VpZ2h0ICA6IDQwMDtcbiAgLS1iYXNlLXRleHQtcmh5dGhtICAgICAgICAgICAgOiB2YXIoLS1yaHl0aG0pO1xuICAtLWJhc2UtdGV4dC1rYmQtYm9yZGVyICAgICAgICA6IDFweCBzb2xpZCBjb2xvcigjNDE2OTg4IGFscGhhKDclKSk7XG4gIC0tYmFzZS10ZXh0LWtiZC1ib3JkZXItYm90dG9tIDogM3B4IHNvbGlkIGNvbG9yKCM0MTY5ODggYWxwaGEoMjAlKSk7XG4gIC0tYmFzZS10ZXh0LWtiZC1jb2xvci1iZyAgICAgIDogdmFyKC0tY29sb3Itd2hpdGUpO1xuXG59XG5cblxuLyoqXG4gKiBCdXR0b25cbiAqL1xuXG46cm9vdCB7XG4gIC0tQnV0dG9uLWJvcmRlci1jb2xvciAgICAgIDogY3VycmVudGNvbG9yO1xuICAtLUJ1dHRvbi1ib3JkZXItd2lkdGggICAgICA6IDA7XG4gIC0tQnV0dG9uLWNvbG9yICAgICAgICAgICAgIDogdHJhbnNwYXJlbnQ7XG4gIC0tQnV0dG9uLWRpc2FibGVkLW9wYWNpdHkgIDogMC42O1xuICAtLUJ1dHRvbi1mb250ICAgICAgICAgICAgICA6IGluaGVyaXQ7XG4gIC0tQnV0dG9uLXBhZGRpbmcgICAgICAgICAgIDogY2FsYyh2YXIoLS1yaHl0aG0pICogLjEyNSkgY2FsYyh2YXIoLS1yaHl0aG0pICogLjUpO1xuICAtLUJ1dHRvbi1wYWRkaW5nLXNudWcgICAgICA6IGNhbGModmFyKC0tcmh5dGhtKSAqIC4yNSk7XG4gIC0tQnV0dG9uLXBhZGRpbmctc21hbGwgICAgIDogY2FsYyh2YXIoLS1yaHl0aG0pICogLjEyNSkgY2FsYyh2YXIoLS1yaHl0aG0pICogLjUpO1xuICAtLUJ1dHRvbi1jb2xvci10ZXh0LWludmVydCA6IHZhcigtLWNvbG9yLXdoaXRlKTtcbiAgLS1CdXR0b24tY29sb3ItZGVmYXVsdCAgICAgOiBjb2xvcih2YXIoLS1jb2xvci1zZWNvbmRhcnkpIHRpbnQoODUlKSk7XG4gIC0tQnV0dG9uLWNvbG9yLXByaW1hcnkgICAgIDogdmFyKC0tY29sb3ItcHJpbWFyeSk7XG4gIC0tQnV0dG9uLWNvbG9yLXNlY29uZGFyeSAgIDogdmFyKC0tY29sb3Itc2Vjb25kYXJ5KTtcbiAgLS1CdXR0b24tY29sb3ItaGlnaGxpZ2h0ICAgOiB2YXIoLS1jb2xvci1oaWdobGlnaHQpO1xuICAtLUJ1dHRvbi1jb2xvci1zdWNjZXNzICAgICA6IHZhcigtLWNvbG9yLXN1Y2Nlc3MpO1xuICAtLUJ1dHRvbi1jb2xvci11bnN1cmUgICAgICA6IHZhcigtLWNvbG9yLXVuc3VyZSk7XG4gIC0tQnV0dG9uLWNvbG9yLW5ldXRyYWwgICAgIDogY29sb3IodmFyKC0tY29sb3Itc2Vjb25kYXJ5KSB0aW50KDUwJSkpO1xuICAtLUJ1dHRvbi1jb2xvci13YXJuaW5nICAgICA6IHZhcigtLWNvbG9yLXdhcm5pbmcpO1xuICAtLUJ1dHRvbi1jb2xvci1kYW5nZXIgICAgICA6IHZhcigtLWNvbG9yLWRhbmdlcik7XG4gIC0tQnV0dG9uLXRyYW5zaXRpb24gICAgICAgIDogYWxsIC4yNXMgdmFyKC0tdHJhbnNpdGlvbi1lYXNlLW91dC1jaXJjKTtcbn1cblxuXG4vKipcbiAqIEJ1dHRvbiBHcm91cFxuICovXG5cbjpyb290IHtcbiAgLS1CdXR0b25Hcm91cC1mb250LXNpemUgICAgICAgICAgIDogMXJlbTtcbiAgLS1CdXR0b25Hcm91cC1idXR0b24tYm9yZGVyLXdpZHRoIDogMDtcbn1cblxuXG4vKipcbiAqIERyb3Bkb3duXG4gKi9cblxuOnJvb3Qge1xuICAtLURyb3Bkb3duLXJoeXRobSAgICAgICAgICAgICAgOiB2YXIoLS1yaHl0aG0pO1xuICAtLURyb3Bkb3duLXRyYW5zaXRpb24gICAgICAgICAgOiBhbGwgLjJzIHZhcigtLXRyYW5zaXRpb24tZWFzZS1vdXQtYmFjayk7XG4gIC0tRHJvcGRvd24tei1pbmRleCAgICAgICAgICAgICA6IHZhcigtLXotc2NhbGUtMSk7XG4gIC0tRHJvcGRvd24tYWN0aXZlLXotaW5kZXggICAgICA6IHZhcigtLXotc2NhbGUtMTApO1xuICAtLURyb3Bkb3duLWNvbnRlbnQtY29sb3ItYmcgICAgOiB2YXIoLS1jb2xvci13aGl0ZSk7XG4gIC0tRHJvcGRvd24tY29udGVudC1ib3JkZXIgICAgICA6IHZhcigtLWRlZmF1bHQtYm9yZGVyKTtcbiAgLS1Ecm9wZG93bi1jb250ZW50LXotaW5kZXggICAgIDogdmFyKC0tei1zY2FsZS04KTtcbiAgLS1Ecm9wZG93bi10aXRsZS1zaXplICAgICAgICAgIDogY2FsYygxNC8xNiAqIDFyZW0pO1xuICAtLURyb3Bkb3duLXRpdGxlLWNvbG9yICAgICAgICAgOiBjb2xvcih2YXIoLS1jb2xvci1zZWNvbmRhcnkpIHRpbnQoNDAlKSk7XG4gIC0tRHJvcGRvd24tdGl0bGUtY29sb3ItYmcgICAgICA6IHRyYW5zcGFyZW50O1xuICAtLURyb3Bkb3duLWl0ZW0tY29sb3IgICAgICAgICAgOiB2YXIoLS1jb2xvci1oaWdobGlnaHQpO1xuICAtLURyb3Bkb3duLWl0ZW0taG92ZXItY29sb3IgICAgOiB2YXIoLS1Ecm9wZG93bi1jb250ZW50LWNvbG9yLWJnKTtcbiAgLS1Ecm9wZG93bi1pdGVtLWhvdmVyLWNvbG9yLWJnIDogdmFyKC0tRHJvcGRvd24taXRlbS1jb2xvcik7XG4gIC0tRHJvcGRvd24taXRlbS10cmFuc2l0aW9uICAgICA6IGFsbCAuMnMgZWFzZS1vdXQ7XG59XG5cblxuLyoqXG4gKiBIZWFkZXJcbiAqL1xuXG46cm9vdCB7XG4gIC0tSGVhZGVyLWJhY2tncm91bmQgOiB2YXIoLS1jb2xvci1wcmltYXJ5KTtcbiAgLS1IZWFkZXItcmh5dGhtICAgICA6IHZhcigtLXJoeXRobSk7XG4gIC0tSGVhZGVyLXotaW5kZXggICAgOiB2YXIoLS16LXNjYWxlLTkpO1xufVxuXG5cbi8qKlxuICogSGVhZGluZ3NcbiAqL1xuXG46cm9vdCB7XG4gIC0tSGVhZGluZy1mb250LWZhbWlseSA6IHZhcigtLWZvbnQtZmFtaWx5LWJhc2UpO1xuICAtLUhlYWRpbmctZm9udC13ZWlnaHQgOiA2MDA7XG4gIC0tSGVhZGluZy1zaXplLWgxICAgICA6IDM2cHg7XG4gIC0tSGVhZGluZy1zaXplLWgyICAgICA6IDI4cHg7XG4gIC0tSGVhZGluZy1zaXplLWgzICAgICA6IDI0cHg7XG4gIC0tSGVhZGluZy1zaXplLWg0ICAgICA6IDIwcHg7XG4gIC0tSGVhZGluZy1zaXplLWg1ICAgICA6IDE4cHg7XG4gIC0tSGVhZGluZy1zaXplLWg2ICAgICA6IDE2cHg7XG59XG5cblxuLyoqXG4gKiBJY29uXG4gKi9cblxuOnJvb3Qge1xuICAtLUljb24tcmh5dGhtICAgICAgICAgIDogdmFyKC0tcmh5dGhtKTtcbiAgLS1JY29uLXRyYW5zaXRpb24tZWFzZSA6IHZhcigtLXRyYW5zaXRpb24tZWFzZS1vdXQtYmFjayk7XG4gIC0tSWNvbi10cmFuc2l0aW9uICAgICAgOiAuMjVzIGFsbCB2YXIoLS1JY29uLXRyYW5zaXRpb24tZWFzZSk7XG59XG5cbi8qKlxuICogTGlua3NcbiAqL1xuXG46cm9vdCB7XG4gIC0tTGluay1jb2xvciAgICAgICAgICAgOiB2YXIoLS1iYXNlLWxpbmstY29sb3IpO1xuICAtLUxpbmstY29sb3ItaG92ZXIgICAgIDogY29sb3IodmFyKC0tTGluay1jb2xvcikgc2hhZGUoMTAlKSk7XG4gIC0tTGluay1jb2xvci1hY3RpdmUgICAgOiBjb2xvcih2YXIoLS1MaW5rLWNvbG9yKSBzaGFkZSgyMCUpKTtcbiAgLS1MaW5rLWNvbG9yLWludmVydCAgICA6IHZhcigtLWNvbG9yLXdoaXRlKTtcbiAgLS1MaW5rLWNvbG9yLW5ldXRyYWwgICA6IHZhcigtLWNvbG9yLW5ldXRyYWwpO1xuICAtLUxpbmstY29sb3ItZGFuZ2VyICAgIDogdmFyKC0tY29sb3ItZGFuZ2VyKTtcbiAgLS1MaW5rLWNvbG9yLXdhcm5pbmcgICA6IHZhcigtLWNvbG9yLXdhcm5pbmcpO1xuICAtLUxpbmstY29sb3ItdW5zdXJlICAgIDogdmFyKC0tY29sb3ItdW5zdXJlKTtcbiAgLS1MaW5rLWNvbG9yLXN1Y2Nlc3MgICA6IHZhcigtLWNvbG9yLXN1Y2Nlc3MpO1xuICAtLUxpbmstY29sb3ItaGlnaGxpZ2h0IDogdmFyKC0tY29sb3ItaGlnaGxpZ2h0KTtcbn1cblxuLyoqXG4gKiBEaWZmZXJlbmNlXG4gKi9cblxuOnJvb3Qge1xuICAtLWRpZmZlcmVuY2UtY29sb3ItYWRkaXRpb246IGNvbG9yKHZhcigtLWNvbG9yLXN1Y2Nlc3MpIHRpbnQoNjclKSk7XG4gIC0tZGlmZmVyZW5jZS1jb2xvci1kZWxldGlvbjogY29sb3IodmFyKC0tY29sb3ItZGFuZ2VyKSB0aW50KDg0JSkpO1xufVxuXG4vKipcbiAqIExvZ29Mb2FkZXJcbiAqL1xuXG46cm9vdCB7XG4gIC0tTG9nb0xvYWRlci1jb2xvci1sb2dvICAgICAgICA6IHZhcigtLWNvbG9yLXdoaXRlKTtcbiAgLS1Mb2dvTG9hZGVyLWNvbG9yLWxvZ28taW52ZXJ0IDogdmFyKC0tY29sb3ItcHJpbWFyeSk7XG4gIC0tTG9nb0xvYWRlci1yaHl0aG0gICAgICAgICAgICA6IHZhcigtLXJoeXRobSk7XG4gIC0tTG9nb0xvYWRlci10cmFuc2l0aW9uLWVhc2UgICA6IHZhcigtLXRyYW5zaXRpb24tZWFzZS1vdXQtYmFjayk7XG59XG5cbi8qKlxuICogTW9kYWxcbiAqL1xuXG46cm9vdCB7XG4gIC0tTW9kYWwtcmh5dGhtICAgICAgICAgICAgICAgICAgICAgOiAxLjVyZW07XG4gIC0tTW9kYWwtY29sb3ItYmcgICAgICAgICAgICAgICAgICAgOiBjb2xvcih2YXIoLS1jb2xvci1iZykgYWxwaGEoLjk1KSk7XG4gIC0tTW9kYWwtdHJhbnNpdGlvbiAgICAgICAgICAgICAgICAgOiBhbGwgLjE1cyBsaW5lYXI7XG4gIC0tTW9kYWwtYm9yZGVyICAgICAgICAgICAgICAgICAgICAgOiAxcHggc29saWQgY29sb3IodmFyKC0tY29sb3Itc2Vjb25kYXJ5KSBhbHBoYSgxMiUpKTtcbiAgLS1Nb2RhbC1kaWFsb2ctdHJhbnNpdGlvbiAgICAgICAgICA6IGFsbCAuMjVzIGN1YmljLWJlemllciguMTc1LCAuODg1LCAuMzIwLCAxLjEpO1xuICAtLU1vZGFsLWRpYWxvZy1ib3JkZXItYm90dG9tLXdpZHRoIDogMnB4O1xuICAtLU1vZGFsLWRpYWxvZy1jb2xvci1iZyAgICAgICAgICAgIDogY29sb3IodmFyKC0tY29sb3ItYmcpIHRpbnQoNjAlKSk7XG4gIC0tTW9kYWwtaGVhZGVyLWNvbG9yLWJnICAgICAgICAgICAgOiB2YXIoLS1jb2xvci13aGl0ZSk7XG4gIC0tTW9kYWwtdGl0bGUtZm9udC1zaXplICAgICAgICAgICAgOiBjYWxjKDIyLzE2ICogMXJlbSk7XG4gIC0tTW9kYWwtY2xvc2UtdHJhbnNpdGlvbiAgICAgICAgICAgOiBhbGwgLjI1cyBlYXNlLW91dDtcbiAgLS1Nb2RhbC1jbG9zZS1jb2xvci1iZy1ob3ZlciAgICAgICA6IGNvbG9yKHZhcigtLWNvbG9yLXNlY29uZGFyeSkgYWxwaGEoNSUpKTtcbiAgLS1Nb2RhbC1jbG9zZS1jb2xvci1iZy1hY3RpdmUgICAgICA6IGNvbG9yKHZhcigtLWNvbG9yLXNlY29uZGFyeSkgYWxwaGEoMTAlKSk7XG4gIC0tTW9kYWwtei1pbmRleCAgICAgICAgICAgICAgICAgICAgOiB2YXIoLS16LXNjYWxlLTEwKTtcbiAgLS1Nb2RhbC1oZWFkZXItei1pbmRleCAgICAgICAgICAgICA6IHZhcigtLXotc2NhbGUtMSk7XG59XG5cbi8qKlxuICogUHJvZ3Jlc3NiYXJcbiAqL1xuXG46cm9vdCB7XG4gIC0tUHJvZ3Jlc3NiYXItcmh5dGhtICAgICAgICAgICA6IHZhcigtLXJoeXRobSk7XG4gIC0tUHJvZ3Jlc3NiYXItaGlnaGxpZ2h0ICAgICAgICA6IHZhcigtLWNvbG9yLWhpZ2hsaWdodCk7XG4gIC0tUHJvZ3Jlc3NiYXItc3VjY2VzcyAgICAgICAgICA6IHZhcigtLWNvbG9yLXN1Y2Nlc3MpO1xuICAtLVByb2dyZXNzYmFyLXVuc3VyZSAgICAgICAgICAgOiB2YXIoLS1jb2xvci11bnN1cmUpO1xuICAtLVByb2dyZXNzYmFyLW5ldXRyYWwgICAgICAgICAgOiB2YXIoLS1jb2xvci1uZXV0cmFsKTtcbiAgLS1Qcm9ncmVzc2Jhci13YXJuaW5nICAgICAgICAgIDogdmFyKC0tY29sb3Itd2FybmluZyk7XG4gIC0tUHJvZ3Jlc3NiYXItZGFuZ2VyICAgICAgICAgICA6IHZhcigtLWNvbG9yLWRhbmdlcik7XG4gIC0tUHJvZ3Jlc3NiYXItaXRlbS16LWluZGV4ICAgICA6IHZhcigtLXotc2NhbGUtMSk7XG4gIC0tUHJvZ3Jlc3NiYXItYXBwcm92ZWQtei1pbmRleCA6IHZhcigtLXotc2NhbGUtMik7XG59XG5cblxuLyoqXG4gKiBUb2dnbGVcbiAqL1xuXG46cm9vdCB7XG4gIC0tVG9nZ2xlLXJoeXRobSAgICAgICAgICAgICAgOiB2YXIoLS1yaHl0aG0pO1xuICAtLVRvZ2dsZS1jb2xvciAgICAgICAgICAgICAgIDogY3VycmVudENvbG9yO1xuICAtLVRvZ2dsZS1jb2xvci1hY3RpdmUgICAgICAgIDogdmFyKC0tY29sb3Itd2hpdGUpO1xuICAtLVRvZ2dsZS1jb2xvci1hY3RpdmUtaW52ZXJ0IDogdmFyKC0tY29sb3ItYmxhY2spO1xuICAtLVRvZ2dsZS1jb2xvci1iZy1hY3RpdmUgICAgIDogdmFyKC0tVG9nZ2xlLWNvbG9yKTtcbiAgLS1Ub2dnbGUtdHJhbnNpdGlvbiAgICAgICAgICA6IGFsbCAuMjVzIHZhcigtLXRyYW5zaXRpb24tZWFzZS1vdXQtY2lyYyk7XG59XG5cbi8qKlxuICogVHJhbnNVbml0XG4gKi9cblxuOnJvb3Qge1xuICAtLVRyYW5zVW5pdC1ib3JkZXItY29sb3IgICAgICAgICAgIDogdmFyKC0tZGVmYXVsdC1ib3JkZXItY29sb3IpO1xuICAtLVRyYW5zVW5pdC1jb2xvci1kYW5nZXIgICAgICAgICAgIDogdmFyKC0tY29sb3ItZGFuZ2VyKTtcbiAgLS1UcmFuc1VuaXQtY29sb3ItaGlnaGxpZ2h0ICAgICAgICA6IHZhcigtLWNvbG9yLWhpZ2hsaWdodCk7XG4gIC0tVHJhbnNVbml0LWNvbG9yLW5ldXRyYWwgICAgICAgICAgOiB2YXIoLS1jb2xvci1uZXV0cmFsKTtcbiAgLS1UcmFuc1VuaXQtY29sb3Itc3VjY2VzcyAgICAgICAgICA6IHZhcigtLWNvbG9yLXN1Y2Nlc3MpO1xuICAtLVRyYW5zVW5pdC1jb2xvci11bnN1cmUgICAgICAgICAgIDogdmFyKC0tY29sb3ItdW5zdXJlKTtcbiAgLS1UcmFuc1VuaXQtY29sb3Itd2FybmluZyAgICAgICAgICA6IHZhcigtLWNvbG9yLXdhcm5pbmcpO1xuICAtLVRyYW5zVW5pdC1oZWFkZXItZm9vdGVyLWNvbG9yLWJnIDogdmFyKC0tY29sb3Itd2hpdGUpO1xuICAtLVRyYW5zVW5pdC1oZWFkaW5nLWZvbnQtc2l6ZSAgICAgIDogMXJlbTtcbiAgLS1UcmFuc1VuaXQtaGVhZGVyLXotaW5kZXggICAgICAgICA6IHZhcigtLXotc2NhbGUtMik7XG4gIC0tVHJhbnNVbml0LW1ldGFEYXRhQnV0dG9uLXNpemUgICAgOiBjYWxjKDEyLzE2ICogMXJlbSk7XG4gIC0tVHJhbnNVbml0LXJoeXRobSAgICAgICAgICAgICAgICAgOiB2YXIoLS1yaHl0aG0pO1xuICAtLVRyYW5zVW5pdC10ZXh0LWZvbnQtZmFtaWx5ICAgICAgIDogdmFyKC0tZm9udC1mYW1pbHktYmFzZSk7XG4gIC0tVHJhbnNVbml0LXRleHQtZm9udC1zaXplICAgICAgICAgOiB2YXIoLS1mb250LXNpemUtYmFzZSk7XG4gIC0tVHJhbnNVbml0LXRleHQtbGluZS1oZWlnaHQgICAgICAgOiB2YXIoLS1kZWZhdWx0LWxpbmUtaGVpZ2h0KTtcbiAgLS1UcmFuc1VuaXQtdGV4dC1jb2xvciAgICAgICAgICAgICA6IHZhcigtLWNvbG9yLWJhc2UtZm9udCk7XG4gIC0tVHJhbnNVbml0LXRyYW5zaXRpb24tZWFzZSAgICAgICAgOiB2YXIoLS10cmFuc2l0aW9uLWVhc2Utb3V0LWNpcmMpO1xuICAtLVRyYW5zVW5pdC10cmFuc2l0aW9uICAgICAgICAgICAgIDogYWxsIC4yNXMgdmFyKC0tVHJhbnNVbml0LXRyYW5zaXRpb24tZWFzZSk7XG4gIC0tVHJhbnNVbml0LWZvY3VzLWNvbG9yLWJnICAgICAgICAgOiB2YXIoLS1jb2xvci13aGl0ZSk7XG4gIC0tVHJhbnNVbml0LWhvdmVyLWNvbG9yLWJnICAgICAgICAgOiB2YXIoLS1jb2xvci1iZy1saWdodGVyKTtcbiAgLS1UcmFuc1VuaXQtc3RhdHVzLXotaW5kZXggICAgICAgICA6IHZhcigtLXotc2NhbGUtMik7XG4gIC0tVHJhbnNVbml0LXN0YXR1cy1iZWZvcmUtei1pbmRleCAgOiB2YXIoLS16LXNjYWxlLTMpO1xufVxuXG4vKipcbiAqXG4gKiBWaWV3c1xuICpcbiAqL1xuXG4vKipcbiAqIEVkaXRvclxuICovXG5cbjpyb290IHtcbiAgLS1FZGl0b3Itcmh5dGhtICAgICAgICAgICAgICAgOiB2YXIoLS1yaHl0aG0pO1xuICAtLUVkaXRvci10cmFuc2l0aW9uLWVhc2UgICAgICA6IHZhcigtLXRyYW5zaXRpb24tZWFzZS1vdXQtYmFjayk7XG4gIC0tRWRpdG9yLWNvbG9yLXN0YXR1cy1iZyAgICAgIDogY29sb3IodmFyKC0tY29sb3Itc2Vjb25kYXJ5KSB0aW50KDgyJSkpO1xuICAtLUVkaXRvci1jb2xvci10cmFuc2xhdGlvbi1iZyA6IHZhcigtLWNvbG9yLWJnKTtcbiAgLS1FZGl0b3ItbG9hZGVyLXotaW5kZXggICAgICAgOiB2YXIoLS16LXNjYWxlLTkpO1xufVxuIl19 */
